[{"C:\\Users\\team_\\Desktop\\mysqltest\\src\\index.js":"1","C:\\Users\\team_\\Desktop\\mysqltest\\src\\App.js":"2","C:\\Users\\team_\\Desktop\\mysqltest\\src\\reportWebVitals.js":"3","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Counseling\\Counseling.js":"4","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Main\\Main.js":"5","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Counseling\\CounselStatus.js":"6","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\LoginPage\\LoginPage.js":"7","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\NavBar\\NavBar.js":"8","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Routes.js":"9","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Member\\Member.js":"10","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\PaymentStatus\\PaymentStatus.js":"11","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Staff\\Swon.js":"12","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\index.js":"13","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\App.js":"14","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\reportWebVitals.js":"15","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\Routes\\Routes.js":"16","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\S010100010.js":"17","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\S010100090.js":"18","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\S010100040.js":"19","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\S010100060.js":"20","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\S010100130.js":"21","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\S010100050.js":"22","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\S010100150.js":"23","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\S010100140.js":"24","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\utils\\Pagination.js":"25","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\S010100070.js":"26","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\utils\\LeaseAgreement.js":"27","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\Dashboard.js":"28","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\Orders.js":"29","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\listItems.js":"30","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\css\\Title.js":"31","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\Title.js":"32","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\utils\\PostCard.js":"33"},{"size":555,"mtime":1609727657789,"results":"34","hashOfConfig":"35"},{"size":240,"mtime":1609727648266,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"35"},{"size":11524,"mtime":1609829204925,"results":"38","hashOfConfig":"35"},{"size":1055,"mtime":1609833591029,"results":"39","hashOfConfig":"35"},{"size":8135,"mtime":1609830177180,"results":"40","hashOfConfig":"35"},{"size":2082,"mtime":1609828498424,"results":"41","hashOfConfig":"35"},{"size":994,"mtime":1609727352401,"results":"42","hashOfConfig":"35"},{"size":1306,"mtime":1609834092417,"results":"43","hashOfConfig":"35"},{"size":4553,"mtime":1609836098390,"results":"44","hashOfConfig":"35"},{"size":4356,"mtime":1609833363720,"results":"45","hashOfConfig":"35"},{"size":5135,"mtime":1609835439756,"results":"46","hashOfConfig":"35"},{"size":502,"mtime":1613487653161,"results":"47","hashOfConfig":"48"},{"size":194,"mtime":1611382711135,"results":"49","hashOfConfig":"48"},{"size":362,"mtime":499162500000,"results":"50","hashOfConfig":"48"},{"size":1756,"mtime":1613844443849,"results":"51","hashOfConfig":"48"},{"size":71370,"mtime":1613844232267,"results":"52","hashOfConfig":"48"},{"size":14479,"mtime":1613717875891,"results":"53","hashOfConfig":"48"},{"size":21460,"mtime":1613842947355,"results":"54","hashOfConfig":"48"},{"size":19897,"mtime":1613844398128,"results":"55","hashOfConfig":"48"},{"size":24131,"mtime":1613844443849,"results":"56","hashOfConfig":"48"},{"size":30145,"mtime":1613843586747,"results":"57","hashOfConfig":"48"},{"size":7190,"mtime":1613635853712,"results":"58","hashOfConfig":"48"},{"size":12740,"mtime":1613842616132,"results":"59","hashOfConfig":"48"},{"size":775,"mtime":1613554840662,"results":"60","hashOfConfig":"48"},{"size":22178,"mtime":1613844443849,"results":"61","hashOfConfig":"48"},{"size":25852,"mtime":1613725008465,"results":"62","hashOfConfig":"48"},{"size":6308,"mtime":1613844443849,"results":"63","hashOfConfig":"48"},{"size":3389,"mtime":1613717991896,"results":"64","hashOfConfig":"48"},{"size":2322,"mtime":1613756400242,"results":"65","hashOfConfig":"48"},{"size":356,"mtime":1613452834720,"results":"66","hashOfConfig":"67"},{"size":356,"mtime":1613452929179,"results":"68","hashOfConfig":"48"},{"size":771,"mtime":1613825634853,"results":"69","hashOfConfig":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"2g9vyx",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"1i31dyy",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"105"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"105"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"105"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"105"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"105"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"105"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pgckxh",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"C:\\Users\\team_\\Desktop\\mysqltest\\src\\index.js",[],["153","154"],"C:\\Users\\team_\\Desktop\\mysqltest\\src\\App.js",[],"C:\\Users\\team_\\Desktop\\mysqltest\\src\\reportWebVitals.js",[],"C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Counseling\\Counseling.js",["155","156"],"import React,{ Component, Fragment,useEffect,useState } from 'react';\r\nimport './Counseling.css';\r\nimport Main from'../Main/Main.js';\r\nimport axios from \"axios\";\r\nimport CounselStatus from './CounselStatus';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//<!--모달창 라이브러리\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n//모달창 라이브러리 끝-->\r\n\r\n//<!--켈린더 라이브러리시작\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport ko from 'date-fns/locale/ko';\r\n\r\nregisterLocale(\"ko\", ko);\r\n//켈린더 라이브러리 끝-->\r\n\r\nvar rNum = '';\r\nvar Rnum = 0;\r\n\r\n\r\nvar Methods = []\r\n\r\nfunction Counseling (props) {\r\n\r\n    const[ConsultRegists, setConsultRegists] = useState([])\r\n\r\n    useEffect(()=>{\r\n        \r\n        axios.post('/api/register/registers')\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    console.log(response.data.rows)\r\n                    setConsultRegists(response.data.rows)\r\n                }else{ \r\n                    alert(\"상세 정보 가져오기를 실패하였습니다.\")\r\n                }\r\n\r\n            })\r\n\r\n    },[])\r\n    \r\n    const[method, setMethod]=useState([])\r\n    \r\n    useEffect(()=>{\r\n        axios.post('/api/register/insertMethod')\r\n        .then(response => {\r\n            if(response.data.success){\r\n                console.log('insertMethod',response.data);\r\n                let arr = [{value: '전체', text: '전체' }]\r\n\r\n                response.data.rows.map((data) => \r\n                    arr.push({\r\n                    value: '[' + data.CD_V + ']' + data.CD_V_MEANING, text: data.CD_V,\r\n                }));\r\n                \r\n                Methods=arr;\r\n\r\n                console.log('insertMethodArr',arr);\r\n            }else{\r\n                alert(\"문의구분 데이터를 불러오는데 실패하였습니다.\");\r\n            }\r\n        })\r\n\r\n        \r\n        \r\n    },[])\r\n\r\n    //<!--모달창 속성 및 이벤트 \r\n    const [open, setOpen] = React.useState(false);\r\n    const [storeOpen, setStoreOpen] = React.useState(false);\r\n    const [CRegists,setCRegists] = useState({});\r\n\r\n\r\n\r\n    //상담등록 모달\r\n    const onhandleClickOpen = () => {\r\n        setStoreOpen(true); \r\n     \r\n     };  \r\n\r\n                //상담등록 저장버튼이벤트\r\n                // const onhandleStoreClose = () => {\r\n                //     setOpen(false);\r\n                // }\r\n            \r\n     const onhandleClose = (event) => {\r\n          \r\n        axios.post('/api/register/registers')\r\n        .then(response => {\r\n            if(response.data.success){\r\n                console.log(response.data.rows)\r\n                setConsultRegists(response.data.rows)\r\n            }else{ \r\n                alert(\"상담등록 페이지 가져오기를 실패하였습니다.\")\r\n            }\r\n\r\n        })\r\n\r\n        setStoreOpen(false);\r\n       };\r\n    //상담등록 모달 끝\r\n\r\n    //상세보기 모달\r\n    const handleClickOpen = (e) => {\r\n       setOpen(true); \r\n       rNum = e.target.innerHTML\r\n       Rnum= parseInt(rNum);\r\n       //console.log(Rnum)\r\n\r\n       axios.get(`/api/register/register_by_id?id=${Rnum}&type=single`) \r\n       .then(response => {\r\n           if(response.data.success){\r\n               console.log(response.data)\r\n               setCRegists(response.data.rows[0])\r\n               //console.log(response.data.consultRegistInfo.num)\r\n           }else{\r\n               alert(\"상세 정보 가져오기를 실패하였습니다.\")\r\n           }\r\n\r\n       })\r\n    };  \r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n      //상세보기 모달 끝 \r\n    //모달창 속성 및 이벤트 끝-->\r\n\r\n\r\n    //<!--캘린더 속성 \r\n    const [startDate, setStartDate] = useState(new Date(\"2020/01/01\"));\r\n    const [endDate, setEndDate] = useState(new Date(\"2022/01/01\"));\r\n    //캘린더 속성 끝--> \r\n\r\n\r\n    //<!--onSubmit\r\n      const onSubmitHandler=(event)=>{\r\n        event.preventDefault();\r\n\r\n        // if(method.valueOf('전체') ||!startDate||!endDate||!searchName){\r\n        //     return alert(\"값을 입력하세요\")\r\n        // }\r\n\r\n         const body = {\r\n            startDate,\r\n            searchName,\r\n            method,\r\n            endDate\r\n        }\r\n        \r\n        //console.log(body);\r\n        \r\n        axios.post(\"/api/register/search\",body)\r\n        .then(response => {\r\n            if(response?.data?.success){\r\n                console.log('search',response.data.rows);\r\n                setConsultRegists(response.data.rows);\r\n            }else{\r\n                alert('검색에 실패하였습니다.')\r\n            }\r\n        })\r\n\r\n      }\r\n    //onSubmit끝-->\r\n    \r\n    \r\n\r\n\r\n    const[searchName, setSearchName] = useState(\"\")\r\n\r\n    const MethodChangeHandler=(event)=>{\r\n        setMethod(event.currentTarget.value);\r\n    }\r\n\r\n    const nameSearchHandler=(event)=>{\r\n        setSearchName(event.currentTarget.value);\r\n    }\r\n\r\n    //console.log('ConsultRegists',ConsultRegists);\r\n\r\n    const resultTable = ConsultRegists.map((ConsultRegists,index)=>{\r\n\r\n        return<tr>\r\n                <td name =\"cname\" variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} id={ConsultRegists.num}><u>{ConsultRegists.num}\r\n                </u></td>\r\n                {/* 모달창 시작 */}\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{CRegists.cname+\"님의 상담내용 입니다.\"}</DialogTitle>\r\n                    <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {CRegists.content}\r\n                    </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        확인\r\n                    </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                {/* 모달창 끝*/}\r\n\r\n                <td>{ConsultRegists.roomtype}</td>\r\n                <td>{ConsultRegists.counseldate}</td>\r\n                <td>{ConsultRegists.method}</td>\r\n                <td>{ConsultRegists.cname}</td>\r\n                <td>{ConsultRegists.phone}</td>\r\n                <td>{ConsultRegists.path}</td>\r\n                \r\n            </tr>\r\n    })\r\n\r\n  \r\n      return (\r\n            <Fragment>\r\n                <Main/>\r\n                \r\n                <div style={{display:'flex', justifyContent:'center',alignItems:'center',width:'100%'}}>\r\n                    <form style = {{display:'flex', flexDirection:'column'}}\r\n                     onSubmit={onSubmitHandler}\r\n                    >\r\n\r\n                    <h1>상담현황</h1>\r\n                    <div id = \"search\">\r\n                        \r\n                        문의일자   \r\n                    {/* date클릭할 때 고정 */}\r\n                        <DatePicker\r\n                            selected={startDate}\r\n                            onChange={date => setStartDate(date)}\r\n                            selectsStart\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                        /> ~ \r\n                        <DatePicker\r\n                            selected={endDate}\r\n                            onChange={date => setEndDate(date)}\r\n                            selectsEnd\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                            minDate={startDate}\r\n                        />\r\n                    \r\n                        {/* <input type=\"image\" src=\"/examples/images/submit_icon.png\" alt=\"제출버튼\" height=\"30\" width=\"30\"/> */}\r\n                        &nbsp;\r\n                       \r\n                        문의구분 \r\n                        <select onChange ={MethodChangeHandler} value ={method}>   \r\n                        \r\n                            {Methods.map(item => ( \r\n                                <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                            ))}\r\n                    \r\n                        </select>\r\n                        &nbsp; \r\n\r\n                        문의자명\r\n                         <input type=\"text\" value = {searchName} id=\"searchlName\" name=\"searchName\" size = \"5\"\r\n                          onChange={nameSearchHandler}/>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                        <button>조회</button>\r\n                    </div>\r\n                \r\n                   \r\n                    <table id = \"btn\">\r\n                        <tr>\r\n                            <td id = \"btd\"> <button className='loginBtn'  onClick={onhandleClickOpen} >상담등록</button> </td>                    \r\n                            <td id = \"btd2\"> <button>엑셀다운로드</button> </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    {/* 모달창 시작 --> 504에러 */}\r\n                        <Dialog\r\n                            open={storeOpen}\r\n                            onClose={onhandleClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                        >\r\n                            <DialogTitle id=\"alert-dialog-title\"><h1>상담등록</h1></DialogTitle>\r\n                            <DialogContent>\r\n                            <DialogContentText id=\"alert-dialog-description\">\r\n                                 <CounselStatus/>\r\n                            </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                            {/* <Button onClick={onhandleStoreClose} color=\"primary\" autoFocus>\r\n                                저장\r\n                            </Button> */}\r\n                            <Button onClick={onhandleClose} color=\"primary\">\r\n                                닫기\r\n                            </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                     {/* // 모달창 끝        */}\r\n\r\n                    \r\n\r\n                    <table id = \"list\">\r\n                        <tr>\r\n                            <th>No</th>\r\n                            <th>문의 구분</th>\r\n                            <th>문의일자</th>\r\n                            <th>문의방법</th>\r\n                            <th>문의자명</th>\r\n                            <th>연락처</th>\r\n                            <th>접근경로</th>\r\n                        </tr>\r\n\r\n                        \r\n                            {resultTable}\r\n                       \r\n\r\n                    </table>\r\n\r\n                    </form>\r\n                </div>\r\n            </Fragment>\r\n      );\r\n    \r\n  }\r\n  \r\n  export default Counseling;","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Main\\Main.js",[],"C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Counseling\\CounselStatus.js",["157","158"],"import React, { useState,useEffect} from 'react';\r\nimport Main from'../Main/Main.js';\r\nimport Axios from 'axios';\r\nimport { addDays } from 'date-fns';\r\n//datepicker 시작\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport ko from 'date-fns/locale/ko';\r\nimport \"./CounselStatus.css\";\r\nregisterLocale(\"ko\", ko);\r\n\r\n//datepicker끝\r\n\r\nlet RoomTypes = []\r\nlet Methods = []\r\nlet Paths = []\r\n\r\nvar registNums = 0;\r\n\r\nfunction CounselStatus(props) {\r\n\r\n    //Lov(List of Value)를 데이터 베이스에서 가져오기 \r\n        //select\r\n        const[RoomType,setRoomType] = useState(1)\r\n        const[Method, setMethod] = useState(1)\r\n        const[Path, setPath] = useState(1)\r\n\r\n        //문의구분\r\n        useEffect(()=>{\r\n            Axios.post('/api/register/roomType')\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    //console.log('roomType',response.data);\r\n                    let arr = [{value: '전체', text: '전체' }]\r\n\r\n                    response.data.rows.map((data) => \r\n                        arr.push({\r\n                        value: '[' + data.CD_V + ']' + data.CD_V_MEANING, text: data.CD_V,\r\n                    }));\r\n                    \r\n                    RoomTypes = arr;\r\n\r\n                    //console.log('roomTypeArr',arr);\r\n                }else{\r\n                    alert(\"문의구분 데이터를 불러오는데 실패하였습니다.\");\r\n                }\r\n            })\r\n\r\n            \r\n            \r\n        },[])\r\n\r\n        //문의방법\r\n\r\n        useEffect(()=>{\r\n            Axios.post('/api/register/methodA')\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    //console.log('method',response.data);\r\n                    let arr = [{value: '전체', text: '전체' }]\r\n\r\n                    response.data.rows.map((data) => \r\n                        arr.push({\r\n                        value: '[' + data.CD_V + ']' + data.CD_V_MEANING, text: data.CD_V,\r\n                    }));\r\n                    \r\n                    Methods = arr;\r\n\r\n                    //console.log('method',arr);\r\n                }else{\r\n                    alert(\"문의구분 데이터를 불러오는데 실패하였습니다.\");\r\n                }\r\n            })\r\n        },[])\r\n\r\n        //접근경로\r\n\r\n        useEffect(()=>{\r\n            Axios.post('/api/register/pathA')\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    //console.log('Paths',response.data);\r\n                    let arr = [{value: '전체', text: '전체' }]\r\n\r\n                    response.data.rows.map((data) => \r\n                        arr.push({\r\n                        value: '[' + data.CD_V + ']' + data.CD_V_MEANING, text: data.CD_V,\r\n                    }));\r\n                    \r\n                    Paths = arr;\r\n\r\n                    //console.log('Paths',arr);\r\n                }else{\r\n                    alert(\"문의구분 데이터를 불러오는데 실패하였습니다.\");\r\n                }\r\n            })\r\n        },[])\r\n    //Lov끝    \r\n\r\n\r\n    \r\n    //datepicker속성 및 이벤트 시작\r\n    const [StartDate, setStartDate] = useState(new Date());\r\n    //datepicker속성 및 이벤트 끝\r\n    console.log(StartDate.getMonth()+1);\r\n    console.log(StartDate);\r\n    \r\n    const[CounselName, setCounselName] = useState(\"\")\r\n    const[UserPhone, setUserPhone] = useState(\"\")\r\n    const[Content, setContent] = useState(\"\")\r\n\r\n\r\n    const onNameHandler=(event)=>{\r\n        setCounselName(event.currentTarget.value);\r\n    }\r\n\r\n    const MethodHandler=(event)=>{\r\n        setMethod(event.currentTarget.value);\r\n    }\r\n\r\n    const PathHandler=(event)=>{\r\n        setPath(event.currentTarget.value);\r\n    }\r\n\r\n    const onPhoneHandler=(event)=>{\r\n        setUserPhone(event.currentTarget.value);\r\n    }\r\n\r\n    const onContentHandler=(event)=>{\r\n        setContent(event.currentTarget.value);\r\n    }\r\n\r\n    const RoomTypeChangeHandler=(event)=>{\r\n        setRoomType(event.currentTarget.value);\r\n    }\r\n\r\n\r\n    const handleFormSubmit=(event)=> {\r\n        \r\n        event.preventDefault();\r\n        //console.log(RoomType)\r\n    \r\n        // if(RoomType.valueOf('전체') ||!CounselName||Method.valueOf('전체')||Path.valueOf('전체')||!UserPhone||!Content){\r\n        //     return alert(\"값을 입력하세요\")\r\n        // }\r\n\r\n        \r\n        \r\n        //서버에 채운 값들을 request로 보낸다.\r\n        const body = {\r\n            roomtype: RoomType,\r\n            counseldate: StartDate,\r\n            cname: CounselName,\r\n            method: Method,\r\n            path: Path,\r\n            phone: UserPhone,\r\n            content: Content\r\n            \r\n        }\r\n        \r\n        \r\n        Axios.post(\"/api/register\",body)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                alert('정상적으로 등록되었습니다.')\r\n               // props.history.push('/counseling')\r\n            }else{\r\n                alert('등록에 실패하였습니다.')\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={handleFormSubmit}>\r\n          {/* <Main/>\r\n          <h1>상담등록</h1> */}\r\n          <table>\r\n            <tr>\r\n                <th>문의구분</th>\r\n                    <td>\r\n                        <select onChange ={RoomTypeChangeHandler} value ={RoomType}>   \r\n                        \r\n                            {RoomTypes.map(item => ( \r\n                                <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                            ))}\r\n                        \r\n                        </select>\r\n                    </td>\r\n\r\n                <th>문의일자</th>\r\n                    <td>   \r\n                    <DatePicker\r\n                        locale=\"ko\"\r\n                        selected={StartDate}\r\n                        onChange={date => setStartDate(date)}\r\n                        minDate={new Date()}\r\n                        maxDate={addDays(new Date(), 0)}  \r\n                        dateFormat=\"yyyy.MM.dd (eee)\"\r\n                    />\r\n\r\n                    </td>\r\n                <th>문의자명</th>\r\n                    <td>\r\n                    <input type=\"text\" value = {CounselName}id=\"counselName\" name=\"counselName\" size = \"7\"\r\n                    onChange={onNameHandler}/>\r\n                    </td>  \r\n            </tr>\r\n\r\n            <tr>\r\n                <th>문의방법</th>\r\n                    <td>\r\n                        <select value={Method} onChange={MethodHandler} >\r\n                        {Methods.map(item=>(\r\n                                <option key = {item.key} value = {item.key}>{item.value}</option>\r\n                        ))}\r\n                        </select>\r\n                    </td>\r\n                <th>접근경로</th>\r\n                    <td>\r\n                        <select value={Path} onChange={PathHandler} >\r\n                            {Paths.map(item =>(\r\n                                <option key = {item.key} value = {item.key}>{item.value}</option>\r\n                            ))}\r\n                            \r\n                        </select>\r\n                    </td>\r\n\r\n                <th>문의자연락처</th>\r\n                    <td>\r\n                    <input type = \"text\" value = {UserPhone}id = \"userPhone\" name = \"userPhone\" size = \"7\"\r\n                    onChange={onPhoneHandler}/>\r\n                    </td>  \r\n            </tr>\r\n\r\n\r\n            <tr>\r\n                <th>상담내용</th>\r\n                    <td colSpan=\"5\">\r\n                        <textarea rows =\"5\" cols = \"100\" value = {Content}id=\"content\" name = \"content\"\r\n                        onChange={onContentHandler}></textarea>\r\n                    </td>\r\n            </tr>\r\n          </table>\r\n          <div id = \"popbtn\"> \r\n            <button type = \"submit\">저장</button>\r\n            {/* <button>닫기</button> */}\r\n          </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n\r\nexport default CounselStatus;",["159","160"],"C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\LoginPage\\LoginPage.js",["161"],"// import { Component, Fragment } from 'react';\r\n// import {useDispatch} from 'react-redux';\r\n//import {loginUser} from '../_actions/user_action';\r\nimport axios from 'axios';\r\nimport React,{Fragment} from 'react';\r\nimport {useState,useEffect} from 'react';\r\nimport Main from'../Main/Main.js'\r\n\r\n\r\nfunction LoginPage( props){\r\n  // const dispatch = useDispatch();\r\n\r\n  const [E_mal,setE_mal] = useState(\"\")\r\n  const [Password, setPassword] = useState(\"\")\r\n\r\n  const onEmailHandler = (event) => {\r\n    setE_mal(event.currentTarget.value)\r\n  }\r\n\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value)\r\n  }\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    let body = {\r\n        Email: E_mal,\r\n        PASSWORD: Password\r\n    }\r\n\r\n   axios.post('/api/users/login',body)\r\n        .then(response => {\r\n            if (response.data.loginResult) {\r\n                alert('로그인 되었습니다.')\r\n                //props.history.push('/counseling')\r\n                console.log(response.data.loginResult)\r\n            } else {\r\n                alert('아이디와 비밀번호를 확인하세요')\r\n            }\r\n        })\r\n      }\r\n\r\n    return (\r\n      <Fragment>\r\n          <Main/>\r\n          <div style={{display:'flex', justifyContent:'center',alignItems:'center',width:'100%',height:'50vh'}}>\r\n            <form style = {{display:'flex', flexDirection:'column'}}\r\n             onSubmit={onSubmitHandler}\r\n            >\r\n              \r\n                <label style={{fontFamily:'Jua',width:'180px'}}>Email</label>\r\n                <input style={{width:\"300px\"}} type = \"email\" value={E_mal} onChange={onEmailHandler} />\r\n                <label style={{fontFamily:'Jua'}}>Password</label>\r\n                <input style={{width:\"300px\"}} type = \"password\" value={Password} onChange={onPasswordHandler}/>\r\n                <br/>\r\n                <button type=\"submit\">Login</button>\r\n            \r\n            \r\n            </form>\r\n          </div>\r\n         \r\n          </Fragment>\r\n    )\r\n}\r\n\r\nexport default LoginPage","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\NavBar\\NavBar.js",[],"C:\\Users\\team_\\Desktop\\mysqltest\\src\\Routes.js",["162"],"import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Member from './Components/Member/Member';\r\nimport Counseling from './Components/Counseling/Counseling';\r\nimport CounselStatus from './Components/Counseling/CounselStatus';\r\nimport LoginPage from './Components/LoginPage/LoginPage';\r\nimport PaymentStatus from './Components/PaymentStatus/PaymentStatus';\r\nimport Swon from './Components/Staff/Swon';\r\nimport Main from './Components/Main/Main';\r\n\r\nexport default () => (\r\n  <Router>\r\n          {/* 메인 */}\r\n          <Route exact path = \"/\" component = {Main}></Route>\r\n\r\n\r\n          {/* 회원현황 */}\r\n          <Route exact path = \"/member\" component = {Member}></Route> \r\n          {/* 납부현황 */}\r\n          <Route path = \"/paymentStatus\" component = {PaymentStatus}></Route>\r\n          {/* 상담현황 */}\r\n          <Route exact path = \"/counseling\" component = {Counseling}></Route>\r\n          {/* 직원관리 */}\r\n          <Route exact path = \"/swon\" component = {Swon}></Route>\r\n          {/* 로그인/로그아웃*/}\r\n          <Route exact path = \"/login\" component = {LoginPage}></Route>\r\n\r\n\r\n\r\n          {/* 상담등록 */}\r\n          <Route exact path = \"/counselStatus\" component = {CounselStatus}></Route>\r\n  </Router>\r\n)\r\n\r\n","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Member\\Member.js",["163","164","165","166","167","168","169","170","171","172","173","174","175"],"import React, { useState,useEffect} from 'react';\r\nimport Main from'../Main/Main.js';\r\nimport Axios from 'axios';\r\n\r\n//datepicker 시작\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport ko from 'date-fns/locale/ko';\r\nregisterLocale(\"ko\", ko);\r\n//datepicker끝\r\n\r\nlet RoomTypes = []\r\nlet Methods = []\r\nlet Paths = []\r\n\r\nvar registNums = 0;\r\n\r\nfunction Member(props) {\r\n\r\n\r\n    const handleFormSubmit=(event)=> {\r\n        \r\n        event.preventDefault();\r\n      \r\n    }\r\n    const[userName,setUserName] = useState(\"\")\r\n    const[bnum,setBnum] = useState(\"\")\r\n    const[ownerName,setOwnerName] = useState(\"\")\r\n    const[userSort,setUserSort] = useState([])\r\n    const[endStatus,setEndStatus] = useState(\"\")\r\n    const[status,setStatus] = useState(\"\")\r\n    return (\r\n      <form onSubmit={handleFormSubmit}>\r\n          <Main/>\r\n          <h1>회원현황</h1>\r\n          <table >\r\n            <tr>\r\n                <th>회원명</th>\r\n                    <td>\r\n                        <input type = \"text\" value = {userName} id = \"userName\" name = \"userName\" size = \"7\"\r\n                        />\r\n                    </td>  \r\n                    {/* onChange={onPhoneHandler} */}\r\n                <th>사업자번호</th>\r\n                    <td>\r\n                        <input type = \"text\" value = {bnum} id = \"bnum\" name = \"bnum\" size = \"7\"\r\n                        />\r\n                    </td>\r\n                <th>대표자명</th>\r\n                    <td>\r\n                        <input type = \"text\" value = {ownerName} id = \"ownerName\" name = \"ownerName\" size = \"7\"\r\n                        />\r\n                    </td>\r\n                <th>회원구분</th>\r\n                    <td>\r\n                        <select value ={userSort}>   {/*  onChange ={RoomTypeChangeHandler}  */}\r\n                        \r\n                            {/* {RoomTypes.map(item => (  */}\r\n                                <option></option>                          \r\n                            {/* ))} */}\r\n                        \r\n                        </select>\r\n                    </td>\r\n                <th>회원구분</th>\r\n                    <td>\r\n                        <select value ={userSort}>   {/*  onChange ={RoomTypeChangeHandler}  */}\r\n                        \r\n                            {/* {RoomTypes.map(item => (  */}\r\n                                <option></option>                          \r\n                            {/* ))} */}\r\n                        \r\n                        </select>\r\n                    </td>\r\n                <th>종류</th>\r\n                    <td>\r\n                        <select value ={endStatus}>  {/*  onChange ={RoomTypeChangeHandler}  */}\r\n                        \r\n                            {/* {RoomTypes.map(item => (  */}\r\n                                <option></option>                          \r\n                            {/* ))} */}\r\n                        \r\n                        </select>\r\n                    </td>\r\n                <th>상태</th>\r\n                    <td>\r\n                        <select value ={status}>   {/*  onChange ={RoomTypeChangeHandler}  */}\r\n                        \r\n                            {/* {RoomTypes.map(item => (  */}\r\n                                <option></option>                          \r\n                            {/* ))} */}\r\n                        \r\n                        </select>\r\n                    </td>\r\n                    \r\n                    <td>\r\n                    <div > \r\n                        <button type = \"submit\">조회</button>\r\n                \r\n                    </div>\r\n                    </td>\r\n\r\n                \r\n            </tr>\r\n               \r\n            \r\n          </table>\r\n          <table>\r\n            <tr>\r\n                <td>\r\n                    <button>신규회원</button>\r\n                    <button>SNS</button>\r\n                    <button>메일전송</button>\r\n                    <button>엑셀다운로드</button>\r\n                </td>\r\n            </tr>\r\n          </table>\r\n          \r\n          <table>\r\n                <tr>\r\n                    <th>No</th>\r\n                    <th>문의 구분</th>\r\n                    <th>문의일자</th>\r\n                    <th>문의방법</th>\r\n                    <th>문의자명</th>\r\n                    <th>연락처</th>\r\n                    <th>접근경로</th>\r\n                </tr>\r\n          </table>\r\n\r\n      </form>\r\n\r\n      \r\n    );\r\n  }\r\n\r\n\r\nexport default Member;","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\PaymentStatus\\PaymentStatus.js",["176"],"import React,{ Component, Fragment,useState } from 'react';\r\nimport Main from'../Main/Main.js';\r\n\r\n//<!--켈린더 라이브러리시작\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport ko from 'date-fns/locale/ko';\r\n\r\nregisterLocale(\"ko\", ko);\r\n//켈린더 라이브러리 끝-->\r\n\r\n\r\n\r\n\r\nfunction PaymentStatus (props) {\r\n\r\n    \r\n    const[userName, setUserName] = useState(\"\")\r\n    const[paymentStatus, setPaymentStatus]=useState([])\r\n    \r\n    //<!--캘린더 속성 \r\n    const [startDate, setStartDate] = useState(new Date(\"2020/01/01\"));\r\n    const [endDate, setEndDate] = useState(new Date(\"2022/01/01\"));\r\n    //캘린더 속성 끝--> \r\n\r\n\r\n    //<!--onSubmit\r\n      const onSubmitHandler=(event)=>{\r\n        event.preventDefault();\r\n      }\r\n    //onSubmit끝-->\r\n    \r\n    const nameSearchHandler=(event)=>{\r\n        setUserName(event.currentTarget.value);\r\n    }\r\n\r\n    const paymentStatusHandler=(event)=>{\r\n        setPaymentStatus(event.currentTarget.value);\r\n    }\r\n    \r\n    const onPaymenthandler=()=>{\r\n        \r\n    }\r\n\r\n\r\n  \r\n      return (\r\n            <Fragment>\r\n                <Main/>\r\n                <div style={{display:'flex', justifyContent:'center',alignItems:'center',width:'100%'}}>\r\n                    <form style = {{display:'flex', flexDirection:'column'}}\r\n                     onSubmit={onSubmitHandler}\r\n                    >\r\n\r\n                    <h1>고객납부현황</h1>\r\n                    <div id = \"search\">\r\n                        \r\n                    납부예정일   \r\n                    {/* date클릭할 때 고정 */}\r\n                        <DatePicker\r\n                            selected={startDate}\r\n                            onChange={date => setStartDate(date)}\r\n                            selectsStart\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                        /> ~ \r\n                        <DatePicker\r\n                            selected={endDate}\r\n                            onChange={date => setEndDate(date)}\r\n                            selectsEnd\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                            minDate={startDate}\r\n                        />\r\n                    \r\n                        {/* <input type=\"image\" src=\"/examples/images/submit_icon.png\" alt=\"제출버튼\" height=\"30\" width=\"30\"/> */}\r\n                        &nbsp;\r\n                        회원명\r\n                         <input type=\"text\" value = {userName} id=\"userName\" name=\"userName\" size = \"5\"\r\n                          onChange={nameSearchHandler}/>\r\n                        &nbsp; \r\n\r\n                        납부여부\r\n                        <select onChange ={paymentStatusHandler} value ={paymentStatus}>   \r\n{/*                         \r\n                            {paymentState.map(item => ( \r\n                                <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                            ))}\r\n                     */}\r\n                        </select>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                        <button>조회</button>\r\n                    </div>\r\n                \r\n                   \r\n                    <table id = \"btn\">\r\n                        <tr>\r\n                            <td id = \"btd\"> <button className='loginBtn'  onClick={onPaymenthandler}> 납부</button> </td>                    \r\n                            <td id = \"btd2\"> <button>엑셀다운로드</button> </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <table id = \"list\">\r\n                        <tr>\r\n                            <th>선택</th>\r\n                            <th>No</th>\r\n                            <th>회원명</th>\r\n                            <th>납부예정일</th>\r\n                            <th>납부여부</th>\r\n                            <th>납부일자</th>\r\n                            <th>계약기간</th>\r\n                            <th>대표자</th>\r\n                        </tr>\r\n    \r\n                    </table>\r\n\r\n                    </form>\r\n                </div>\r\n            </Fragment>\r\n      );\r\n    \r\n  }\r\n  \r\n  export default PaymentStatus;","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Staff\\Swon.js",["177"],"import React,{ Component, Fragment,useState } from 'react';\r\nimport Main from'../Main/Main.js';\r\n\r\n//<!--켈린더 라이브러리시작\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport ko from 'date-fns/locale/ko';\r\n\r\nregisterLocale(\"ko\", ko);\r\n//켈린더 라이브러리 끝-->\r\n\r\n\r\n\r\n\r\nfunction Swon (props) {\r\n\r\n    \r\n    const[staffName, setStaffName] = useState(\"\")\r\n    const[staffClass, setStaffClass] = useState([])\r\n    const[closeStatus, setCloseStatus] = useState([])\r\n    \r\n    \r\n    //<!--캘린더 속성 \r\n    const [startDate, setStartDate] = useState(new Date(\"2020/01/01\"));\r\n    const [endDate, setEndDate] = useState(new Date(\"2022/01/01\"));\r\n    //캘린더 속성 끝--> \r\n\r\n\r\n    //<!--onSubmit\r\n      const onSubmitHandler=(event)=>{\r\n        event.preventDefault();\r\n      }\r\n    //onSubmit끝-->\r\n    \r\n    const staffNameHandler=(event)=>{\r\n        setStaffName(event.currentTarget.value);\r\n    }\r\n\r\n    const staffClassHandler=(event)=>{\r\n        setStaffClass(event.currentTarget.value);\r\n    }\r\n    \r\n    const closeStatusHandler=(event)=>{\r\n        setCloseStatus(event.currentTarget.value);\r\n    }\r\n\r\n    const onRegistHandler = (event)=>{\r\n\r\n    }\r\n    const onModifyHandler = (event)=>{\r\n        \r\n    }\r\n    const onApprovalHandler = (event)=>{\r\n        \r\n    }\r\n  \r\n      return (\r\n            <Fragment>\r\n                <Main/>\r\n                <div style={{display:'flex', justifyContent:'center',alignItems:'center',width:'100%'}}>\r\n                    <form style = {{display:'flex', flexDirection:'column'}}\r\n                     onSubmit={onSubmitHandler}\r\n                    >\r\n\r\n                    <h1>직원현황</h1>\r\n                    <div id = \"search\">\r\n\r\n                     성명\r\n                    <input type=\"text\" value = {staffName} id=\"staffName\" name=\"staffName\" size = \"5\"\r\n                    onChange={staffNameHandler}/>\r\n                    &nbsp; \r\n\r\n\r\n                    입사일자   \r\n                    {/* date클릭할 때 고정 */}\r\n                        <DatePicker\r\n                            selected={startDate}\r\n                            onChange={date => setStartDate(date)}\r\n                            selectsStart\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                        /> ~ \r\n                        <DatePicker\r\n                            selected={endDate}\r\n                            onChange={date => setEndDate(date)}\r\n                            selectsEnd\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                            minDate={startDate}\r\n                        />\r\n                    \r\n                        {/* <input type=\"image\" src=\"/examples/images/submit_icon.png\" alt=\"제출버튼\" height=\"30\" width=\"30\"/> */}\r\n                        &nbsp;\r\n                       \r\n                        직원구분\r\n                        <select onChange ={staffClassHandler} value ={staffClass}>  \r\n                    {/*                         \r\n                            {paymentState.map(item => ( \r\n                                <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                            ))}\r\n                     */}\r\n                     \r\n                        </select>\r\n                        종료\r\n                        <select onChange ={closeStatusHandler} value ={closeStatus}>   \r\n                        </select>\r\n                        \r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                        <button>조회</button>\r\n                    </div>\r\n                \r\n                   \r\n                    <table id = \"btn\">\r\n                        <tr>\r\n                            <td id = \"btd\"> <button className='loginBtn'  onClick={onRegistHandler}> 등록</button> </td>\r\n                            <td id = \"btd\"> <button className='loginBtn'  onClick={onModifyHandler}> 수정</button> </td>    \r\n                            <td id = \"btd\"> <button className='loginBtn'  onClick={onApprovalHandler}> 승인</button> </td>                        \r\n                            <td id = \"btd2\"> <button>엑셀다운로드</button> </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <table id = \"list\">\r\n                        <tr>\r\n                            <th>선택</th>\r\n                            <th>직번</th>\r\n                            <th>성명</th>\r\n                            <th>주민번호</th>\r\n                            <th>부서</th>\r\n                            <th>연락처</th>\r\n                            <th>E-mail</th>\r\n                            <th>직원구분</th>\r\n                            <th>승인여부</th>\r\n                            <th>직급</th>\r\n                        </tr>\r\n    \r\n                    </table>\r\n\r\n                    </form>\r\n                </div>\r\n            </Fragment>\r\n      );\r\n    \r\n  }\r\n  \r\n  export default Swon;","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\index.js",[],["178","179"],"C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\App.js",[],"C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\reportWebVitals.js",[],"C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\Routes\\Routes.js",[],"C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\S010100010.js",["180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222"],"C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\S010100090.js",["223","224","225"],"import React, { Fragment, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems } from './listItems';\r\nimport Button from '@material-ui/core/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from './Title';\r\n\r\nimport { DatePicker } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\n// //<!--켈린더 라이브러리시작\r\n// import DatePicker, { registerLocale } from \"react-datepicker\";\r\n// import ko from 'date-fns/locale/ko';\r\n// registerLocale(\"ko\", ko);\r\n// //켈린더 라이브러리 끝-->\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n\r\n}));\r\n\r\n\r\nfunction S010100090(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n\r\n    const [staffName, setStaffName] = useState('')\r\n    const [staffClass, setStaffClass] = useState('')\r\n    const [closeStatus, setCloseStatus] = useState('')\r\n\r\n\r\n    //<!--캘린더 속성 \r\n    const [startDate, setStartDate] = useState(new Date('2020/01/01'));\r\n    const [endDate, setEndDate] = useState(new Date('2022/01/01'));\r\n    //캘린더 속성 끝--> \r\n\r\n\r\n    //<!--onSubmit\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n    }\r\n    //onSubmit끝-->\r\n\r\n    const staffNameHandler = (event) => {\r\n        setStaffName(event.currentTarget.value);\r\n    }\r\n\r\n    const staffClassHandler = (event) => {\r\n        setStaffClass(event.currentTarget.value);\r\n    }\r\n\r\n    const closeStatusHandler = (event) => {\r\n        setCloseStatus(event.currentTarget.value);\r\n    }\r\n\r\n    const onRegistHandler = (event) => {\r\n\r\n    }\r\n    const onModifyHandler = (event) => {\r\n\r\n    }\r\n    const onApprovalHandler = (event) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.root}>\r\n                {/* 백그라운드 */}\r\n                <CssBaseline />\r\n                {/* 상단파란툴바 */}\r\n                <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                    <Toolbar className={classes.toolbar}>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                            Dashboard\r\n          </Typography>\r\n                        <IconButton color=\"inherit\">\r\n                            <Badge badgeContent={4} color=\"secondary\">\r\n                                <NotificationsIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                {/* 왼쪽 메뉴바 */}\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                    }}\r\n                    open={open}\r\n                >\r\n                    <div className={classes.toolbarIcon}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            <ChevronLeftIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>{mainListItems}</List>\r\n                    <Divider />\r\n                    <List>{secondaryListItems}</List>\r\n                </Drawer>\r\n                <main className={classes.content}>\r\n                    <div className={classes.appBarSpacer} />\r\n                    <Container maxWidth=\"lg\" className={classes.container}>\r\n                        <Grid container spacing={3}>\r\n                            {/* Chart */}\r\n                            <Grid item xs={12}>\r\n                                <Paper className={classes.paper}>\r\n                                    <form onSubmit={onSubmitHandler}>\r\n\r\n\r\n\r\n                                                                            성명&nbsp;\r\n                                   <Form.Control style={{ width: 6 + 'em', display: 'inline' }} size=\"sm\" type=\"text\"\r\n                                             value={staffName} id=\"staffName\" name=\"staffName\" \r\n                                             onChange={staffNameHandler} />\r\n\r\n                                    &nbsp;\r\n\r\n\r\n                                    입사일자   &nbsp;\r\n                                    {/* date클릭할 때 고정 */}\r\n                                        <DatePicker\r\n                                            selected={startDate}\r\n                                            onChange={date => setStartDate(date)}\r\n                                            selectsStart\r\n                                            startDate={startDate}\r\n                                            endDate={endDate}\r\n                                        />&nbsp; ~ &nbsp;\r\n                                        <DatePicker\r\n                                            selected={endDate}\r\n                                            onChange={date => setEndDate(date)}\r\n                                            selectsEnd\r\n                                            startDate={startDate}\r\n                                            endDate={endDate}\r\n                                            minDate={startDate}\r\n                                        />\r\n\r\n                                        {/* <input type=\"image\" src=\"/examples/images/submit_icon.png\" alt=\"제출버튼\" height=\"30\" width=\"30\"/> */}\r\n                                        &nbsp;\r\n\r\n                                        직원구분&nbsp;\r\n                                        <Form.Control style={{ width: 6 + 'em', display: 'inline' }} size=\"sm\" as=\"select\"\r\n                                            multiple={false} onChange={staffClassHandler} value={staffClass}>\r\n                                                {/* {paymentState.map(item => ( \r\n                                                    <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                                                ))} */}\r\n                                        </Form.Control>\r\n                                       &nbsp;\r\n                                        종료&nbsp;\r\n                                        <Form.Control style={{ width: 6 + 'em', display: 'inline' }} size=\"sm\" as=\"select\"\r\n                                            multiple={false}  onChange={closeStatusHandler} value={closeStatus}>\r\n                                                {/* {paymentState.map(item => ( \r\n                                                    <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                                                ))} */}\r\n                                        </Form.Control>\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                                        <Button variant=\"contained\" style={{ width: 80 }} color=\"primary\" href=\"#contained-buttons\">\r\n                                        조회\r\n                                        </Button>\r\n\r\n\r\n                                    </form>\r\n                                </Paper>\r\n                            </Grid>\r\n\r\n                            <table className=\"btn\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <td id=\"alignLeft\">\r\n                                                <Button variant=\"contained\" style={{ width: 100 }} color=\"primary\" href=\"#contained-buttons\"> 등록 </Button>\r\n                                                <Button variant=\"contained\" style={{ width: 100 }} color=\"primary\" href=\"#contained-buttons\"> 수정 </Button>\r\n                                                <Button variant=\"contained\" style={{ width: 100 }} color=\"primary\" href=\"#contained-buttons\"> 승인 </Button>\r\n                                            </td>\r\n                                            <td id=\"alignRight\">\r\n                                                <Button variant=\"contained\" style={{ width: 140 }} color=\"primary\" href=\"#contained-buttons\"> 엑셀다운로드 </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </thead>\r\n                                </table>\r\n\r\n\r\n                            {/* 결과 테이블 */}\r\n                            <Grid item xs={12}>\r\n                                <Paper className={classes.paper}>\r\n                                <React.Fragment>\r\n                                            <Title>직원 현황</Title>\r\n                                            <Table size=\"small\">\r\n\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell>선택</TableCell>\r\n                                                    <TableCell>직번</TableCell>\r\n                                                    <TableCell>성명</TableCell>\r\n                                                    <TableCell>주민번호</TableCell>\r\n                                                    <TableCell>부서</TableCell>\r\n                                                    <TableCell>연락처</TableCell>\r\n                                                    <TableCell>E-mail</TableCell>\r\n                                                    <TableCell>직원구분</TableCell>\r\n                                                    <TableCell>승인여부</TableCell>\r\n                                                    <TableCell>직급</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n\r\n                                            <TableBody>\r\n                                           \r\n                                            </TableBody>\r\n                                            </Table>\r\n                                            \r\n                                        </React.Fragment>\r\n                \r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Box pt={4}>\r\n\r\n                        </Box>\r\n                    </Container>\r\n                </main>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default S010100090;","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\S010100040.js",["226"],"C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\S010100060.js",["227"],"C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\S010100130.js",["228","229","230"],"//<<상담현황 페이지>>\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport './css/S010100130.css';\r\nimport axios from 'axios';\r\nimport S010100140 from './S010100140';\r\n// import 'react-datepicker/dist/react-datepicker.css';\r\n// import 'react-datepicker/dist/react-datepicker-cssmodules.min.css';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems } from './listItems';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from './Title';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { DatePicker } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from 'moment';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport xlsx from 'xlsx';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n\r\n    toolbar: {\r\n        paddingRight: 24,\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n    \r\n}));\r\n\r\n\r\nlet num = '';\r\nlet rNum = 0;\r\nlet chkSt = '';\r\n\r\nfunction S010100130() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(true);\r\n    const [mOpen, setMOpen] = React.useState(false);\r\n    const [storeOpen, setStoreOpen] = React.useState(false);\r\n    \r\n    const [data] = useState('I');\r\n\r\n    const [numForDetail, setNumForDetail] = useState('');\r\n    const [tb_s10_ask010, setTb_s10_ask010] = useState([].slice(0,10));\r\n    const [deleteAskOpen, setDeleteAskOpen] = React.useState(false);\r\n    const [ask_tps, setAsk_tps] = useState([{}])\r\n    const [startAsk_date, setStartAsk_date] = useState(new Date());\r\n    const [endAsk_date, setEndAsk_date] = useState(new Date());\r\n\r\n    // 문의구분\r\n    const [ask_tp, setAsk_tp] = useState('');\r\n    // 문의자명\r\n    const [ask_name, setAsk_name] = useState('');\r\n    // 삭제\r\n    const [checkForDelete, setCheckForDelete] = useState(true);\r\n    const [checked, setChecked] = useState([]);\r\n\r\n    // 페이징\r\n    const [pageNumber,setPageNumber] = useState(0);\r\n    const usersPerPage = 20;\r\n    const pagesVisited = pageNumber * usersPerPage;\r\n    const pageCount = Math.ceil(tb_s10_ask010.length/usersPerPage);\r\n    \r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected);\r\n    }\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const searchAsk = () => {\r\n        const body = {\r\n            startAsk_date,\r\n            ask_name,\r\n            ask_tp,\r\n            endAsk_date\r\n        }\r\n        // console.log('startAsk_date',startAsk_date);\r\n        // console.log('endAsk_date',endAsk_date);\r\n\r\n        axios.post(\"/api/askStList/search\", body).then(response => {\r\n            if (response.data.success) {\r\n                //console.log('검색결과:'+response.data.rows);\r\n                setTb_s10_ask010(response.data.rows);\r\n            } else {\r\n                alert('검색에 실패하였습니다.')\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchAsk();\r\n    }, []);\r\n\r\n    // 문의 구분\r\n    useEffect(() => {\r\n        axios.post('/api/askStList/ask_tp')\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    //console.log('Lov-ask_tp',response.data);\r\n                    let arr = [{ key: '전체', value: '전체' }]\r\n\r\n                    response.data.rows.map((data) =>\r\n                        arr.push({\r\n                            value: data.CD_V_MEANING, key: data.CD_V\r\n                        }));\r\n\r\n                    setAsk_tps(arr);\r\n\r\n                } else {\r\n                    alert(\"문의구분 데이터를 불러오는데 실패하였습니다.\");\r\n                }\r\n            })\r\n    }, [])\r\n    \r\n    // 상담등록 모달\r\n    const onHandleClickOpen = () => {\r\n        //console.log('상담열기');\r\n        setStoreOpen(true);\r\n\r\n    };\r\n\r\n    const onHandleClickClose = () => {\r\n        setStoreOpen(false);\r\n        searchAsk();\r\n    };\r\n\r\n    // 상세보기 모달\r\n    const onDetailHandleClickOpen = (event) => {\r\n        //console.log('target',event.target.id);\r\n        num = event.target.id;\r\n        rNum = parseInt(num);\r\n        setNumForDetail(rNum);\r\n        setMOpen(true);\r\n    };\r\n\r\n    const onDetailHandleClickClose = () => {\r\n        setMOpen(false);\r\n        searchAsk();\r\n\r\n    };\r\n    \r\n    const onBackHandle = () => {\r\n        setCheckForDelete(true);\r\n        setChecked([]);\r\n    }\r\n\r\n    const handleToggle = (event) => {\r\n\r\n        const currentIndex = checked.indexOf(event.target.id);\r\n        //전체 Checked된 State에서 현재 누를 Checkbox가 있는지 확인\r\n        const newChecked = checked;\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(event.target.id)\r\n        } else {\r\n            newChecked.splice(currentIndex, 1)\r\n        }\r\n        setChecked(newChecked);\r\n\r\n        newChecked.length > 0 ? chkSt = 'check' : chkSt = ''; \r\n        // console.log('chkSt',chkSt);\r\n        // console.log('newChecked.length',newChecked.length);\r\n\r\n    }\r\n\r\n    const onAsk_tpHandler = (event) => {\r\n        setAsk_tp(event.currentTarget.value);\r\n    }\r\n\r\n    const onAsk_nameHandler = (event) => {\r\n        setAsk_name(event.currentTarget.value);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setDeleteAskOpen(false);\r\n    }\r\n\r\n    const onHandleDelete = () => {\r\n        if(chkSt == 'check'){\r\n            setDeleteAskOpen(true);\r\n        }else{\r\n            alert('삭제할 사용자를 선택하세요.');\r\n        }\r\n    }\r\n  \r\n    const deleteHandle = () => {\r\n        let askIdArray = checked;\r\n       \r\n            axios.post('/api/askStList/delete', askIdArray)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                            alert('삭제하였습니다.');\r\n                            searchAsk();\r\n                    } else {\r\n                        alert(\"error\")\r\n                        \r\n                    }\r\n                })\r\n        chkSt = '';        \r\n        setDeleteAskOpen(false);\r\n\r\n        setChecked([]);\r\n        onBackHandle();\r\n    }\r\n\r\n    // 조회 \r\n    const onHandleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const body = {\r\n            startAsk_date,\r\n            ask_name,\r\n            ask_tp,\r\n            endAsk_date\r\n        }\r\n\r\n        //console.log('ask_tp', ask_tp);\r\n        //console.log(\"조회조건\", body);\r\n        // alert('startDate day:'+startAsk_date.getDay());\r\n        // alert('endDate year:'+endAsk_date.getFullYear());\r\n        // alert('endDate day:'+endAsk_date.getDate());\r\n        // alert('endDate month:'+endAsk_date.getMonth()+1);\r\n        // alert(endAsk_date.getFullYear() + '/' + (endAsk_date.getMonth()+1) +'/'+endAsk_date.getDate());\r\n        // alert('startDate:'+startAsk_date.getMonth());\r\n\r\n        axios.post(\"/api/askStList/search\", body).then(response => {\r\n            if (response.data.success) {\r\n                //console.log('검색결과:'+response.data.rows);\r\n                setTb_s10_ask010(response.data.rows);\r\n            } else {\r\n                alert('검색에 실패하였습니다.')\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const excelHandler = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const ws = xlsx.utils.json_to_sheet(tb_s10_ask010);\r\n        console.log(tb_s10_ask010);\r\n\r\n        ['NO', '문의구분', '문의일자', '문의방법', '접근경로', '문의자명', '연락처']\r\n            .forEach((x, idx) => {\r\n                const cellAdd = xlsx.utils.encode_cell({ c: idx, r: 0 });\r\n                ws[cellAdd].v = x;\r\n\r\n            })\r\n\r\n        ws['!cols'] = [];\r\n        ws['!cols'][0] = { hidden: true };\r\n\r\n\r\n        const wb = xlsx.utils.book_new();\r\n\r\n        xlsx.utils.book_append_sheet(wb, ws, \"Sheet1\");\r\n        xlsx.writeFile(wb, \"상담현황.xlsx\");\r\n\r\n    }\r\n    \r\n    const displayUsers = tb_s10_ask010.slice(pagesVisited,pagesVisited + usersPerPage).map((tb_s10_ask010, index) => {\r\n        return (\r\n            <TableRow key={index}>\r\n                <TableCell>\r\n                <input type=\"checkbox\" onChange={handleToggle} id={tb_s10_ask010.ASK_ID} />\r\n                </TableCell>\r\n                <TableCell onClick={onDetailHandleClickOpen} id={tb_s10_ask010.ASK_ID} className='underLineForDetail'>{index + 1}</TableCell>\r\n                <TableCell>{tb_s10_ask010.ASK_TP}</TableCell>\r\n                <TableCell>{tb_s10_ask010.ASK_DATE}</TableCell>\r\n                <TableCell>{tb_s10_ask010.ASK_METHOD}</TableCell>\r\n                <TableCell>{tb_s10_ask010.ASK_NAME}</TableCell>\r\n                <TableCell>{tb_s10_ask010.ASK_INFO}</TableCell>\r\n                <TableCell>{tb_s10_ask010.ASK_PATH}</TableCell>\r\n            </TableRow>\r\n        );\r\n    });\r\n   \r\n    return (\r\n        <Fragment>\r\n\r\n            <div className={classes.root}>\r\n                {/* 백그라운드 */}\r\n                <CssBaseline />\r\n                {/* 상단 파란색 툴바 */}\r\n                <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                    <Toolbar className={classes.toolbar}>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                            Dashboard\r\n                        </Typography>\r\n                        <IconButton color=\"inherit\">\r\n                            <Badge badgeContent={4} color=\"secondary\">\r\n                                <NotificationsIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                {/* 왼쪽메뉴바 */}\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                    }}\r\n                    open={open}\r\n                >\r\n                    <div className={classes.toolbarIcon}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            <ChevronLeftIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>{mainListItems}</List>\r\n                    <Divider />\r\n                    <List>{secondaryListItems}</List>\r\n                </Drawer>\r\n\r\n\r\n                {/* 메인화면  */}\r\n                <main className={classes.content}>\r\n                    <form onSubmit={onHandleFormSubmit}>\r\n                        <div className={classes.appBarSpacer} />\r\n                        <Container maxWidth=\"lg\" className={classes.container}>\r\n                            <Grid container spacing={3}>\r\n                                {/* Chart */}\r\n                                <Grid item xs={12}>\r\n                                    <Paper style={{ padding: 16 }}>\r\n\r\n                                        <div className=\"gridInline\">\r\n\r\n                                            문의일자\r\n                                            &nbsp;\r\n                                        \r\n                                            <DatePicker\r\n                                                locale=\"ko\"\r\n                                                selected={startAsk_date}\r\n                                                onChange={date => setStartAsk_date(date)}\r\n                                                selectsStart\r\n                                                startDate={startAsk_date}\r\n                                                // endDate={endAsk_date.setHours(9, 0, 0, 0)}\r\n                                                endDate={endAsk_date}\r\n                                                dateFormat=\"yyyy.MM.dd\"\r\n                                                defaultValue={moment(moment(),'YYYY-MM-DD')}\r\n                                            />\r\n                                          &nbsp;\r\n                                        ~ &nbsp;\r\n                                        <DatePicker\r\n                                                locale=\"ko\"\r\n                                                selected={endAsk_date}\r\n                                                onChange={date => setEndAsk_date(date)}\r\n                                                selectsEnd\r\n                                                startDate={startAsk_date}\r\n                                                endDate={endAsk_date}\r\n                                                minDate={startAsk_date}\r\n                                                defaultValue={moment(moment(),'YYYY-MM-DD')}\r\n                                            />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                                            문의구분\r\n                                            &nbsp;\r\n\r\n                                                                <Form.Control style={{ width: 6 + 'em', display: 'inline' }} size=\"sm\" as=\"select\" multiple={false} onChange={onAsk_tpHandler} value={ask_tp}>\r\n                                                                    {ask_tps.map(item => (\r\n                                                                        <option key={item.key} value={item.key}>{item.value}</option>\r\n                                                                    ))}\r\n\r\n                                                                </Form.Control>\r\n                                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n\r\n                                            문의자명\r\n                                            &nbsp;\r\n                                            <Form.Control style={{ width: 7 + 'em', display: 'inline' }} size=\"sm\" type=\"text\" value={ask_name} id=\"ask_name\" name=\"ask_name\" onChange={onAsk_nameHandler} />\r\n                                            &nbsp;\r\n                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n\r\n                                            <Button variant=\"contained\" style={{ width: 80, display: 'inline' }} color=\"primary\" onClick={onHandleFormSubmit}>\r\n                                                조회\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Paper>\r\n                                </Grid>\r\n\r\n                                <table className=\"btn\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <td colSpan=\"5\"id = \"alignLeft\" >\r\n                                                \r\n                                                    <Button variant=\"contained\" color=\"primary\" style={{ width: 100 }} onClick={onHandleClickOpen} >\r\n                                                        상담등록\r\n                                                    </Button>\r\n                                                    <Button variant=\"contained\" color=\"primary\"  style={{ width: 100 }} onClick={onHandleDelete}\r\n                                                        value=\"삭제하기\" >\r\n                                                        삭제하기\r\n                                                    </Button>\r\n                                                \r\n                                            </td>\r\n                                            \r\n                                            <td  id=\"alignRight\"><Button variant=\"contained\" style={{ width: 150 }} color=\"primary\" onClick={excelHandler}>엑셀다운로드</Button></td>\r\n                                        </tr>                                \r\n                                    </thead>\r\n                                </table>\r\n\r\n\r\n                                {/*상담현황 테이블 */}\r\n                                <Grid item xs={12}>\r\n                                    <Paper className={classes.paper}>\r\n                                    <React.Fragment>\r\n                                            <Title>상담 현황</Title>\r\n                                            <Table size=\"small\">\r\n\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                <TableCell>선택</TableCell>\r\n                                                <TableCell>No</TableCell>\r\n                                                <TableCell>문의구분</TableCell>\r\n                                                <TableCell>문의일자</TableCell>\r\n                                                <TableCell>문의방법</TableCell>\r\n                                                <TableCell>문의자명</TableCell>\r\n                                                <TableCell>연락처</TableCell>\r\n                                                <TableCell>접근경로</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                { displayUsers}\r\n                                            </TableBody>\r\n                                            </Table>\r\n                                            <div id = \"reactPage\">\r\n                                                <ReactPaginate\r\n                                                    previousLabel = {\"Previous\"}\r\n                                                    nextLabel = {\"Next\"}\r\n                                                    pageCount = {pageCount}\r\n                                                    onPageChange = {changePage}\r\n                                                    containerClassName={\"paginationBtns\"}\r\n                                                    previousLinkClassName={\"previousBtn\"}\r\n                                                    nextLinkClassName={\"nextBtn\"}\r\n                                                    disabledClassName={\"paginationDisabled\"}\r\n                                                    activeClassName={\"paginationActive\"}   \r\n                                                />\r\n                                            </div>\r\n                                        </React.Fragment>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Container>\r\n                    </form>\r\n                </main>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={deleteAskOpen}\r\n                onClose={onHandleDelete}>\r\n                <DialogTitle id=\"alert-dialog-title\">{\"체크한 행을 삭제할까요?\"}</DialogTitle>\r\n                <DialogActions>\r\n                    <Button onClick={deleteHandle} color=\"primary\">\r\n                        네\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        아니오\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n           \r\n            <Dialog\r\n                maxWidth={\"lg\"}\r\n                open={mOpen}>\r\n                <S010100140 dataForm={\"U\"} num={numForDetail} />\r\n                <DialogActions>\r\n                    <input type=\"button\" onClick={onDetailHandleClickClose} color=\"primary\" value='닫기' />\r\n                </DialogActions>\r\n            </Dialog>\r\n           \r\n\r\n\r\n           \r\n            <Dialog\r\n                maxWidth={\"lg\"}\r\n                open={storeOpen}>\r\n                <S010100140 dataForm={data} num={numForDetail} />\r\n                <DialogActions>\r\n                    <input type=\"button\" onClick={onHandleClickClose} color=\"primary\" value='닫기' />\r\n                </DialogActions>\r\n            </Dialog>\r\n           \r\n        </Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default S010100130;","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\S010100050.js",["231","232","233","234","235","236"],"C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\S010100150.js",["237","238","239","240","241"],"import axios from 'axios';\r\nimport React, { Fragment } from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems } from './listItems';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  \r\n}));\r\n\r\n\r\n\r\nfunction S010100150(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value)\r\n  }\r\n\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value)\r\n  }\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    let body = {\r\n      email: email,\r\n      password: password\r\n    }\r\n\r\n    axios.post('/api/users/login', body)\r\n      .then(response => {\r\n        if (response.data.loginResult) {\r\n          alert('로그인 되었습니다.')\r\n          //props.history.push('/counseling')\r\n          console.log(response.data.loginResult)\r\n        } else {\r\n          alert('아이디와 비밀번호를 확인하세요')\r\n        }\r\n      })\r\n  }\r\n\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n    {/* 백그라운드 */}\r\n    <CssBaseline />\r\n    {/* 상단파란툴바 */}\r\n    <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={handleDrawerOpen}\r\n          className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n          Dashboard\r\n        </Typography>\r\n        <IconButton color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n    {/* 왼쪽 메뉴바 */}\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n      }}\r\n      open={open}\r\n    >\r\n      <div className={classes.toolbarIcon}>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>{mainListItems}</List>\r\n      <Divider />\r\n      <List>{secondaryListItems}</List>\r\n    </Drawer>\r\n                    <main className={classes.content}>\r\n                      <div className={classes.appBarSpacer} />\r\n                      <Container maxWidth=\"lg\" className={classes.container}>\r\n                        <Grid container spacing={3}>\r\n                         \r\n                          {/* <Grid item xs={12}>\r\n                            <Paper className={classes.paper}>\r\n                            \r\n                            </Paper>\r\n                      </Grid> */}\r\n                        \r\n                         \r\n                          <Grid item xs={12}>\r\n                            <Paper className={classes.paper}>\r\n                            <div className={classes.root}>{\"준비중인 페이지 입니다.\"}</div>\r\n                            </Paper>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Box pt={4}>\r\n                      \r\n                        </Box>\r\n                      </Container>\r\n                    </main>\r\n  </div>\r\n\r\n        \r\n        // <form \r\n        //   onSubmit={onSubmitHandler}\r\n        // >\r\n\r\n        //   <label style={{ fontFamily: 'Jua', width: '180px' }}>Email</label>\r\n        //   <input style={{ width: \"300px\" }} type=\"email\" value={email} onChange={onEmailHandler} />\r\n        //   <label style={{ fontFamily: 'Jua' }}>Password</label>\r\n        //   <input style={{ width: \"300px\" }} type=\"password\" value={password} onChange={onPasswordHandler} />\r\n        //   <br />\r\n        //   <Button type=\"submit\">Login</Button>\r\n\r\n\r\n        // </form>   \r\n      \r\n    )\r\n}\r\n\r\nexport default S010100150;","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\S010100140.js",["242","243","244"],"C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\utils\\Pagination.js",["245"],"import React from 'react';\r\n\r\nconst Pagination = ({postsPerPage,totalPosts,paginate}) =>{\r\n    const pageNumbers = [];\r\n\r\n    for(let i = 1;i <= Math.ceil(totalPosts/postsPerPage);i++){\r\n        pageNumbers.push(i);\r\n\r\n    }\r\n    return(\r\n        <nav id = \"pageCenter\">\r\n            <ul className = \"pagination\" style = {{ margin:0, padding:0}} >\r\n                {pageNumbers.map(number =>(\r\n                    <li key = {number} className = \"pageItem\" style = {{float:\"left\",  margin:0, padding:0}}>\r\n                        <a onClick={()=>paginate(number)} className = \"pageLink\">\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\nexport default Pagination;","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\S010100070.js",["246","247","248","249","250","251","252","253","254","255","256","257"],"import React, { Fragment, useState, useEffect, useRef } from 'react';\r\nimport './css/S010100070.css';\r\nimport axios from 'axios';\r\n//엑셀다운로드\r\nimport xlsx from 'xlsx';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from './Title';\r\n\r\nimport Pagination from './utils/Pagination';\r\n\r\nimport DatePicker, { registerLocale } from 'react-datepicker';\r\nimport ko from 'date-fns/locale/ko';\r\nregisterLocale(\"ko\", ko);\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n\r\n \r\n}));\r\n\r\n\r\nlet sequenceChk = [];\r\n\r\nfunction S010100070(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const [mOpen, setMOpen] = React.useState(false);\r\n    const [storeOpen, setStoreOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [paymentMemberNm, setPaymentMemberNm] = useState('');\r\n    const [paymentPeriod, setPaymentPeriod] = useState('');\r\n    const [paymentCeoNm, setPaymentCeoNm] = useState('');\r\n    const [paymentEmpHp, setPaymentEmpHp] = useState('');\r\n    const [paymentEmpEmail, setPaymentEmpEmail] = useState('');\r\n    const [paymentEmpComment, setPaymentEmpComment] = useState('');\r\n    const [paymentStatusList, setPaymentStatusList] = useState([]);\r\n\r\n    //페이징\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage, setPostsPerPage] = useState(12);\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n\r\n    const [checked, setChecked] = useState([]);\r\n\r\n    // const []\r\n    const paymentMemberNmHandler = (event) => {\r\n        setPaymentMemberNm(event.currentTarget.value);\r\n    }\r\n\r\n    const paymentPeriodHandler = (event) => {\r\n        setPaymentPeriod(event.currentTarget.value);\r\n    }\r\n\r\n    const paymentCeoNmHandler = (event) => {\r\n        setPaymentCeoNm(event.currentTarget.value);\r\n    }\r\n\r\n    const paymentEmpHpHandler = (event) => {\r\n        setPaymentEmpHp(event.currentTarget.value);\r\n    }\r\n\r\n    const paymentEmpEmailHandler = (event) => {\r\n        setPaymentEmpEmail(event.currentTarget.value);\r\n    }\r\n\r\n    const paymentEmpCommentHandler = (event) => {\r\n        setPaymentEmpComment(event.currentTarget.value);\r\n    }\r\n\r\n    //데이터 들고오는 API\r\n    const paymentStList = () => {\r\n        axios.get(`/api/payStList/insert/tb_s10_contract020_by_id?id=${dataContracId}`)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    //초기값 세팅\r\n                    response.data.rows.map((row) => {\r\n                        if (row.PAYED_DATE === null || row.PAYED_DATE === undefined) row.PAYED_DATE = makeYYMMDD(new Date());\r\n                        if (row.CONTRACT_COMMENT === null || row.CONTRACT_COMMENT === undefined) row.CONTRACT_COMMENT = '';\r\n                        console.log('row', row);\r\n                    })\r\n\r\n\r\n                    setPaymentStatusList(response.data.rows);\r\n                    setPaymentMemberNm(response.data.rows[0].MEMBER_NM);\r\n                    setPaymentPeriod(response.data.rows[0].CONTRACT_TERM + '개월 ' +\r\n                        '(' + response.data.rows[0].START_DATE + ' ~ ' + response.data.rows[0].END_DATE + ')');\r\n                    setPaymentCeoNm(response.data.rows[0].NAME);\r\n                    setPaymentEmpHp(response.data.rows[0].EMP_HP);\r\n                    setPaymentEmpEmail(response.data.rows[0].EMP_EMAIL);\r\n                    setPaymentEmpComment(response.data.rows[0].COMMENT);\r\n                    setPayMethodM(response.data.rows[0].PAY_METHOD);\r\n\r\n                } else {\r\n                    alert(\"데이터 조회를 실패하였습니다.\")\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        paymentStList();\r\n    }, [])\r\n\r\n    let newChecked;\r\n\r\n\r\n    const toggleHandler = (event) => {\r\n\r\n        const currentIndex = checked.indexOf(event.target.id);\r\n        // const currentIndex = checked.findIndex((items,idx) => \r\n        // {return items.PAY_PLAN_DATE !== event.target.id});\r\n        //전체 Checked된 State에서 현재 누를 Checkbox가 있는지 확인\r\n        // console.log('event.target.id[0]',event.target.id);\r\n        // console.log('event.target.className',event.target.className[0]);\r\n        newChecked = checked;\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(event.target.id)\r\n        } else {\r\n            newChecked.splice(currentIndex, 1)\r\n        }\r\n        setChecked(newChecked);\r\n\r\n        sequenceChk.push('2');\r\n        //let dateChangeChk \r\n\r\n        console.log('newChecked', newChecked);\r\n    }\r\n\r\n    // console.log('sequenceChk[0]',sequenceChk[0]);\r\n    // console.log('sequenceChk[1]',sequenceChk[1]);\r\n\r\n    //납부 버튼,\r\n    const payBtnHandler = () => {\r\n\r\n         \r\n        // if( sequenceChk[0] == '2' && sequenceChk[1] =='1'){//[2][1]이라면\r\n        //     console.log('sequenceChk[0]',sequenceChk[0]);\r\n        //     alert('체크해제 후 납부일자를 선택한 다음 체크하세요.');\r\n        //     sequenceChk[0]='';\r\n        //     sequenceChk[1]='';\r\n            \r\n        // }else if(sequenceChk[0] == '2' && sequenceChk[1] == null ){\r\n        //     alert('오늘날짜는 성공쓰..?');\r\n        //     sequenceChk[0]='';\r\n        //     sequenceChk[1]='';\r\n        // }else if(sequenceChk[0] == '1' && sequenceChk[1] =='2'){\r\n        //     alert('성공쓰');\r\n        //     sequenceChk[0]='';\r\n        //     sequenceChk[1]='';}\r\n    \r\n        let modalContractId = props.dataContracId;\r\n        let modalPayPlanDate = checked;\r\n        // console.log(checked);\r\n        // console.log('modalContractId', modalContractId);\r\n\r\n        let body = {\r\n            //id -> date\r\n            modalContractId: modalContractId,\r\n            modalPayPlanDate: modalPayPlanDate,\r\n            payMethodM: payMethodM,\r\n            //insertPayDate: insertPayDate,\r\n            //paymentStatusList:paymentStatusList\r\n            newChecked: newChecked\r\n        }\r\n        console.log('newChecked', body);\r\n\r\n        axios.post('/api/payStList/paymentUpdate', body)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('완료되었습니다.');\r\n                } else {\r\n                    alert('실패하였습니다.');\r\n                }\r\n            })\r\n        //paymentStList();\r\n        newChecked = [];\r\n    \r\n    }\r\n\r\n    const snsBtnHandler = (event) => {\r\n\r\n    }\r\n    const emailBtnHandler = (event) => {\r\n\r\n    }\r\n    //엑셀다운로드\r\n    const excelBtnHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const ws = xlsx.utils.json_to_sheet(paymentStatusList);\r\n\r\n        ['대표자', '연락처', 'E-mail', '회원명', '계약상태', '계약기간', '계약기간', '납부일자', '특약사항', '계약기간(개월)', '납부예정일', 'contract_id', '납부여부', '비고']\r\n            .forEach((x, idx) => {\r\n                const cellAdd = xlsx.utils.encode_cell({ c: idx, r: 0 });\r\n                ws[cellAdd].v = x;\r\n\r\n            })\r\n\r\n        ws['!cols'] = [];\r\n        // ws['!cols'][4] = {hidden:true};\r\n        // ws['!cols'][7] = {hidden:true};\r\n        ws['!cols'][11] = { hidden: true };\r\n\r\n\r\n        const wb = xlsx.utils.book_new();\r\n\r\n        xlsx.utils.book_append_sheet(wb, ws, \"Sheet1\");\r\n        xlsx.writeFile(wb, \"고객납부등록.xlsx\");\r\n    }\r\n\r\n\r\n    let dataContracId = props.dataContracId;\r\n\r\n// 만약 선택을 체크한 뒤 납부일자를 클릭하면(오늘날짜가 아니라 다른날짜로변경..ㄴ) \r\n// 납부일자를 먼저 선택한후 체크하세요.\r\n//2 -> 1 [1][2] [2][1]\r\n\r\n    // const [s010100070R, setS010100070R] = useState([]);\r\n    const makeYYMMDD = (value) => {\r\n        let year = (value.getFullYear() + '').substring(2);\r\n        //console.log('year',year);\r\n        let month = value.getMonth() + 1;\r\n        let date = value.getDate();\r\n        month = month < 10 ? '0' + month : month;\r\n        date = date < 10 ? '0' + date : date;\r\n        return year + '.' + month + '.' + date;\r\n    }\r\n\r\n\r\n    //뿌려주는 곳\r\n    const s010100070R = paymentStatusList.map((paymentStatus, index) => {\r\n        let insertPayDate = paymentStatus.PAYED_DATE\r\n            ? new Date('20' + paymentStatus.PAYED_DATE)\r\n            : new Date();\r\n\r\n        return (\r\n            <TableRow key={index}>\r\n                {/*CONTRACT_ID와 날짜를 함께 들고가야한다.*/}\r\n                <TableCell name=\"uname\" variant=\"outlined\" color=\"primary\">\r\n                    <input type=\"checkbox\" onChange={toggleHandler} id={paymentStatus.PAY_PLAN_DATE + ',' + paymentStatus.PAYED_DATE + ',' + paymentStatus.CONTRACT_COMMENT} />\r\n                </TableCell>\r\n                <TableCell id={paymentStatus.CONTRACT_ID}>{index + 1}</TableCell>\r\n                <TableCell>{paymentStatus.PAY_PLAN_DATE}</TableCell>\r\n                <TableCell>{paymentStatus.PAYED_FLAG}</TableCell>\r\n                <TableCell key={paymentStatus.PAY_PLAN_DATE} id={paymentStatus.PAY_PLAN_DATE}>\r\n                    {/* api보고 바뀐 이벤트 값 들고오는거 찾아서 했어요 */}\r\n                    <DatePicker\r\n                        //ref = {payDateRef}\r\n                        id={paymentStatus.PAY_PLAN_DATE}\r\n                        locale=\"ko\"\r\n                        selected={insertPayDate.setHours(9, 0, 0, 0)}\r\n                        onChange={\r\n                            date => {\r\n                                setPaymentStatusList(\r\n                                    paymentStatusList.map(changePaymentStatus =>\r\n                                        changePaymentStatus.PAY_PLAN_DATE === paymentStatus.PAY_PLAN_DATE ?\r\n                                            { ...changePaymentStatus, PAYED_DATE: makeYYMMDD(date) }\r\n                                            : changePaymentStatus\r\n                                    ))\r\n\r\n                                    sequenceChk.push('1');\r\n                            }\r\n                        }\r\n                        selectsStart\r\n                        startDate={insertPayDate}\r\n                        dateFormat=\"yyyy.MM.dd (eee)\"\r\n                    />\r\n                </TableCell>\r\n                <TableCell>\r\n                    {/* {paymentStatus.CONTRACT_COMMENT} */}\r\n                    <Form.Control as=\"textarea\" cols=\"20\" rows=\"2\"\r\n                        value={paymentStatus.CONTRACT_COMMENT}\r\n                        size=\"5\"\r\n                        id={paymentStatus.PAY_PLAN_DATE}\r\n                        onChange={(e) => {\r\n                            //   console.log('비고',e.target.value);\r\n                            setPaymentStatusList(\r\n                                paymentStatusList.map((changePaymentStatus, chIndex) =>\r\n                                    chIndex === index ?\r\n                                        { ...changePaymentStatus, CONTRACT_COMMENT: e.target.value }\r\n                                        : changePaymentStatus\r\n                                ))\r\n                        }\r\n                        }\r\n                    />\r\n                </TableCell>\r\n\r\n\r\n            </TableRow>\r\n        )\r\n    });\r\n\r\n    \r\n\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = s010100070R.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    //Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    const [payMethodM, setPayMethodM] = useState('');\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n\r\n            <form style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                width: '100%'\r\n            }}>\r\n\r\n                <div className=\"memberInfoWrapper\">\r\n                    <div className=\"memberInfoWrap\">\r\n                        <h5 id=\"infoTitle\">고객 납부 등록</h5>\r\n                        <table id=\"memberDetailTable\">\r\n                            <tr>\r\n                                <th>회원명</th>\r\n                                <td>\r\n                                    <Form.Control style={{ width: 6 + 'em', display: 'inline' }} size=\"sm\"\r\n                                        type=\"text\" value={paymentMemberNm} id=\"memberNm\" name=\"memberNm\"\r\n                                        onChange={paymentMemberNmHandler} />\r\n\r\n                                    {/* <input type=\"text\" value={paymentMemberNm} id=\"memberNm\" name=\"memberNm\" size=\"5\"\r\n                                           onChange={paymentMemberNmHandler}/> */}\r\n                                </td>\r\n                                <th>계약기간</th>\r\n                                <td colSpan=\"3\">\r\n                                    <Form.Control style={{ width: 15 + 'em', display: 'inline' }} size=\"sm\"\r\n                                        type=\"text\" value={paymentPeriod} id=\"regNo\" name=\"regNo\"\r\n                                        onChange={paymentPeriodHandler} />\r\n\r\n                                    {/* <input type=\"text\" value={paymentPeriod} id=\"regNo\" name=\"regNo\" size=\"27\"\r\n                                           onChange={paymentPeriodHandler}/> */}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th> 대표자</th>\r\n                                <td>\r\n\r\n                                    <Form.Control style={{ width: 7 + 'em', display: 'inline' }} size=\"sm\"\r\n                                        type=\"text\" value={paymentCeoNm} id=\"name\" name=\"name\"\r\n                                        onChange={paymentCeoNmHandler} />\r\n\r\n                                    {/* <input type=\"text\" value={paymentCeoNm} id=\"name\" name=\"name\" size=\"7\"\r\n                                           onChange={paymentCeoNmHandler}/> */}\r\n\r\n                                </td>\r\n                                <th>연락처</th>\r\n                                <td>\r\n                                    <Form.Control style={{ width: 10 + 'em', display: 'inline' }} size=\"sm\"\r\n                                        type=\"text\" value={paymentEmpHp} id=\"ceoHp\" name=\"ceoHp\"\r\n                                        onChange={paymentEmpHpHandler} />\r\n\r\n                                    {/* <input type=\"text\" value={paymentEmpHp} id=\"name\" name=\"name\" size=\"13\"\r\n                                            onChange={paymentEmpHpHandler}/> */}\r\n                                </td>\r\n                                <th>메일주소</th>\r\n                                <td>\r\n                                    <Form.Control style={{ width: 14 + 'em', display: 'inline' }} size=\"sm\"\r\n                                        type=\"text\" value={paymentEmpEmail} id=\"eAddr\" name=\"eAddr\"\r\n                                        onChange={paymentEmpEmailHandler} />\r\n\r\n                                    {/* <input type=\"text\" value={paymentEmpEmail} id=\"name\" name=\"name\" size=\"20\"\r\n                                           onChange={paymentEmpEmailHandler}/> */}\r\n                                </td>\r\n\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <th>특약사항</th>\r\n                                <td colSpan=\"5\">\r\n                                    <Form.Control as=\"textarea\" rows={3} value={paymentEmpComment} id=\"comment\"\r\n                                        name=\"comment\"\r\n                                        onChange={paymentEmpCommentHandler} />\r\n                                    {/* <textarea type=\"text\" cols=\"90\" rows=\"3\" value={paymentEmpComment} id=\"comment\"\r\n                                              name=\"name\"\r\n                                              size=\"5\"\r\n                                              onChange={paymentEmpCommentHandler}/> */}\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n\r\n\r\n                        <React.Fragment >\r\n                            <Title></Title>\r\n                            <Table size=\"small\">\r\n\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>선택</TableCell>\r\n                                        <TableCell>No</TableCell>\r\n                                        <TableCell>납부예정일</TableCell>\r\n                                        <TableCell>납부여부</TableCell>\r\n                                        <TableCell>납부일자</TableCell>\r\n                                        <TableCell>비      고</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {/* {currentPosts} */}{currentPosts}\r\n                                </TableBody>\r\n                            </Table>\r\n                            \r\n                        </React.Fragment>\r\n\r\n\r\n\r\n                        {/* <table id='paymentList'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>선택</th>\r\n                                    <th>No</th>\r\n                                    <th>납부예정일</th>\r\n                                    <th>납부여부</th>\r\n                                    <th>납부일자</th>\r\n                                    <th>비고</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {currentPosts}\r\n                            </tbody>\r\n                        </table> */}\r\n\r\n                        <div className=\"pageCenter\">\r\n                            <Pagination postsPerPage={postsPerPage} totalPosts={s010100070R.length} paginate={paginate} />\r\n                        </div>\r\n                        <div id=\"btnAlign\">\r\n                            <Button variant=\"contained\" color=\"primary\" style={{ width: 70 }}\r\n                                onClick={payBtnHandler} value=\"납부\" >납부</Button>\r\n                            <Button variant=\"contained\" color=\"primary\" style={{ width: 110 }} className=\"new\"\r\n                                onClick={snsBtnHandler} value=\"SNS전송\"  >SNS 전송</Button>\r\n                            <Button variant=\"contained\" color=\"primary\" style={{ width: 100 }} className=\"memberId\"\r\n                                onClick={emailBtnHandler} value=\"메일전송\"  >메일 전송</Button>\r\n                            <Button variant=\"contained\" color=\"primary\" style={{ width: 130 }} className=\"contractId\"\r\n                                onClick={excelBtnHandler} value=\"엑셀다운로드\" >엑셀다운로드</Button>\r\n                            <Button variant=\"contained\" color=\"primary\" style={{ width: 110 }} id=\"btnWidth\">계산서발행</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </Fragment>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default S010100070;","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\utils\\LeaseAgreement.js",["258","259"],"import React,{Fragment, useState, useEffect}from 'react';\r\nimport axios from 'axios';\r\nimport './utilsCss/LeaseAgreement.css';\r\n\r\nfunction LeaseAgreement (props){\r\n\r\n    // 계약시작년도,월,일\r\n    const [startYear,setStartYear] = useState('');\r\n    const [startMonth,setStartMonth] = useState('');\r\n    const [startDay,setStartDay] = useState('');\r\n    \r\n    // 계약종료년도,월,일\r\n    const [endYear,setEndYear] = useState('');\r\n    const [endMonth,setEndMonth] = useState('');\r\n    const [endDay,setEndDay] = useState('');\r\n\r\n    const [contractMoney,setContractMoney] = useState('');\r\n    const [roomLockerTp,setRoomLockerTp] = useState('');\r\n    const [contractPayDate,setContractPayDate] = useState('');\r\n    const [vatMoney, setVatMoney] = useState(0);\r\n\r\n    const [companyName,setCompanyName] = useState('');\r\n    const [ceoName,setCeoName] = useState('');\r\n    const [bLicenseNum,setBLicenseNum] = useState('');\r\n    const [companyAddr,setCompanyAddr] = useState('');\r\n    const [ceoTel,setCeoTel] = useState('');\r\n\r\n\r\n    useEffect(() => {\r\n      const rNum = props.dataNum;\r\n      axios.get(`/api/memStList/tb_s10_contract010_by_id?id=${rNum}&type=single`)\r\n          .then(response => {\r\n              if (response.data.success) {\r\n\r\n                const modalCContractDate = response.data.rows[0].CONTRACT_DATE;\r\n                const modalCContractMoney = response.data.rows[0].PAYED_PLAN_MONEY;\r\n               \r\n                const modalCContractTpValM = response.data.rows[0].CONTRACT_ROOM_M;\r\n                const modalCPayDate = response.data.rows[0].PAY_DATE;\r\n\r\n                //VAT(10%)적용한 modalCContractMoney 값\r\n                let VatMoney = modalCContractMoney*(10/100);\r\n               \r\n                const modalCStartDate = response.data.rows[0].START_DATE;\r\n                const modalCEndDate = response.data.rows[0].END_DATE;\r\n                \r\n                let wasteStartYear = modalCStartDate.substring(0, 4);\r\n                let wasteStartMonth = modalCStartDate.substring(5, 7);\r\n                let wasteStartDay = modalCStartDate.substring(8, 10);\r\n\r\n                let wasteEndYear = modalCEndDate.substring(0, 4);\r\n                let wasteEndMonth = modalCEndDate.substring(5, 7);\r\n                let wasteEndDay = modalCEndDate.substring(8, 10);\r\n\r\n                const modalCMemberNm = response.data.rows[0].MEMBER_NM;\r\n                const modalCRegNo = response.data.rows[0].REG_NO;\r\n                const modalCName = response.data.rows[0].NAME;\r\n                const modalCEmpHp = response.data.rows[0].EMP_HP;\r\n            \r\n                const modalCZipCode = response.data.rows[0].ZIP_CODE;\r\n                const modalCAddress = response.data.rows[0].ADDRESS;\r\n                const modalCDetailAddress = response.data.rows[0].DETAIL_ADDRESS;\r\n                \r\n                \r\n                setStartYear(wasteStartYear);\r\n                setStartMonth(wasteStartMonth);\r\n                setStartDay(wasteStartDay);\r\n\r\n                setEndYear(wasteEndYear);\r\n                setEndMonth(wasteEndMonth);\r\n                setEndDay(wasteEndDay);\r\n\r\n                setContractMoney(modalCContractMoney);\r\n                setVatMoney(VatMoney);\r\n                setRoomLockerTp(modalCContractTpValM);\r\n                setContractPayDate(modalCPayDate);\r\n\r\n                setCompanyName(modalCMemberNm);\r\n                setCeoName(modalCName);\r\n\r\n                setBLicenseNum(modalCRegNo);\r\n                setCompanyAddr(modalCZipCode + ' ' + modalCAddress + ' ' + modalCDetailAddress);\r\n                setCeoTel(modalCEmpHp);\r\n\r\n              } else {\r\n                  alert(\"상세 정보 가져오기를 실패하였습니다.\")\r\n              }\r\n          })\r\n        }, [])\r\n\r\n        // 현재날짜 출력\r\n        let today = new Date();\r\n        let dd = today.getDate();\r\n        let mm = today.getMonth()+1; \r\n        let yyyy = today.getFullYear();\r\n\r\n        if(dd<10) {\r\n            dd='0'+dd\r\n        } \r\n\r\n        if(mm<10) {\r\n            mm='0'+mm\r\n        } \r\n\r\n    return(\r\n             <div>\r\n                    <Fragment>\r\n                        <div className = \"agreementWrapper\">\r\n                        <h1> 임 대 차 계 약 서 </h1>\r\n                        <br/>\r\n                            <div className = \"paragraph\">\r\n                            <h3> 갑 : ㈜에스원테크   최현수</h3>\t\t\t\t\t\t\t\t\r\n                            <h3> 을 : {companyName}\t{ceoName}\t</h3>\t\t\t\t\t\t\t\r\n                            </div>     \r\n\r\n                            <div className = \"paragraph\">                                \r\n                                위 '갑'과 '을'은  {yyyy}년 {mm}월 {dd}일 다음과 같이 회원 가입을 체결 한다.\t\t\t\t\t\t\t\t\t\r\n                            </div>   \r\n\r\n                            <div className = \"paragraph\">\r\n                                <h3>1. 본 계약의 목적</h3>                        \t\t\t\t\t\t\t\t\r\n                                    본 계약은 '갑'이 '을'에게 '갑'의 사무실 및 부대시설을 사용 할 수 있는 권리를 허용함과 동시에 '을'이\t\t\t\t\t\t\t\t\t\r\n                                    필요로하는 서비스를 제공함에 있어서 '갑-을'간의 권리의무에 관한 사항을 정하기 위한 목적에서 체결 한다.\t\t\t\t\t\t\t\t\t\r\n                            </div> \r\n\r\n                            <div className = \"paragraph\">                                   \r\n                            <h3>2. 을의 권리의 책임</h3>\r\n                                    <ul>\t\t\t\t\t\t\t\t\r\n                                        <li>\r\n                                            1) '갑'은 '을'에게 제2항 및 제3항에 규정된 바와 같이 '갑'의 사무실 및 기타 부대시설을 사용할 수 있는\t\t\t\t\t\t\t\t\t\r\n                                                권리를 부여한다.\t\t\t\t\t\t\t\t\t\r\n                                        </li>\r\n                                        <li>\r\n                                            2) '을'이 사용 할 수 있는 사무실의 내역은 다음과 같다.<br/>\t\t\t\t\t\t\t\t\r\n                                            &emsp;&nbsp;대상 : 서울시 강남구 봉은사로63길 11, 3,4층      {roomLockerTp}(삼성동,명화빌딩)<br/>\t\t\t\t\t\t\t\t\t\r\n                                            &emsp;&nbsp;용도 : 업무용<br/>\t\t\t\t\t\t\t\t\t\r\n                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;월회비  :         {contractMoney}원<br/>\t\t\t\t\t\t\t\t\t\r\n                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VAT     :         {vatMoney}원<br/>\t\t\t\t\t\t\t\t\t\r\n                                        </li>\r\n                                        <li>\r\n                                            3) '을'은 상기한 제3항의 사무실 제공과 동시에 부대시설 (회의실, 접견실, 휴게실, OA기기)을 '갑'이\t\t\t\t\t\t\t\t\t\r\n                                            정한 원칙에 의거하여 사용할 수 있다.\t\t\t\t\t\t\t\t\t\r\n                                        </li>\r\n                                        <li>\r\n                                            4) '을'은 사무실과 부대시설을 사용함에 있어서 선량한 관리자의 주의 의무를 다해야 하며, 사무실과\t\t\t\t\t\t\t\t\t\r\n                                            부대시설에 야기된 제반 손상이나 훼손에 대하여 자신의 비용으로 이를 처리해야 한다.\t\t\t\t\t\t\t\t\t\r\n                                        </li>\r\n                                        <li>\r\n                                            5) '을'은 건물주 및 '갑'의 이해관계인에게 손해 등 문제가 발생할 우려가 있는 경우, 즉시 '갑'에게 사전\t\t\t\t\t\t\t\t\t\r\n                                            고지를 해야 하며 그렇지 않을 경우, 이로 인해 발생하는 '갑'의 모든 손해 (6개월간의 월회비와 법적인\t\t\t\t\t\t\t\t\t\r\n                                            문제 해결을 위한 제반 경비)에 대하여 배상을 한다.\t\t\t\t\t\t\t\t\t\r\n                                        </li>\r\n                                        <li>\r\n                                            6) 상기 5)항에 대하여 '을'은 '갑'에게 관련 정보제공, 법적인 문제인 경우 이를 해결하기 위해 적극\t\t\t\t\t\t\t\t\t\r\n                                            협조한다.(또한, 채권 가압류의 경우 즉시항고, 이의신청 등을 진행하기 위한 업무협조를 포함한다.)\t\t\t\t\t\t\t\t\t\r\n                                        </li>    \r\n                                    </ul>\r\n                                </div>\r\n\r\n                                <div className = \"paragraph\">                 \r\n                                <h3>3. 계약기간</h3>\t\t\t\t\t\t\t\t\t\r\n                                <ul>\r\n                                    <li>\r\n                                        1) 본 계약의 계약기간은 {startYear}년 {startMonth}월 {startDay}일부터 {endYear}년 {endMonth}월 {endDay}일까지로 한다.\t\t\t\t\t\t\t\t\t\r\n                                    </li>            \r\n                                </ul>\r\n                                </div>  \r\n\r\n                                <div className = \"paragraph\">                                    \r\n                                <h3>4. 예치금</h3>\t\t\t\t\t\t\t\t\t\r\n                                <ul>\r\n                                    <li>\r\n                                        1) '을'은 본 계약서에 서명함과 동시에 예치금 {contractMoney}원을 '갑'에게 지급하여야 한다.\t\t\t\t\t\t\t\t\t\r\n                                    </li>\r\n                                    <li>            \r\n                                        2) 위 제1항에 명시된 예치금은 본 계약기간 동안 '갑'이 보유하며, 계약기간 만료 또는 종료 시 '을'이\t\t\t\t\t\t\t\t\t\r\n                                            '갑'에게 사무실 및 부대시설을 원상 복구하여 반환하고, '갑'에게 지급할 모든 금액의 지급을 완료하고,\t\t\t\t\t\t\t\t\t\r\n                                            사업자 주소지와 전화를 7일 이내에 옮긴다.\t\t\t\t\t\t\t\t\t\r\n                                        이것이 확인된 후 3일 이내에 예치금을 반환하기로 한다. 단, 예치금에는 이자가 발생하지 않는 것으로\t\t\t\t\t\t\t\t\t\r\n                                        한다.\r\n                                    </li>           \r\n                                </ul>\t\r\n                                </div>           \r\n\r\n                                                                    \r\n                                <div className = \"paragraph\">                                               \r\n                                <h3>5. 회비 및 부가서비스 이용대금의 지급</h3>\t\t\t\t\t\t\t\t\t\r\n                                    <ul>\r\n                                        <li>\r\n                                            1) '을'은 매월  {contractPayDate} 일에 월 회비를 '갑'에게 지급하여야 하며, 그 지급일이 공휴일인 경우에는 익일까지\t\t\t\t\t\t\t\t\t\r\n                                            납부해야 한다.\r\n                                        </li>\r\n                                        <li>\t\t\t\t\t\t\t\t\r\n                                            2) 월 회비나 부가서비스 이용대금이 납부기한까지 전액 납부되지 않은 경우, '갑'은 본 계약에 의하여\t\t\t\t\t\t\t\t\t\r\n                                            부여된 여타 권리와는 별도로 연체료 월 2%를 을에게 청구할 수 있다.\t\t\t\t\t\t\t\t\t\r\n                                        </li>\t        \r\n                                    </ul>            \r\n                                </div>\r\n\r\n                                <div className = \"paragraph\">                                    \r\n                                <h3>6. '갑'의 면책사항</h3>\t\t\r\n                                    <ul>\r\n                                        <li>\r\n                                            1) 본 계약서의 내용은 사정에 의하여 변동될 수 있으며, '갑'은 이러한 변경에 대하여 '을'에게\t\t\t\t\t\t\t\t\t\r\n                                            사전고지하고 상호 합의가 있는 경우, '을'은 본 계약 위반의 책임을 지지 아니한다.\t\t\t\t\t\t\t\t\t\r\n                                        </li>\r\n                                        <li>\r\n                                            2) '을'이나 제3자가 다음과 같은 원인에 의하여 다치거나 재산상의 손해를 입게 된 경우 \t\t\t\t\t\t\t\t\t\r\n                                            '갑'은 이에 대하여 여하한 배상책임도 부담하지 않는다.\t\r\n                                            <ul>\r\n                                                <li>\t\t\t\t\t\t\t\t\r\n                                                - 배수관, 스프링쿨러, 연기 혹은 기타 물질이 건물에서 누출 될 경우\t\t\t\t\t\t\t\t\t\r\n                                                </li>\r\n                                                <li>\r\n                                                - 건물의 서비스와 설비에 결함이 있는 경우\t\t\t\t\t\t\t\t\t\r\n                                                </li>\r\n                                                <li>\r\n                                                - 건물의 보안이나 보호\r\n                                                </li>\r\n                                            </ul>    \r\n                                        </li>\r\n                                        <li>\t\t\t\t\t\t\t\t\t\r\n                                            3) '갑'이 '을'에게 제공하는 세무전문서비스는 '을'과 '갑'의 제휴세무사가 직접 계약을 체결하기로 한다.\t\t\t\t\t\t\t\t\t\r\n                                            세무전문서비스의 제공과 관련하는 발생하는 문제에 대하여 '갑'은 책임을 지지 아니한다.\t\t\t\t\t\t\t\t\t\r\n                                        </li>\r\n                                    </ul>           \r\n                                </div>\r\n\r\n                                <div className = \"paragraph\">                                    \r\n                                <h3>7. 계약의 양도 금지</h3>\t\t\t\t\t\t\t\t\t\r\n                                '을'은 본 계약상의 권리나 의무를 '갑'의 동의 없이 제3자에게 양도하거나 처분할 수 없다.\t\t\t\t\t\t\t\t\t\r\n                                </div>\r\n\r\n                                <div className = \"paragraph\">                                    \r\n                                <h3>8. 계약의 해지 및 갱신</h3>\r\n                                    <ul>\r\n                                        <li>\t\t\t\t\t\t\t\t\r\n                                            1) '을'이 본 계약의 해지 및 갱신을 원하는 경우, 본 계약서 제 3조에 명시된 계약기간의 만료 15일 전까지\t\t\t\t\t\t\t\t\t\r\n                                            그러한 의사를 '갑'에게 반드시 통지 해야한다.\t\t\t\t\t\t\t\t\t\r\n                                        </li>\r\n                                        <li>        \r\n                                            2) 계약 만료일 15일전에 의사표시를 하지않는 경우에는, 계약만료를 통보한 날로부터 15일 이후를\t\t\t\t\t\t\t\t\t\r\n                                            계약만료일로 하며, 해당 기간의 사용료를 손해배상금으로 '갑'에게  지급한다.\t\t\t\t\t\t\t\t\t\r\n                                        </li>\r\n                                        <li>        \r\n                                            3) 월회비 할인률이 적용된 경우,  '을'의 사정으로 계약만료일 이전에 중도 해지할 경우는 해당기간 동안\t\t\t\t\t\t\t\t\t\r\n                                            할인 받은 총금액을 최종 정산시 일괄 반환한다.\t\t\t\t\t\t\t\t\t\r\n                                        </li>\r\n                                        <li>       \r\n                                            4) '갑'이 부득이한 사정으로 인하여 중도에 본 계약을 해지하고자 하는 경우 '갑'은 1개월 전에 해지의사를\t\t\t\t\t\t\t\t\t\r\n                                            '을'에게 표시하여야 한다.\r\n                                        </li>\r\n                                        <li>    \t\t\t\t\t\t\t\t\t\r\n                                            5) 다음의 경우에는 '갑'이 일방적으로 계약을 해지 할 수 있다.\r\n                                                <ul>\r\n                                                <li>\r\n                                                    - '을' 이 30일 이내 2회 이상 '갑'으로부터 납부 권고를 받고도 월 이용회비를 납부하지 않은 경우\t\t\t\t\t\t\t\t\t\r\n                                                </li>\r\n                                                <li>\r\n                                                    - '갑' 이 규정한 ‘회원이용안내’의 규칙을 준수하지 않고 질서를 문란하여 타 회원에게 피해를\t\t\t\t\t\t\t\t\t\r\n                                                    입힌 경우\t\t\t\t\t\t\t\t\t\r\n                                                </li>\r\n                                                <li>\r\n                                                    - '을'이  '갑' 의 사전 승인 없이 회원계약을 제 3자에게 인도한 경우\t\t\t\t\t\t\t\t\t\r\n                                                </li>\r\n                                                <li>\r\n                                                    - '을' 의 업무가 반사회적이거나, 현행 법률에 저촉되어 물의가 될 것으로 판단되는 경우\t\t\t\t\t\t\t\t\t\r\n                                                </li>\r\n                                                <li>\r\n                                                    - '을' 로 인해  '갑' 과  '갑'의 이해당사자에게 법적인 문제(채권 가압류등) 및 피해가 발생한 경우\t\t\t\t\t\t\t\t\t\r\n                                                </li>\r\n                                                </ul>\r\n                                            </li>\r\n                                    \r\n                                    </ul>\r\n                                </div>\r\n\r\n                                <div className = \"paragraph\">                                    \r\n                                <h3>9. 위 제8조 제5항에 의거하여 '갑'이 일방적으로 본 계약을 해지 할 경우</h3>\r\n                                    <ul>\t\r\n                                        <li>\t\t\t\t\t\t\t\t\r\n                                            1) 해지 3일 전에 서면 또는 전자메일로 통보하며 계약해지에 따른 월회비나 서비스 이용대금을 정산하고\t\t\t\t\t\t\t\t\t\r\n                                            '을'의 회원자격을 박탈한다.\r\n                                        </li>\r\n                                        <li>\t\t\t\t\t\t\t\t\t\r\n                                            2) '을'은 계약해지를 통보 받은 날로부터 3일 이내에 '갑'의 유치물품을 퇴거해야 하며, 퇴거하지 않을 경우\t\t\t\t\t\t\t\t\t\r\n                                            '을'의 유치물품에 대한 분실이나 도난에 대해 '갑'은 책임을 지지 않는다.\t\t\t\t\t\t\t\t\t\r\n                                        </li>\r\n                                        <li>                            \r\n                                            3) 본 계약서에 명시된 월회비나 서비스 이용대금을 전액 납부하지 않은 경우, '갑'은 사무실 또는 건물에\t\t\t\t\t\t\t\t\t\r\n                                            있는 '을'의 자산에 대하여 최우선적인 담보권을 취득한다. 만일 '을'이 '갑'의 서면 통지를 받은\t\t\t\t\t\t\t\t\t\r\n                                            날로부터 10일 내에 미지급된 금액을 납부하지 않을 경우, '갑'은 '을'의 동의 없이 '갑'이 자산을 이전\t\t\t\t\t\t\t\t\t\r\n                                            및 임의 처분할 권리를 가진다.\r\n                                        </li>\r\n                                    </ul>\t\t\t\t\t\t\t\t\t\r\n                                </div>\r\n\r\n                                <div className = \"paragraph\">                                    \r\n                                <h3>10. 분쟁의 해결</h3>\r\n                                    <ul>\r\n                                        <li>\t\t\t\t\t\t\t\t\t\r\n                                            1) '갑'과 '을'간에 본 계약과 관련하여 분쟁이 야기되는 경우, 해당 분쟁은 대한상사중재원에게 상사중재에 \t\t\t\t\t\t\t\t\t\r\n                                                의하여 상호 해결하는데 동의한다.\r\n                                        </li>\r\n                                        <li>\t\t\t\t\t\t\t\t\t\r\n                                            2) 본 계약의 준거법은 대한국민법으로 한다.\r\n                                        </li>\r\n                                        <li>\t\t\t\t\t\t\t\t\t\r\n                                            3) '을'이 계약을 해지하고자 할 경우에는 해지를 희망하는 날로부터 15일전에 '갑'에게 서면 통지하여야\t\t\t\t\t\t\t\t\t\r\n                                                하며, '갑'은 사용료를 일할 정산한다.\t\t\t\t\t\t\t\t\t\r\n                                        </li>        \r\n                                    </ul>\r\n                                </div>                                    \r\n                                <br/>\r\n                                                             \r\n                                <div className = \"paragraph\">\r\n                                이상과 같은 합의를 증명하기 위하여 본 계약을 체결하며, 양 당사자는 계약서에 각기 서명 날인하여 1부씩\t\t\t\t\t\t\t\t\t\r\n                                이를 보관 한다.\t\t\r\n                                </div>\t\t\t\t\t\t\t\r\n                                                                    \r\n                                <div className = \"paragraph\" id = \"processOfSign\">      \r\n                                    <table>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>센터매니저</td>\r\n                                                <td></td>\r\n                                                <td></td>\r\n                                                <td>상기내용을 잘 주지시켰음</td>\r\n                                                <td></td>\r\n                                                <td></td>\r\n                                                <td>서명</td>\r\n                                            </tr> \r\n                                            <tr>\r\n                                                <td>이용자</td>\r\n                                                <td></td>\r\n                                                <td></td>\r\n                                                <td>상기내용을 완전히 숙지하였음</td>\r\n                                                <td></td>\r\n                                                <td></td>\r\n                                                <td>서명</td>\r\n                                            </tr>                             \r\n                                \t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                                        </tbody>        \r\n                                    </table>            \r\n                                </div>                                    \r\n                                                                    \r\n                                                                    \r\n                                <div className = \"paragraph\">                                    \r\n                                임대인 : ㈜에스원테크 &emsp;&emsp;서명(인)<br/>             \t\t\t\t\t\t\t\t\t\r\n                                &emsp;&emsp;&emsp;&nbsp;&nbsp; 최현수<br/>\t\t\t\t\t\t\t\t\t\r\n                                법인등록번호 110111-4806381<br/>           \t\t\t\t\t\t\t\t\t\r\n                                사업등록번호 105-87-68698<br/>              \t\t\t\t\t\t\t\t\t\r\n                                주소 : 서울시 강남구 봉은사로63길 11, 3,4층<br/>  \t\t\t\t\t\t\t\t\t\r\n                                연락처 : 070-4355-2312<br/>                 \t\t\t\t\t\t\t\t\t\r\n                                </div>                                   \r\n                                <br/>\r\n                                <div className = \"paragraph\">                                   \r\n                                임차인 : {companyName} &emsp;&emsp;서명(인)<br/>\t\t\t\t\t\t\t\t\t\r\n                                &emsp;&emsp;&emsp;&nbsp;&nbsp; {ceoName}\r\n                                <br/>                        \r\n                                법인등록번호 :\t\t\t\t\t\t\t\t<br/>\r\n                                사업자등록번호 : \t{bLicenseNum}\t\t\t\t\t\t\t\t<br/>\t\r\n                                주소 : {companyAddr}\t\t\t\t\t\t\t\t\t<br/>\r\n                                <br/>                                                    \r\n                                연락처 : {ceoTel} <br/>\r\n                                </div>\r\n                        </div>                                    \r\n                    </Fragment>\r\n                </div>\r\n\r\n\r\n     );\r\n}\r\nexport default LeaseAgreement;\r\n","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\Dashboard.js",[],"C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\Orders.js",[],"C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\listItems.js",["260","261"],"import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n      <PeopleIcon />\r\n      </ListItemIcon>\r\n      <Link to=\"/member\"><ListItemText primary=\"회원현황\" /></Link>\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <ShoppingCartIcon />\r\n      </ListItemIcon>\r\n      <Link to =\"/paymentStatus\"><ListItemText primary=\"납부현황\" /></Link>\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n      <DashboardIcon />\r\n      </ListItemIcon>\r\n      <Link to =\"/consultationStatus\"><ListItemText primary=\"상담현황\" /></Link>\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <BarChartIcon />\r\n      </ListItemIcon>\r\n      <Link to =\"/staff\"><ListItemText primary=\"직원현황\" /></Link>\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <LayersIcon />\r\n      </ListItemIcon>\r\n      <Link to =\"/login\"><ListItemText primary=\"로그인/로그아웃\" /></Link>\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n   <div>\r\n  {/* //   <ListSubheader inset>Saved reports</ListSubheader>\r\n  //   <ListItem button>\r\n  //     <ListItemIcon>\r\n  //       <AssignmentIcon />\r\n  //     </ListItemIcon>\r\n  //     <ListItemText primary=\"Current month\" />\r\n  //   </ListItem>\r\n  //   <ListItem button>\r\n  //     <ListItemIcon>\r\n  //       <AssignmentIcon />\r\n  //     </ListItemIcon>\r\n  //     <ListItemText primary=\"Last quarter\" />\r\n  //   </ListItem>\r\n  //   <ListItem button>\r\n  //     <ListItemIcon>\r\n  //       <AssignmentIcon />\r\n  //     </ListItemIcon>\r\n  //     <ListItemText primary=\"Year-end sale\" />\r\n  //   </ListItem> */}\r\n   </div>\r\n);","C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\css\\Title.js",[],"C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\Title.js",[],"C:\\Users\\team_\\Desktop\\mysqltestCopy\\src\\utils\\PostCard.js",[],{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":1,"column":16,"nodeType":"268","messageId":"269","endLine":1,"endColumn":25},{"ruleId":"266","severity":1,"message":"270","line":6,"column":10,"nodeType":"268","messageId":"269","endLine":6,"endColumn":14},{"ruleId":"266","severity":1,"message":"271","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":12},{"ruleId":"266","severity":1,"message":"272","line":17,"column":5,"nodeType":"268","messageId":"269","endLine":17,"endColumn":15},{"ruleId":"262","replacedBy":"273"},{"ruleId":"264","replacedBy":"274"},{"ruleId":"266","severity":1,"message":"275","line":6,"column":18,"nodeType":"268","messageId":"269","endLine":6,"endColumn":27},{"ruleId":"276","severity":1,"message":"277","line":11,"column":1,"nodeType":"278","endLine":33,"endColumn":2},{"ruleId":"266","severity":1,"message":"275","line":1,"column":26,"nodeType":"268","messageId":"269","endLine":1,"endColumn":35},{"ruleId":"266","severity":1,"message":"279","line":3,"column":8,"nodeType":"268","messageId":"269","endLine":3,"endColumn":13},{"ruleId":"266","severity":1,"message":"280","line":6,"column":8,"nodeType":"268","messageId":"269","endLine":6,"endColumn":18},{"ruleId":"266","severity":1,"message":"281","line":11,"column":5,"nodeType":"268","messageId":"269","endLine":11,"endColumn":14},{"ruleId":"266","severity":1,"message":"282","line":12,"column":5,"nodeType":"268","messageId":"269","endLine":12,"endColumn":12},{"ruleId":"266","severity":1,"message":"283","line":13,"column":5,"nodeType":"268","messageId":"269","endLine":13,"endColumn":10},{"ruleId":"266","severity":1,"message":"272","line":15,"column":5,"nodeType":"268","messageId":"269","endLine":15,"endColumn":15},{"ruleId":"266","severity":1,"message":"284","line":25,"column":20,"nodeType":"268","messageId":"269","endLine":25,"endColumn":31},{"ruleId":"266","severity":1,"message":"285","line":26,"column":16,"nodeType":"268","messageId":"269","endLine":26,"endColumn":23},{"ruleId":"266","severity":1,"message":"286","line":27,"column":21,"nodeType":"268","messageId":"269","endLine":27,"endColumn":33},{"ruleId":"266","severity":1,"message":"287","line":28,"column":20,"nodeType":"268","messageId":"269","endLine":28,"endColumn":31},{"ruleId":"266","severity":1,"message":"288","line":29,"column":21,"nodeType":"268","messageId":"269","endLine":29,"endColumn":33},{"ruleId":"266","severity":1,"message":"289","line":30,"column":18,"nodeType":"268","messageId":"269","endLine":30,"endColumn":27},{"ruleId":"266","severity":1,"message":"267","line":1,"column":16,"nodeType":"268","messageId":"269","endLine":1,"endColumn":25},{"ruleId":"266","severity":1,"message":"267","line":1,"column":16,"nodeType":"268","messageId":"269","endLine":1,"endColumn":25},{"ruleId":"262","replacedBy":"290"},{"ruleId":"264","replacedBy":"291"},{"ruleId":"266","severity":1,"message":"292","line":72,"column":25,"nodeType":"268","messageId":"269","endLine":72,"endColumn":39},{"ruleId":"266","severity":1,"message":"293","line":77,"column":12,"nodeType":"268","messageId":"269","endLine":77,"endColumn":25},{"ruleId":"266","severity":1,"message":"294","line":78,"column":12,"nodeType":"268","messageId":"269","endLine":78,"endColumn":23},{"ruleId":"295","severity":1,"message":"296","line":193,"column":8,"nodeType":"297","endLine":193,"endColumn":10,"suggestions":"298"},{"ruleId":"295","severity":1,"message":"299","line":299,"column":8,"nodeType":"297","endLine":299,"endColumn":10,"suggestions":"300"},{"ruleId":"301","severity":1,"message":"302","line":374,"column":21,"nodeType":"303","messageId":"304","endLine":393,"endColumn":22},{"ruleId":"305","severity":1,"message":"306","line":544,"column":44,"nodeType":"307","messageId":"308","endLine":544,"endColumn":46},{"ruleId":"305","severity":1,"message":"306","line":549,"column":46,"nodeType":"307","messageId":"308","endLine":549,"endColumn":48},{"ruleId":"305","severity":1,"message":"306","line":549,"column":90,"nodeType":"307","messageId":"308","endLine":549,"endColumn":92},{"ruleId":"305","severity":1,"message":"306","line":549,"column":132,"nodeType":"307","messageId":"308","endLine":549,"endColumn":134},{"ruleId":"305","severity":1,"message":"306","line":554,"column":46,"nodeType":"307","messageId":"308","endLine":554,"endColumn":48},{"ruleId":"305","severity":1,"message":"306","line":559,"column":52,"nodeType":"307","messageId":"308","endLine":559,"endColumn":54},{"ruleId":"305","severity":1,"message":"306","line":564,"column":50,"nodeType":"307","messageId":"308","endLine":564,"endColumn":52},{"ruleId":"305","severity":1,"message":"306","line":569,"column":40,"nodeType":"307","messageId":"308","endLine":569,"endColumn":42},{"ruleId":"305","severity":1,"message":"306","line":574,"column":44,"nodeType":"307","messageId":"308","endLine":574,"endColumn":46},{"ruleId":"305","severity":1,"message":"306","line":579,"column":27,"nodeType":"307","messageId":"308","endLine":579,"endColumn":29},{"ruleId":"305","severity":1,"message":"306","line":581,"column":34,"nodeType":"307","messageId":"308","endLine":581,"endColumn":36},{"ruleId":"305","severity":1,"message":"306","line":583,"column":33,"nodeType":"307","messageId":"308","endLine":583,"endColumn":35},{"ruleId":"305","severity":1,"message":"306","line":585,"column":34,"nodeType":"307","messageId":"308","endLine":585,"endColumn":36},{"ruleId":"305","severity":1,"message":"306","line":585,"column":62,"nodeType":"307","messageId":"308","endLine":585,"endColumn":64},{"ruleId":"305","severity":1,"message":"306","line":585,"column":89,"nodeType":"307","messageId":"308","endLine":585,"endColumn":91},{"ruleId":"305","severity":1,"message":"306","line":599,"column":44,"nodeType":"307","messageId":"308","endLine":599,"endColumn":46},{"ruleId":"305","severity":1,"message":"306","line":604,"column":46,"nodeType":"307","messageId":"308","endLine":604,"endColumn":48},{"ruleId":"305","severity":1,"message":"306","line":604,"column":90,"nodeType":"307","messageId":"308","endLine":604,"endColumn":92},{"ruleId":"305","severity":1,"message":"306","line":604,"column":132,"nodeType":"307","messageId":"308","endLine":604,"endColumn":134},{"ruleId":"305","severity":1,"message":"306","line":609,"column":27,"nodeType":"307","messageId":"308","endLine":609,"endColumn":29},{"ruleId":"305","severity":1,"message":"306","line":611,"column":34,"nodeType":"307","messageId":"308","endLine":611,"endColumn":36},{"ruleId":"305","severity":1,"message":"306","line":613,"column":33,"nodeType":"307","messageId":"308","endLine":613,"endColumn":35},{"ruleId":"305","severity":1,"message":"306","line":615,"column":34,"nodeType":"307","messageId":"308","endLine":615,"endColumn":36},{"ruleId":"305","severity":1,"message":"306","line":615,"column":62,"nodeType":"307","messageId":"308","endLine":615,"endColumn":64},{"ruleId":"305","severity":1,"message":"306","line":615,"column":89,"nodeType":"307","messageId":"308","endLine":615,"endColumn":91},{"ruleId":"305","severity":1,"message":"306","line":627,"column":46,"nodeType":"307","messageId":"308","endLine":627,"endColumn":48},{"ruleId":"305","severity":1,"message":"306","line":632,"column":52,"nodeType":"307","messageId":"308","endLine":632,"endColumn":54},{"ruleId":"305","severity":1,"message":"306","line":637,"column":50,"nodeType":"307","messageId":"308","endLine":637,"endColumn":52},{"ruleId":"305","severity":1,"message":"306","line":642,"column":40,"nodeType":"307","messageId":"308","endLine":642,"endColumn":42},{"ruleId":"305","severity":1,"message":"306","line":647,"column":44,"nodeType":"307","messageId":"308","endLine":647,"endColumn":46},{"ruleId":"305","severity":1,"message":"306","line":688,"column":26,"nodeType":"307","messageId":"308","endLine":688,"endColumn":28},{"ruleId":"266","severity":1,"message":"309","line":745,"column":21,"nodeType":"268","messageId":"269","endLine":745,"endColumn":38},{"ruleId":"305","severity":1,"message":"306","line":773,"column":42,"nodeType":"307","messageId":"308","endLine":773,"endColumn":44},{"ruleId":"305","severity":1,"message":"306","line":784,"column":49,"nodeType":"307","messageId":"308","endLine":784,"endColumn":51},{"ruleId":"310","severity":1,"message":"311","line":1150,"column":109,"nodeType":"312","endLine":1150,"endColumn":126},{"ruleId":"305","severity":1,"message":"306","line":1159,"column":156,"nodeType":"307","messageId":"308","endLine":1159,"endColumn":158},{"ruleId":"310","severity":1,"message":"311","line":1582,"column":115,"nodeType":"312","endLine":1582,"endColumn":130},{"ruleId":"266","severity":1,"message":"313","line":165,"column":11,"nodeType":"268","messageId":"269","endLine":165,"endColumn":26},{"ruleId":"266","severity":1,"message":"314","line":168,"column":11,"nodeType":"268","messageId":"269","endLine":168,"endColumn":26},{"ruleId":"266","severity":1,"message":"315","line":171,"column":11,"nodeType":"268","messageId":"269","endLine":171,"endColumn":28},{"ruleId":"295","severity":1,"message":"316","line":239,"column":8,"nodeType":"297","endLine":239,"endColumn":10,"suggestions":"317"},{"ruleId":"295","severity":1,"message":"318","line":176,"column":8,"nodeType":"297","endLine":176,"endColumn":10,"suggestions":"319"},{"ruleId":"266","severity":1,"message":"320","line":166,"column":12,"nodeType":"268","messageId":"269","endLine":166,"endColumn":26},{"ruleId":"295","severity":1,"message":"321","line":209,"column":8,"nodeType":"297","endLine":209,"endColumn":10,"suggestions":"322"},{"ruleId":"305","severity":1,"message":"306","line":296,"column":18,"nodeType":"307","messageId":"308","endLine":296,"endColumn":20},{"ruleId":"266","severity":1,"message":"323","line":134,"column":12,"nodeType":"268","messageId":"269","endLine":134,"endColumn":31},{"ruleId":"266","severity":1,"message":"324","line":172,"column":26,"nodeType":"268","messageId":"269","endLine":172,"endColumn":41},{"ruleId":"266","severity":1,"message":"325","line":240,"column":27,"nodeType":"268","messageId":"269","endLine":240,"endColumn":39},{"ruleId":"295","severity":1,"message":"326","line":282,"column":8,"nodeType":"297","endLine":282,"endColumn":10,"suggestions":"327"},{"ruleId":"328","severity":1,"message":"329","line":672,"column":33,"nodeType":"330","endLine":672,"endColumn":76},{"ruleId":"328","severity":1,"message":"329","line":684,"column":33,"nodeType":"330","endLine":684,"endColumn":76},{"ruleId":"266","severity":1,"message":"331","line":2,"column":17,"nodeType":"268","messageId":"269","endLine":2,"endColumn":25},{"ruleId":"266","severity":1,"message":"332","line":24,"column":8,"nodeType":"268","messageId":"269","endLine":24,"endColumn":14},{"ruleId":"266","severity":1,"message":"333","line":123,"column":9,"nodeType":"268","messageId":"269","endLine":123,"endColumn":23},{"ruleId":"266","severity":1,"message":"334","line":127,"column":9,"nodeType":"268","messageId":"269","endLine":127,"endColumn":26},{"ruleId":"266","severity":1,"message":"335","line":131,"column":9,"nodeType":"268","messageId":"269","endLine":131,"endColumn":24},{"ruleId":"295","severity":1,"message":"336","line":57,"column":8,"nodeType":"297","endLine":57,"endColumn":10,"suggestions":"337"},{"ruleId":"295","severity":1,"message":"338","line":73,"column":8,"nodeType":"297","endLine":73,"endColumn":10,"suggestions":"339"},{"ruleId":"301","severity":1,"message":"302","line":100,"column":21,"nodeType":"303","messageId":"304","endLine":104,"endColumn":22},{"ruleId":"328","severity":1,"message":"340","line":15,"column":25,"nodeType":"330","endLine":15,"endColumn":82},{"ruleId":"266","severity":1,"message":"341","line":1,"column":48,"nodeType":"268","messageId":"269","endLine":1,"endColumn":54},{"ruleId":"266","severity":1,"message":"342","line":120,"column":11,"nodeType":"268","messageId":"269","endLine":120,"endColumn":18},{"ruleId":"266","severity":1,"message":"343","line":121,"column":12,"nodeType":"268","messageId":"269","endLine":121,"endColumn":16},{"ruleId":"266","severity":1,"message":"344","line":122,"column":12,"nodeType":"268","messageId":"269","endLine":122,"endColumn":17},{"ruleId":"266","severity":1,"message":"345","line":122,"column":19,"nodeType":"268","messageId":"269","endLine":122,"endColumn":27},{"ruleId":"266","severity":1,"message":"346","line":123,"column":12,"nodeType":"268","messageId":"269","endLine":123,"endColumn":21},{"ruleId":"266","severity":1,"message":"347","line":123,"column":23,"nodeType":"268","messageId":"269","endLine":123,"endColumn":35},{"ruleId":"266","severity":1,"message":"348","line":125,"column":11,"nodeType":"268","messageId":"269","endLine":125,"endColumn":27},{"ruleId":"266","severity":1,"message":"349","line":129,"column":11,"nodeType":"268","messageId":"269","endLine":129,"endColumn":28},{"ruleId":"266","severity":1,"message":"324","line":143,"column":26,"nodeType":"268","messageId":"269","endLine":143,"endColumn":41},{"ruleId":"350","severity":1,"message":"351","line":179,"column":50,"nodeType":"352","messageId":"353","endLine":179,"endColumn":52},{"ruleId":"295","severity":1,"message":"354","line":205,"column":8,"nodeType":"297","endLine":205,"endColumn":10,"suggestions":"355"},{"ruleId":"266","severity":1,"message":"356","line":35,"column":23,"nodeType":"268","messageId":"269","endLine":35,"endColumn":41},{"ruleId":"295","severity":1,"message":"357","line":89,"column":12,"nodeType":"297","endLine":89,"endColumn":14,"suggestions":"358"},{"ruleId":"266","severity":1,"message":"359","line":5,"column":8,"nodeType":"268","messageId":"269","endLine":5,"endColumn":21},{"ruleId":"266","severity":1,"message":"360","line":11,"column":8,"nodeType":"268","messageId":"269","endLine":11,"endColumn":22},"no-native-reassign",["361"],"no-negated-in-lhs",["362"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Main' is defined but never used.","'registNums' is assigned a value but never used.",["361"],["362"],"'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Axios' is defined but never used.","'DatePicker' is defined but never used.","'RoomTypes' is assigned a value but never used.","'Methods' is assigned a value but never used.","'Paths' is assigned a value but never used.","'setUserName' is assigned a value but never used.","'setBnum' is assigned a value but never used.","'setOwnerName' is assigned a value but never used.","'setUserSort' is assigned a value but never used.","'setEndStatus' is assigned a value but never used.","'setStatus' is assigned a value but never used.",["361"],["362"],"'setEndAsk_date' is assigned a value but never used.","'contractStart' is assigned a value but never used.","'contractEnd' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'modalMemberId' and 'props.newDataForm'. Either include them or remove the dependency array.","ArrayExpression",["363"],"React Hook useEffect has missing dependencies: 'props.cDataForm' and 'rNum'. Either include them or remove the dependency array.",["364"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'existingStartDate' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'onRegistHandler' is assigned a value but never used.","'onModifyHandler' is assigned a value but never used.","'onApprovalHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'memberList'. Either include it or remove the dependency array.",["365"],"React Hook useEffect has missing dependencies: 'endDate' and 'startDate'. Either include them or remove the dependency array.",["366"],"'checkForDelete' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'searchAsk'. Either include it or remove the dependency array.",["367"],"'nameForDetailCModal' is assigned a value but never used.","'setPostsPerPage' is assigned a value but never used.","'modalEndFlag' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'detailMemberList'. Either include it or remove the dependency array.",["368"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Fragment' is defined but never used.","'Button' is defined but never used.","'onEmailHandler' is assigned a value but never used.","'onPasswordHandler' is assigned a value but never used.","'onSubmitHandler' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.dataForm' and 'rNum'. Either include them or remove the dependency array.",["369"],"React Hook useEffect has missing dependencies: 'getAccessPathLov', 'getAskMethodLov', and 'getContractTpLov'. Either include them or remove the dependency array.",["370"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useRef' is defined but never used.","'classes' is assigned a value but never used.","'open' is assigned a value but never used.","'mOpen' is assigned a value but never used.","'setMOpen' is assigned a value but never used.","'storeOpen' is assigned a value but never used.","'setStoreOpen' is assigned a value but never used.","'handleDrawerOpen' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'paymentStList'. Either include it or remove the dependency array.",["371"],"'modalCContractDate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.dataNum'. Either include it or remove the dependency array.",["372"],"'ListSubheader' is defined but never used.","'AssignmentIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},"Update the dependencies array to be: [modalMemberId, props.newDataForm]",{"range":"393","text":"394"},"Update the dependencies array to be: [props.cDataForm, rNum]",{"range":"395","text":"396"},"Update the dependencies array to be: [memberList]",{"range":"397","text":"398"},"Update the dependencies array to be: [endDate, startDate]",{"range":"399","text":"400"},"Update the dependencies array to be: [searchAsk]",{"range":"401","text":"402"},"Update the dependencies array to be: [detailMemberList]",{"range":"403","text":"404"},"Update the dependencies array to be: [props.dataForm, rNum]",{"range":"405","text":"406"},"Update the dependencies array to be: [getAccessPathLov, getAskMethodLov, getContractTpLov]",{"range":"407","text":"408"},"Update the dependencies array to be: [paymentStList]",{"range":"409","text":"410"},"Update the dependencies array to be: [props.dataNum]",{"range":"411","text":"412"},[7300,7302],"[modalMemberId, props.newDataForm]",[13108,13110],"[props.cDataForm, rNum]",[7301,7303],"[memberList]",[5624,5626],"[endDate, startDate]",[6514,6516],"[searchAsk]",[9661,9663],"[detailMemberList]",[2035,2037],"[props.dataForm, rNum]",[2639,2641],"[getAccessPathLov, getAskMethodLov, getContractTpLov]",[6595,6597],"[paymentStList]",[3706,3708],"[props.dataNum]"]