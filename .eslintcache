[{"C:\\Users\\team_\\Desktop\\mysqltest\\src\\index.js":"1","C:\\Users\\team_\\Desktop\\mysqltest\\src\\App.js":"2","C:\\Users\\team_\\Desktop\\mysqltest\\src\\reportWebVitals.js":"3","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Counseling\\Counseling.js":"4","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Main\\Main.js":"5","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Counseling\\CounselStatus.js":"6","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\LoginPage\\LoginPage.js":"7","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\NavBar\\NavBar.js":"8","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Routes.js":"9","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Member\\Member.js":"10","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\PaymentStatus\\PaymentStatus.js":"11","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Staff\\Swon.js":"12","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\index.js":"13","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\reportWebVitals.js":"14","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\App.js":"15","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\Routes.js":"16","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\Components\\Member\\Member.js":"17","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\Components\\Staff\\Swon.js":"18","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\Components\\Counseling\\CounselStatus.js":"19","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\Components\\LoginPage\\LoginPage.js":"20","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\Components\\PaymentStatus\\PaymentStatus.js":"21","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\Components\\Main\\Main.js":"22","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\s010100140.js":"23","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\S010100140.js":"24","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\S010100010.js":"25","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\S010100040.js":"26","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\S010100130.js":"27","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\S010100050.js":"28"},{"size":555,"mtime":1609727657789,"results":"29","hashOfConfig":"30"},{"size":240,"mtime":1609727648266,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":11524,"mtime":1609829204925,"results":"33","hashOfConfig":"30"},{"size":1055,"mtime":1609833591029,"results":"34","hashOfConfig":"30"},{"size":8135,"mtime":1609830177180,"results":"35","hashOfConfig":"30"},{"size":2082,"mtime":1609828498424,"results":"36","hashOfConfig":"30"},{"size":994,"mtime":1609727352401,"results":"37","hashOfConfig":"30"},{"size":1306,"mtime":1609834092417,"results":"38","hashOfConfig":"30"},{"size":4553,"mtime":1609836098390,"results":"39","hashOfConfig":"30"},{"size":4356,"mtime":1609833363720,"results":"40","hashOfConfig":"30"},{"size":5135,"mtime":1609835439756,"results":"41","hashOfConfig":"30"},{"size":535,"mtime":1610642273776,"results":"42","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"43"},{"size":174,"mtime":1609994212394,"results":"45","hashOfConfig":"43"},{"size":1566,"mtime":1610633785707,"results":"46","hashOfConfig":"43"},{"size":4877,"mtime":1609986866323,"results":"47","hashOfConfig":"43"},{"size":5124,"mtime":1609994114144,"results":"48","hashOfConfig":"43"},{"size":8135,"mtime":1609830177180,"results":"49","hashOfConfig":"43"},{"size":2072,"mtime":1609994154688,"results":"50","hashOfConfig":"43"},{"size":4345,"mtime":1609994120155,"results":"51","hashOfConfig":"43"},{"size":1061,"mtime":1610347465830,"results":"52","hashOfConfig":"43"},{"size":8149,"mtime":1609899616826,"results":"53","hashOfConfig":"43"},{"size":8560,"mtime":1610642114223,"results":"54","hashOfConfig":"43"},{"size":22400,"mtime":1610642273777,"results":"55","hashOfConfig":"43"},{"size":12891,"mtime":1610635557163,"results":"56","hashOfConfig":"43"},{"size":12487,"mtime":1610641520660,"results":"57","hashOfConfig":"43"},{"size":17691,"mtime":1610642273807,"results":"58","hashOfConfig":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"2g9vyx",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19d91v3",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"96"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":10,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"96"},"C:\\Users\\team_\\Desktop\\mysqltest\\src\\index.js",[],["131","132"],"C:\\Users\\team_\\Desktop\\mysqltest\\src\\App.js",[],"C:\\Users\\team_\\Desktop\\mysqltest\\src\\reportWebVitals.js",[],"C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Counseling\\Counseling.js",["133","134"],"import React,{ Component, Fragment,useEffect,useState } from 'react';\r\nimport './Counseling.css';\r\nimport Main from'../Main/Main.js';\r\nimport axios from \"axios\";\r\nimport CounselStatus from './CounselStatus';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//<!--모달창 라이브러리\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n//모달창 라이브러리 끝-->\r\n\r\n//<!--켈린더 라이브러리시작\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport ko from 'date-fns/locale/ko';\r\n\r\nregisterLocale(\"ko\", ko);\r\n//켈린더 라이브러리 끝-->\r\n\r\nvar rNum = '';\r\nvar Rnum = 0;\r\n\r\n\r\nvar Methods = []\r\n\r\nfunction Counseling (props) {\r\n\r\n    const[ConsultRegists, setConsultRegists] = useState([])\r\n\r\n    useEffect(()=>{\r\n        \r\n        axios.post('/api/register/registers')\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    console.log(response.data.rows)\r\n                    setConsultRegists(response.data.rows)\r\n                }else{ \r\n                    alert(\"상세 정보 가져오기를 실패하였습니다.\")\r\n                }\r\n\r\n            })\r\n\r\n    },[])\r\n    \r\n    const[method, setMethod]=useState([])\r\n    \r\n    useEffect(()=>{\r\n        axios.post('/api/register/insertMethod')\r\n        .then(response => {\r\n            if(response.data.success){\r\n                console.log('insertMethod',response.data);\r\n                let arr = [{value: '전체', text: '전체' }]\r\n\r\n                response.data.rows.map((data) => \r\n                    arr.push({\r\n                    value: '[' + data.CD_V + ']' + data.CD_V_MEANING, text: data.CD_V,\r\n                }));\r\n                \r\n                Methods=arr;\r\n\r\n                console.log('insertMethodArr',arr);\r\n            }else{\r\n                alert(\"문의구분 데이터를 불러오는데 실패하였습니다.\");\r\n            }\r\n        })\r\n\r\n        \r\n        \r\n    },[])\r\n\r\n    //<!--모달창 속성 및 이벤트 \r\n    const [open, setOpen] = React.useState(false);\r\n    const [storeOpen, setStoreOpen] = React.useState(false);\r\n    const [CRegists,setCRegists] = useState({});\r\n\r\n\r\n\r\n    //상담등록 모달\r\n    const onhandleClickOpen = () => {\r\n        setStoreOpen(true); \r\n     \r\n     };  \r\n\r\n                //상담등록 저장버튼이벤트\r\n                // const onhandleStoreClose = () => {\r\n                //     setOpen(false);\r\n                // }\r\n            \r\n     const onhandleClose = (event) => {\r\n          \r\n        axios.post('/api/register/registers')\r\n        .then(response => {\r\n            if(response.data.success){\r\n                console.log(response.data.rows)\r\n                setConsultRegists(response.data.rows)\r\n            }else{ \r\n                alert(\"상담등록 페이지 가져오기를 실패하였습니다.\")\r\n            }\r\n\r\n        })\r\n\r\n        setStoreOpen(false);\r\n       };\r\n    //상담등록 모달 끝\r\n\r\n    //상세보기 모달\r\n    const handleClickOpen = (e) => {\r\n       setOpen(true); \r\n       rNum = e.target.innerHTML\r\n       Rnum= parseInt(rNum);\r\n       //console.log(Rnum)\r\n\r\n       axios.get(`/api/register/register_by_id?id=${Rnum}&type=single`) \r\n       .then(response => {\r\n           if(response.data.success){\r\n               console.log(response.data)\r\n               setCRegists(response.data.rows[0])\r\n               //console.log(response.data.consultRegistInfo.num)\r\n           }else{\r\n               alert(\"상세 정보 가져오기를 실패하였습니다.\")\r\n           }\r\n\r\n       })\r\n    };  \r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n      //상세보기 모달 끝 \r\n    //모달창 속성 및 이벤트 끝-->\r\n\r\n\r\n    //<!--캘린더 속성 \r\n    const [startDate, setStartDate] = useState(new Date(\"2020/01/01\"));\r\n    const [endDate, setEndDate] = useState(new Date(\"2022/01/01\"));\r\n    //캘린더 속성 끝--> \r\n\r\n\r\n    //<!--onSubmit\r\n      const onSubmitHandler=(event)=>{\r\n        event.preventDefault();\r\n\r\n        // if(method.valueOf('전체') ||!startDate||!endDate||!searchName){\r\n        //     return alert(\"값을 입력하세요\")\r\n        // }\r\n\r\n         const body = {\r\n            startDate,\r\n            searchName,\r\n            method,\r\n            endDate\r\n        }\r\n        \r\n        //console.log(body);\r\n        \r\n        axios.post(\"/api/register/search\",body)\r\n        .then(response => {\r\n            if(response?.data?.success){\r\n                console.log('search',response.data.rows);\r\n                setConsultRegists(response.data.rows);\r\n            }else{\r\n                alert('검색에 실패하였습니다.')\r\n            }\r\n        })\r\n\r\n      }\r\n    //onSubmit끝-->\r\n    \r\n    \r\n\r\n\r\n    const[searchName, setSearchName] = useState(\"\")\r\n\r\n    const MethodChangeHandler=(event)=>{\r\n        setMethod(event.currentTarget.value);\r\n    }\r\n\r\n    const nameSearchHandler=(event)=>{\r\n        setSearchName(event.currentTarget.value);\r\n    }\r\n\r\n    //console.log('ConsultRegists',ConsultRegists);\r\n\r\n    const resultTable = ConsultRegists.map((ConsultRegists,index)=>{\r\n\r\n        return<tr>\r\n                <td name =\"cname\" variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} id={ConsultRegists.num}><u>{ConsultRegists.num}\r\n                </u></td>\r\n                {/* 모달창 시작 */}\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{CRegists.cname+\"님의 상담내용 입니다.\"}</DialogTitle>\r\n                    <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {CRegists.content}\r\n                    </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        확인\r\n                    </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                {/* 모달창 끝*/}\r\n\r\n                <td>{ConsultRegists.roomtype}</td>\r\n                <td>{ConsultRegists.counseldate}</td>\r\n                <td>{ConsultRegists.method}</td>\r\n                <td>{ConsultRegists.cname}</td>\r\n                <td>{ConsultRegists.phone}</td>\r\n                <td>{ConsultRegists.path}</td>\r\n                \r\n            </tr>\r\n    })\r\n\r\n  \r\n      return (\r\n            <Fragment>\r\n                <Main/>\r\n                \r\n                <div style={{display:'flex', justifyContent:'center',alignItems:'center',width:'100%'}}>\r\n                    <form style = {{display:'flex', flexDirection:'column'}}\r\n                     onSubmit={onSubmitHandler}\r\n                    >\r\n\r\n                    <h1>상담현황</h1>\r\n                    <div id = \"search\">\r\n                        \r\n                        문의일자   \r\n                    {/* date클릭할 때 고정 */}\r\n                        <DatePicker\r\n                            selected={startDate}\r\n                            onChange={date => setStartDate(date)}\r\n                            selectsStart\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                        /> ~ \r\n                        <DatePicker\r\n                            selected={endDate}\r\n                            onChange={date => setEndDate(date)}\r\n                            selectsEnd\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                            minDate={startDate}\r\n                        />\r\n                    \r\n                        {/* <input type=\"image\" src=\"/examples/images/submit_icon.png\" alt=\"제출버튼\" height=\"30\" width=\"30\"/> */}\r\n                        &nbsp;\r\n                       \r\n                        문의구분 \r\n                        <select onChange ={MethodChangeHandler} value ={method}>   \r\n                        \r\n                            {Methods.map(item => ( \r\n                                <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                            ))}\r\n                    \r\n                        </select>\r\n                        &nbsp; \r\n\r\n                        문의자명\r\n                         <input type=\"text\" value = {searchName} id=\"searchlName\" name=\"searchName\" size = \"5\"\r\n                          onChange={nameSearchHandler}/>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                        <button>조회</button>\r\n                    </div>\r\n                \r\n                   \r\n                    <table id = \"btn\">\r\n                        <tr>\r\n                            <td id = \"btd\"> <button className='loginBtn'  onClick={onhandleClickOpen} >상담등록</button> </td>                    \r\n                            <td id = \"btd2\"> <button>엑셀다운로드</button> </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    {/* 모달창 시작 --> 504에러 */}\r\n                        <Dialog\r\n                            open={storeOpen}\r\n                            onClose={onhandleClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                        >\r\n                            <DialogTitle id=\"alert-dialog-title\"><h1>상담등록</h1></DialogTitle>\r\n                            <DialogContent>\r\n                            <DialogContentText id=\"alert-dialog-description\">\r\n                                 <CounselStatus/>\r\n                            </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                            {/* <Button onClick={onhandleStoreClose} color=\"primary\" autoFocus>\r\n                                저장\r\n                            </Button> */}\r\n                            <Button onClick={onhandleClose} color=\"primary\">\r\n                                닫기\r\n                            </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                     {/* // 모달창 끝        */}\r\n\r\n                    \r\n\r\n                    <table id = \"list\">\r\n                        <tr>\r\n                            <th>No</th>\r\n                            <th>문의 구분</th>\r\n                            <th>문의일자</th>\r\n                            <th>문의방법</th>\r\n                            <th>문의자명</th>\r\n                            <th>연락처</th>\r\n                            <th>접근경로</th>\r\n                        </tr>\r\n\r\n                        \r\n                            {resultTable}\r\n                       \r\n\r\n                    </table>\r\n\r\n                    </form>\r\n                </div>\r\n            </Fragment>\r\n      );\r\n    \r\n  }\r\n  \r\n  export default Counseling;","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Main\\Main.js",[],"C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Counseling\\CounselStatus.js",["135","136"],"import React, { useState,useEffect} from 'react';\r\nimport Main from'../Main/Main.js';\r\nimport Axios from 'axios';\r\nimport { addDays } from 'date-fns';\r\n//datepicker 시작\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport ko from 'date-fns/locale/ko';\r\nimport \"./CounselStatus.css\";\r\nregisterLocale(\"ko\", ko);\r\n\r\n//datepicker끝\r\n\r\nlet RoomTypes = []\r\nlet Methods = []\r\nlet Paths = []\r\n\r\nvar registNums = 0;\r\n\r\nfunction CounselStatus(props) {\r\n\r\n    //Lov(List of Value)를 데이터 베이스에서 가져오기 \r\n        //select\r\n        const[RoomType,setRoomType] = useState(1)\r\n        const[Method, setMethod] = useState(1)\r\n        const[Path, setPath] = useState(1)\r\n\r\n        //문의구분\r\n        useEffect(()=>{\r\n            Axios.post('/api/register/roomType')\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    //console.log('roomType',response.data);\r\n                    let arr = [{value: '전체', text: '전체' }]\r\n\r\n                    response.data.rows.map((data) => \r\n                        arr.push({\r\n                        value: '[' + data.CD_V + ']' + data.CD_V_MEANING, text: data.CD_V,\r\n                    }));\r\n                    \r\n                    RoomTypes = arr;\r\n\r\n                    //console.log('roomTypeArr',arr);\r\n                }else{\r\n                    alert(\"문의구분 데이터를 불러오는데 실패하였습니다.\");\r\n                }\r\n            })\r\n\r\n            \r\n            \r\n        },[])\r\n\r\n        //문의방법\r\n\r\n        useEffect(()=>{\r\n            Axios.post('/api/register/methodA')\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    //console.log('method',response.data);\r\n                    let arr = [{value: '전체', text: '전체' }]\r\n\r\n                    response.data.rows.map((data) => \r\n                        arr.push({\r\n                        value: '[' + data.CD_V + ']' + data.CD_V_MEANING, text: data.CD_V,\r\n                    }));\r\n                    \r\n                    Methods = arr;\r\n\r\n                    //console.log('method',arr);\r\n                }else{\r\n                    alert(\"문의구분 데이터를 불러오는데 실패하였습니다.\");\r\n                }\r\n            })\r\n        },[])\r\n\r\n        //접근경로\r\n\r\n        useEffect(()=>{\r\n            Axios.post('/api/register/pathA')\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    //console.log('Paths',response.data);\r\n                    let arr = [{value: '전체', text: '전체' }]\r\n\r\n                    response.data.rows.map((data) => \r\n                        arr.push({\r\n                        value: '[' + data.CD_V + ']' + data.CD_V_MEANING, text: data.CD_V,\r\n                    }));\r\n                    \r\n                    Paths = arr;\r\n\r\n                    //console.log('Paths',arr);\r\n                }else{\r\n                    alert(\"문의구분 데이터를 불러오는데 실패하였습니다.\");\r\n                }\r\n            })\r\n        },[])\r\n    //Lov끝    \r\n\r\n\r\n    \r\n    //datepicker속성 및 이벤트 시작\r\n    const [StartDate, setStartDate] = useState(new Date());\r\n    //datepicker속성 및 이벤트 끝\r\n    console.log(StartDate.getMonth()+1);\r\n    console.log(StartDate);\r\n    \r\n    const[CounselName, setCounselName] = useState(\"\")\r\n    const[UserPhone, setUserPhone] = useState(\"\")\r\n    const[Content, setContent] = useState(\"\")\r\n\r\n\r\n    const onNameHandler=(event)=>{\r\n        setCounselName(event.currentTarget.value);\r\n    }\r\n\r\n    const MethodHandler=(event)=>{\r\n        setMethod(event.currentTarget.value);\r\n    }\r\n\r\n    const PathHandler=(event)=>{\r\n        setPath(event.currentTarget.value);\r\n    }\r\n\r\n    const onPhoneHandler=(event)=>{\r\n        setUserPhone(event.currentTarget.value);\r\n    }\r\n\r\n    const onContentHandler=(event)=>{\r\n        setContent(event.currentTarget.value);\r\n    }\r\n\r\n    const RoomTypeChangeHandler=(event)=>{\r\n        setRoomType(event.currentTarget.value);\r\n    }\r\n\r\n\r\n    const handleFormSubmit=(event)=> {\r\n        \r\n        event.preventDefault();\r\n        //console.log(RoomType)\r\n    \r\n        // if(RoomType.valueOf('전체') ||!CounselName||Method.valueOf('전체')||Path.valueOf('전체')||!UserPhone||!Content){\r\n        //     return alert(\"값을 입력하세요\")\r\n        // }\r\n\r\n        \r\n        \r\n        //서버에 채운 값들을 request로 보낸다.\r\n        const body = {\r\n            roomtype: RoomType,\r\n            counseldate: StartDate,\r\n            cname: CounselName,\r\n            method: Method,\r\n            path: Path,\r\n            phone: UserPhone,\r\n            content: Content\r\n            \r\n        }\r\n        \r\n        \r\n        Axios.post(\"/api/register\",body)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                alert('정상적으로 등록되었습니다.')\r\n               // props.history.push('/counseling')\r\n            }else{\r\n                alert('등록에 실패하였습니다.')\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={handleFormSubmit}>\r\n          {/* <Main/>\r\n          <h1>상담등록</h1> */}\r\n          <table>\r\n            <tr>\r\n                <th>문의구분</th>\r\n                    <td>\r\n                        <select onChange ={RoomTypeChangeHandler} value ={RoomType}>   \r\n                        \r\n                            {RoomTypes.map(item => ( \r\n                                <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                            ))}\r\n                        \r\n                        </select>\r\n                    </td>\r\n\r\n                <th>문의일자</th>\r\n                    <td>   \r\n                    <DatePicker\r\n                        locale=\"ko\"\r\n                        selected={StartDate}\r\n                        onChange={date => setStartDate(date)}\r\n                        minDate={new Date()}\r\n                        maxDate={addDays(new Date(), 0)}  \r\n                        dateFormat=\"yyyy.MM.dd (eee)\"\r\n                    />\r\n\r\n                    </td>\r\n                <th>문의자명</th>\r\n                    <td>\r\n                    <input type=\"text\" value = {CounselName}id=\"counselName\" name=\"counselName\" size = \"7\"\r\n                    onChange={onNameHandler}/>\r\n                    </td>  \r\n            </tr>\r\n\r\n            <tr>\r\n                <th>문의방법</th>\r\n                    <td>\r\n                        <select value={Method} onChange={MethodHandler} >\r\n                        {Methods.map(item=>(\r\n                                <option key = {item.key} value = {item.key}>{item.value}</option>\r\n                        ))}\r\n                        </select>\r\n                    </td>\r\n                <th>접근경로</th>\r\n                    <td>\r\n                        <select value={Path} onChange={PathHandler} >\r\n                            {Paths.map(item =>(\r\n                                <option key = {item.key} value = {item.key}>{item.value}</option>\r\n                            ))}\r\n                            \r\n                        </select>\r\n                    </td>\r\n\r\n                <th>문의자연락처</th>\r\n                    <td>\r\n                    <input type = \"text\" value = {UserPhone}id = \"userPhone\" name = \"userPhone\" size = \"7\"\r\n                    onChange={onPhoneHandler}/>\r\n                    </td>  \r\n            </tr>\r\n\r\n\r\n            <tr>\r\n                <th>상담내용</th>\r\n                    <td colSpan=\"5\">\r\n                        <textarea rows =\"5\" cols = \"100\" value = {Content}id=\"content\" name = \"content\"\r\n                        onChange={onContentHandler}></textarea>\r\n                    </td>\r\n            </tr>\r\n          </table>\r\n          <div id = \"popbtn\"> \r\n            <button type = \"submit\">저장</button>\r\n            {/* <button>닫기</button> */}\r\n          </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n\r\nexport default CounselStatus;",["137","138"],"C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\LoginPage\\LoginPage.js",["139"],"// import { Component, Fragment } from 'react';\r\n// import {useDispatch} from 'react-redux';\r\n//import {loginUser} from '../_actions/user_action';\r\nimport axios from 'axios';\r\nimport React,{Fragment} from 'react';\r\nimport {useState,useEffect} from 'react';\r\nimport Main from'../Main/Main.js'\r\n\r\n\r\nfunction LoginPage( props){\r\n  // const dispatch = useDispatch();\r\n\r\n  const [E_mal,setE_mal] = useState(\"\")\r\n  const [Password, setPassword] = useState(\"\")\r\n\r\n  const onEmailHandler = (event) => {\r\n    setE_mal(event.currentTarget.value)\r\n  }\r\n\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value)\r\n  }\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    let body = {\r\n        Email: E_mal,\r\n        PASSWORD: Password\r\n    }\r\n\r\n   axios.post('/api/users/login',body)\r\n        .then(response => {\r\n            if (response.data.loginResult) {\r\n                alert('로그인 되었습니다.')\r\n                //props.history.push('/counseling')\r\n                console.log(response.data.loginResult)\r\n            } else {\r\n                alert('아이디와 비밀번호를 확인하세요')\r\n            }\r\n        })\r\n      }\r\n\r\n    return (\r\n      <Fragment>\r\n          <Main/>\r\n          <div style={{display:'flex', justifyContent:'center',alignItems:'center',width:'100%',height:'50vh'}}>\r\n            <form style = {{display:'flex', flexDirection:'column'}}\r\n             onSubmit={onSubmitHandler}\r\n            >\r\n              \r\n                <label style={{fontFamily:'Jua',width:'180px'}}>Email</label>\r\n                <input style={{width:\"300px\"}} type = \"email\" value={E_mal} onChange={onEmailHandler} />\r\n                <label style={{fontFamily:'Jua'}}>Password</label>\r\n                <input style={{width:\"300px\"}} type = \"password\" value={Password} onChange={onPasswordHandler}/>\r\n                <br/>\r\n                <button type=\"submit\">Login</button>\r\n            \r\n            \r\n            </form>\r\n          </div>\r\n         \r\n          </Fragment>\r\n    )\r\n}\r\n\r\nexport default LoginPage","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\NavBar\\NavBar.js",[],"C:\\Users\\team_\\Desktop\\mysqltest\\src\\Routes.js",["140"],"import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Member from './Components/Member/Member';\r\nimport Counseling from './Components/Counseling/Counseling';\r\nimport CounselStatus from './Components/Counseling/CounselStatus';\r\nimport LoginPage from './Components/LoginPage/LoginPage';\r\nimport PaymentStatus from './Components/PaymentStatus/PaymentStatus';\r\nimport Swon from './Components/Staff/Swon';\r\nimport Main from './Components/Main/Main';\r\n\r\nexport default () => (\r\n  <Router>\r\n          {/* 메인 */}\r\n          <Route exact path = \"/\" component = {Main}></Route>\r\n\r\n\r\n          {/* 회원현황 */}\r\n          <Route exact path = \"/member\" component = {Member}></Route> \r\n          {/* 납부현황 */}\r\n          <Route path = \"/paymentStatus\" component = {PaymentStatus}></Route>\r\n          {/* 상담현황 */}\r\n          <Route exact path = \"/counseling\" component = {Counseling}></Route>\r\n          {/* 직원관리 */}\r\n          <Route exact path = \"/swon\" component = {Swon}></Route>\r\n          {/* 로그인/로그아웃*/}\r\n          <Route exact path = \"/login\" component = {LoginPage}></Route>\r\n\r\n\r\n\r\n          {/* 상담등록 */}\r\n          <Route exact path = \"/counselStatus\" component = {CounselStatus}></Route>\r\n  </Router>\r\n)\r\n\r\n","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Member\\Member.js",["141","142","143","144","145","146","147","148","149","150","151","152","153"],"import React, { useState,useEffect} from 'react';\r\nimport Main from'../Main/Main.js';\r\nimport Axios from 'axios';\r\n\r\n//datepicker 시작\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport ko from 'date-fns/locale/ko';\r\nregisterLocale(\"ko\", ko);\r\n//datepicker끝\r\n\r\nlet RoomTypes = []\r\nlet Methods = []\r\nlet Paths = []\r\n\r\nvar registNums = 0;\r\n\r\nfunction Member(props) {\r\n\r\n\r\n    const handleFormSubmit=(event)=> {\r\n        \r\n        event.preventDefault();\r\n      \r\n    }\r\n    const[userName,setUserName] = useState(\"\")\r\n    const[bnum,setBnum] = useState(\"\")\r\n    const[ownerName,setOwnerName] = useState(\"\")\r\n    const[userSort,setUserSort] = useState([])\r\n    const[endStatus,setEndStatus] = useState(\"\")\r\n    const[status,setStatus] = useState(\"\")\r\n    return (\r\n      <form onSubmit={handleFormSubmit}>\r\n          <Main/>\r\n          <h1>회원현황</h1>\r\n          <table >\r\n            <tr>\r\n                <th>회원명</th>\r\n                    <td>\r\n                        <input type = \"text\" value = {userName} id = \"userName\" name = \"userName\" size = \"7\"\r\n                        />\r\n                    </td>  \r\n                    {/* onChange={onPhoneHandler} */}\r\n                <th>사업자번호</th>\r\n                    <td>\r\n                        <input type = \"text\" value = {bnum} id = \"bnum\" name = \"bnum\" size = \"7\"\r\n                        />\r\n                    </td>\r\n                <th>대표자명</th>\r\n                    <td>\r\n                        <input type = \"text\" value = {ownerName} id = \"ownerName\" name = \"ownerName\" size = \"7\"\r\n                        />\r\n                    </td>\r\n                <th>회원구분</th>\r\n                    <td>\r\n                        <select value ={userSort}>   {/*  onChange ={RoomTypeChangeHandler}  */}\r\n                        \r\n                            {/* {RoomTypes.map(item => (  */}\r\n                                <option></option>                          \r\n                            {/* ))} */}\r\n                        \r\n                        </select>\r\n                    </td>\r\n                <th>회원구분</th>\r\n                    <td>\r\n                        <select value ={userSort}>   {/*  onChange ={RoomTypeChangeHandler}  */}\r\n                        \r\n                            {/* {RoomTypes.map(item => (  */}\r\n                                <option></option>                          \r\n                            {/* ))} */}\r\n                        \r\n                        </select>\r\n                    </td>\r\n                <th>종류</th>\r\n                    <td>\r\n                        <select value ={endStatus}>  {/*  onChange ={RoomTypeChangeHandler}  */}\r\n                        \r\n                            {/* {RoomTypes.map(item => (  */}\r\n                                <option></option>                          \r\n                            {/* ))} */}\r\n                        \r\n                        </select>\r\n                    </td>\r\n                <th>상태</th>\r\n                    <td>\r\n                        <select value ={status}>   {/*  onChange ={RoomTypeChangeHandler}  */}\r\n                        \r\n                            {/* {RoomTypes.map(item => (  */}\r\n                                <option></option>                          \r\n                            {/* ))} */}\r\n                        \r\n                        </select>\r\n                    </td>\r\n                    \r\n                    <td>\r\n                    <div > \r\n                        <button type = \"submit\">조회</button>\r\n                \r\n                    </div>\r\n                    </td>\r\n\r\n                \r\n            </tr>\r\n               \r\n            \r\n          </table>\r\n          <table>\r\n            <tr>\r\n                <td>\r\n                    <button>신규회원</button>\r\n                    <button>SNS</button>\r\n                    <button>메일전송</button>\r\n                    <button>엑셀다운로드</button>\r\n                </td>\r\n            </tr>\r\n          </table>\r\n          \r\n          <table>\r\n                <tr>\r\n                    <th>No</th>\r\n                    <th>문의 구분</th>\r\n                    <th>문의일자</th>\r\n                    <th>문의방법</th>\r\n                    <th>문의자명</th>\r\n                    <th>연락처</th>\r\n                    <th>접근경로</th>\r\n                </tr>\r\n          </table>\r\n\r\n      </form>\r\n\r\n      \r\n    );\r\n  }\r\n\r\n\r\nexport default Member;","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\PaymentStatus\\PaymentStatus.js",["154"],"import React,{ Component, Fragment,useState } from 'react';\r\nimport Main from'../Main/Main.js';\r\n\r\n//<!--켈린더 라이브러리시작\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport ko from 'date-fns/locale/ko';\r\n\r\nregisterLocale(\"ko\", ko);\r\n//켈린더 라이브러리 끝-->\r\n\r\n\r\n\r\n\r\nfunction PaymentStatus (props) {\r\n\r\n    \r\n    const[userName, setUserName] = useState(\"\")\r\n    const[paymentStatus, setPaymentStatus]=useState([])\r\n    \r\n    //<!--캘린더 속성 \r\n    const [startDate, setStartDate] = useState(new Date(\"2020/01/01\"));\r\n    const [endDate, setEndDate] = useState(new Date(\"2022/01/01\"));\r\n    //캘린더 속성 끝--> \r\n\r\n\r\n    //<!--onSubmit\r\n      const onSubmitHandler=(event)=>{\r\n        event.preventDefault();\r\n      }\r\n    //onSubmit끝-->\r\n    \r\n    const nameSearchHandler=(event)=>{\r\n        setUserName(event.currentTarget.value);\r\n    }\r\n\r\n    const paymentStatusHandler=(event)=>{\r\n        setPaymentStatus(event.currentTarget.value);\r\n    }\r\n    \r\n    const onPaymenthandler=()=>{\r\n        \r\n    }\r\n\r\n\r\n  \r\n      return (\r\n            <Fragment>\r\n                <Main/>\r\n                <div style={{display:'flex', justifyContent:'center',alignItems:'center',width:'100%'}}>\r\n                    <form style = {{display:'flex', flexDirection:'column'}}\r\n                     onSubmit={onSubmitHandler}\r\n                    >\r\n\r\n                    <h1>고객납부현황</h1>\r\n                    <div id = \"search\">\r\n                        \r\n                    납부예정일   \r\n                    {/* date클릭할 때 고정 */}\r\n                        <DatePicker\r\n                            selected={startDate}\r\n                            onChange={date => setStartDate(date)}\r\n                            selectsStart\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                        /> ~ \r\n                        <DatePicker\r\n                            selected={endDate}\r\n                            onChange={date => setEndDate(date)}\r\n                            selectsEnd\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                            minDate={startDate}\r\n                        />\r\n                    \r\n                        {/* <input type=\"image\" src=\"/examples/images/submit_icon.png\" alt=\"제출버튼\" height=\"30\" width=\"30\"/> */}\r\n                        &nbsp;\r\n                        회원명\r\n                         <input type=\"text\" value = {userName} id=\"userName\" name=\"userName\" size = \"5\"\r\n                          onChange={nameSearchHandler}/>\r\n                        &nbsp; \r\n\r\n                        납부여부\r\n                        <select onChange ={paymentStatusHandler} value ={paymentStatus}>   \r\n{/*                         \r\n                            {paymentState.map(item => ( \r\n                                <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                            ))}\r\n                     */}\r\n                        </select>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                        <button>조회</button>\r\n                    </div>\r\n                \r\n                   \r\n                    <table id = \"btn\">\r\n                        <tr>\r\n                            <td id = \"btd\"> <button className='loginBtn'  onClick={onPaymenthandler}> 납부</button> </td>                    \r\n                            <td id = \"btd2\"> <button>엑셀다운로드</button> </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <table id = \"list\">\r\n                        <tr>\r\n                            <th>선택</th>\r\n                            <th>No</th>\r\n                            <th>회원명</th>\r\n                            <th>납부예정일</th>\r\n                            <th>납부여부</th>\r\n                            <th>납부일자</th>\r\n                            <th>계약기간</th>\r\n                            <th>대표자</th>\r\n                        </tr>\r\n    \r\n                    </table>\r\n\r\n                    </form>\r\n                </div>\r\n            </Fragment>\r\n      );\r\n    \r\n  }\r\n  \r\n  export default PaymentStatus;","C:\\Users\\team_\\Desktop\\mysqltest\\src\\Components\\Staff\\Swon.js",["155"],"import React,{ Component, Fragment,useState } from 'react';\r\nimport Main from'../Main/Main.js';\r\n\r\n//<!--켈린더 라이브러리시작\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport ko from 'date-fns/locale/ko';\r\n\r\nregisterLocale(\"ko\", ko);\r\n//켈린더 라이브러리 끝-->\r\n\r\n\r\n\r\n\r\nfunction Swon (props) {\r\n\r\n    \r\n    const[staffName, setStaffName] = useState(\"\")\r\n    const[staffClass, setStaffClass] = useState([])\r\n    const[closeStatus, setCloseStatus] = useState([])\r\n    \r\n    \r\n    //<!--캘린더 속성 \r\n    const [startDate, setStartDate] = useState(new Date(\"2020/01/01\"));\r\n    const [endDate, setEndDate] = useState(new Date(\"2022/01/01\"));\r\n    //캘린더 속성 끝--> \r\n\r\n\r\n    //<!--onSubmit\r\n      const onSubmitHandler=(event)=>{\r\n        event.preventDefault();\r\n      }\r\n    //onSubmit끝-->\r\n    \r\n    const staffNameHandler=(event)=>{\r\n        setStaffName(event.currentTarget.value);\r\n    }\r\n\r\n    const staffClassHandler=(event)=>{\r\n        setStaffClass(event.currentTarget.value);\r\n    }\r\n    \r\n    const closeStatusHandler=(event)=>{\r\n        setCloseStatus(event.currentTarget.value);\r\n    }\r\n\r\n    const onRegistHandler = (event)=>{\r\n\r\n    }\r\n    const onModifyHandler = (event)=>{\r\n        \r\n    }\r\n    const onApprovalHandler = (event)=>{\r\n        \r\n    }\r\n  \r\n      return (\r\n            <Fragment>\r\n                <Main/>\r\n                <div style={{display:'flex', justifyContent:'center',alignItems:'center',width:'100%'}}>\r\n                    <form style = {{display:'flex', flexDirection:'column'}}\r\n                     onSubmit={onSubmitHandler}\r\n                    >\r\n\r\n                    <h1>직원현황</h1>\r\n                    <div id = \"search\">\r\n\r\n                     성명\r\n                    <input type=\"text\" value = {staffName} id=\"staffName\" name=\"staffName\" size = \"5\"\r\n                    onChange={staffNameHandler}/>\r\n                    &nbsp; \r\n\r\n\r\n                    입사일자   \r\n                    {/* date클릭할 때 고정 */}\r\n                        <DatePicker\r\n                            selected={startDate}\r\n                            onChange={date => setStartDate(date)}\r\n                            selectsStart\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                        /> ~ \r\n                        <DatePicker\r\n                            selected={endDate}\r\n                            onChange={date => setEndDate(date)}\r\n                            selectsEnd\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                            minDate={startDate}\r\n                        />\r\n                    \r\n                        {/* <input type=\"image\" src=\"/examples/images/submit_icon.png\" alt=\"제출버튼\" height=\"30\" width=\"30\"/> */}\r\n                        &nbsp;\r\n                       \r\n                        직원구분\r\n                        <select onChange ={staffClassHandler} value ={staffClass}>  \r\n                    {/*                         \r\n                            {paymentState.map(item => ( \r\n                                <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                            ))}\r\n                     */}\r\n                     \r\n                        </select>\r\n                        종료\r\n                        <select onChange ={closeStatusHandler} value ={closeStatus}>   \r\n                        </select>\r\n                        \r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                        <button>조회</button>\r\n                    </div>\r\n                \r\n                   \r\n                    <table id = \"btn\">\r\n                        <tr>\r\n                            <td id = \"btd\"> <button className='loginBtn'  onClick={onRegistHandler}> 등록</button> </td>\r\n                            <td id = \"btd\"> <button className='loginBtn'  onClick={onModifyHandler}> 수정</button> </td>    \r\n                            <td id = \"btd\"> <button className='loginBtn'  onClick={onApprovalHandler}> 승인</button> </td>                        \r\n                            <td id = \"btd2\"> <button>엑셀다운로드</button> </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <table id = \"list\">\r\n                        <tr>\r\n                            <th>선택</th>\r\n                            <th>직번</th>\r\n                            <th>성명</th>\r\n                            <th>주민번호</th>\r\n                            <th>부서</th>\r\n                            <th>연락처</th>\r\n                            <th>E-mail</th>\r\n                            <th>직원구분</th>\r\n                            <th>승인여부</th>\r\n                            <th>직급</th>\r\n                        </tr>\r\n    \r\n                    </table>\r\n\r\n                    </form>\r\n                </div>\r\n            </Fragment>\r\n      );\r\n    \r\n  }\r\n  \r\n  export default Swon;","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\index.js",[],"C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\reportWebVitals.js",[],["156","157"],"C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\App.js",[],"C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\Routes.js",["158"],"import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport S010100040 from './S010100040';\r\nimport S010100130 from './S010100130';\r\nimport S010100140 from './S010100140';\r\nimport S010100010 from './S010100010';\r\nimport S010100050 from './S010100050';\r\nimport LoginPage from './Components/LoginPage/LoginPage';\r\nimport PaymentStatus from './Components/PaymentStatus/PaymentStatus';\r\nimport Swon from './Components/Staff/Swon';\r\nimport Main from './Components/Main/Main';\r\n\r\nexport default () => (\r\n  <Router>\r\n          {/* 메인 */}\r\n          <Route exact path = \"/\" component = {Main}></Route>\r\n\r\n\r\n          {/* 회원현황 */}\r\n          <Route exact path = \"/S010100040\" component = {S010100040}></Route> \r\n          {/* 납부현황 */}\r\n          <Route exact path = \"/paymentStatus\" component = {PaymentStatus}></Route>\r\n          {/* 상담현황 */}\r\n          <Route exact path = \"/S010100130\" component = {S010100130}></Route>\r\n          {/* 직원관리 */}\r\n          <Route exact path = \"/swon\" component = {Swon}></Route>\r\n          {/* 로그인/로그아웃*/}\r\n          <Route exact path = \"/login\" component = {LoginPage}></Route>\r\n\r\n\r\n\r\n          {/* 상담등록 */}\r\n          <Route exact path = \"/S010100140\" component = {S010100140}></Route>\r\n          {/* 이용계약서  */}\r\n          <Route exact path = \"/S010100010\" component = {S010100010}></Route>\r\n          {/* 회원상세정보 */}\r\n          <Route exact path = \"/S010100050\" component = {S010100050}></Route>\r\n  </Router>\r\n)\r\n\r\n","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\Components\\Member\\Member.js",[],["159","160"],"C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\Components\\Staff\\Swon.js",[],"C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\Components\\Counseling\\CounselStatus.js",["161","162"],["163","164"],"C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\Components\\LoginPage\\LoginPage.js",[],"C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\Components\\PaymentStatus\\PaymentStatus.js",[],"C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\Components\\Main\\Main.js",[],"C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\s010100140.js",["165","166","167","168","169","170","171","172","173","174","175","176"],"C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\S010100140.js",["177","178","179"],"C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\S010100010.js",["180","181"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\n\r\n\r\n//<!--켈린더 라이브러리시작\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport ko from 'date-fns/locale/ko';\r\nregisterLocale(\"ko\", ko);\r\n//켈린더 라이브러리 끝-->\r\n\r\n\r\nlet valueArr = [[],[],[],[],[]];\r\nlet queryArr = [['MEMBER_TP',''],['CONTRACT_TP','ASK'],['L',''],['PAY_METHOD',''],['CONTRACT_PATH','']];\r\n\r\nconst payDates = [{key:1,value:'1일'},\r\n                {key:2,value:'2일'},\r\n                {key:3,value:'3일'},\r\n                {key:4,value:'4일'},\r\n                {key:5,value:'5일'},\r\n                {key:6,value:'6일'},\r\n                {key:7,value:'7일'},\r\n                {key:8,value:'8일'},\r\n                {key:9,value:'9일'},\r\n                {key:10,value:'10일'}]\r\n\r\nvar payMethods =[];\r\n\r\n// const payDates = new Array(31)\r\n\r\n// for(let i = 0; i < payDates.length; i++){\r\n//     payDates[i] = i+1;\r\n// }\r\n\r\n\r\nfunction S010100010(props) {\r\n\r\n    //회원정보\r\n    const [memberNm, setMemberNm] = useState(\"\")\r\n    const [firstRegNo, setFisrtRegNo] = useState(\"\")\r\n    const [secondRegNo, setSecondRegNo] = useState(\"\")\r\n    const [thirdRegNo, setThirdRegNo] = useState(\"\")\r\n    const [memberTp, setMemberTp] = useState([])\r\n    const [empIdName, setEmpIdName] = useState(\"\")\r\n    const [firstEmpHp, setFirstEmpHp] = useState(\"\")\r\n    const [secondEmpHp, setSecondEmpHp] = useState(\"\")\r\n    const [thirdEmpHp, setThirdEmpHp] = useState(\"\")\r\n    const [empEmailId, setEmpEmailId] = useState(\"\")\r\n    const [domainAddress, setDomainAddress] = useState(\"\")\r\n    const [zipcode,setZipcode] = useState(\"\")\r\n    const [empAddress, setEmpAddress] = useState(\"\")\r\n    const [empDetailAddress, setEmpDetailAddress] = useState(\"\")\r\n\r\n\r\n    //계약정보\r\n    const [contractTp, setContractTp] = useState(\"\")\r\n    const [contractTpVal, setContractTpVal] = useState(\"\")\r\n    const [roomLockerTp, setRoomLockerTp] = useState(0)\r\n    const [contractMoney, setContractMoney] = useState(\"\")\r\n    const [contractTerm, setContractTerm] = useState(\"\")\r\n    const [payDate, setPayDate] = useState(1)\r\n    const [comment, setComment] = useState(\"\")\r\n    const [payMethod, setPayMethod] = useState(\"\")\r\n\r\n\r\n//<Lov시작>\r\n    for(let i = 0; i<queryArr.length; i++){\r\n                \r\n        let firstVal = queryArr[i][0];\r\n        let secondVal = queryArr[i][1];\r\n            axios.post('/api/s010100140/selectTest',{firstVal:firstVal,secondVal:secondVal})\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    console.log('ask_tp',response.data.rows);\r\n                    let arr = [{ key: '전체', value: '전체' }]\r\n\r\n                    response.data.rows.map((data) => \r\n                        arr.push({\r\n                        value: data.CD_V_MEANING,\r\n                        key: data.CD_V\r\n                    }));       \r\n                \r\n                    valueArr[i] = arr;\r\n                    //console.log(valueArr[2]);\r\n                }else{\r\n                    alert(\"문의구분 데이터를 불러오는데 실패하였습니다.\");\r\n                }\r\n            })\r\n            \r\n    }\r\n\r\n    useEffect(()=>{\r\n        axios.post('/api/s010100010/accessPath')\r\n        .then(response => {\r\n            if(response.data.success){\r\n                //console.log('Lov-ask_tp',response.data);\r\n                let arr = [{key: '전체', value: '전체' }]\r\n\r\n                response.data.rows.map((data) => \r\n                    arr.push({\r\n                    value:data.CD_V_MEANING, key:data.CD_V\r\n                }));\r\n                \r\n                payMethods=arr;\r\n                \r\n            }else{\r\n                alert(\"문의구분 데이터를 불러오는데 실패하였습니다.\");\r\n            }\r\n        })\r\n    },[])\r\n\r\nvar contractTpVals = [{key:'R2_302',value:'302호'},\r\n                      {key:'R2_409',value:'409호'},\r\n                      {key:'R2_410',value:'410호'},\r\n                      {key:'R2_411',value:'411호'},\r\n                      {key:'R2_412',value:'412호'},\r\n                     ]\r\n//<하이라키->호실\r\n// useEffect(()=>{\r\n//     axios.post('/api/s010100010/contract')\r\n//     .then(response => {\r\n//         if(response.data.success){\r\n//             console.log('ContractTpVal',response.data);\r\n//             let arr = [{key: '전체', value: '전체'}]\r\n\r\n//             response.data.rows.map((data) => \r\n//                 arr.push({\r\n//                 value:data.CD_V_MEANING, key:data.CD_V\r\n//             }));\r\n            \r\n//             contractTpVals=arr;\r\n            \r\n//         }else{\r\n//             alert(\"문의구분 데이터를 불러오는데 실패하였습니다.\");\r\n//         }\r\n//     })\r\n// },[])\r\n//>\r\n\r\n\r\n\r\n    const onContractTpHandler = (event) => {\r\n        setContractTp(event.currentTarget.value);\r\n    }\r\n\r\n    const onContractTpValHandler = (event) => {\r\n        setContractTpVal(event.currentTarget.value);\r\n    }\r\n\r\n    const onRoomLockerTpHandler = (event) => {\r\n        setRoomLockerTp(event.currentTarget.value);\r\n    }\r\n\r\n    const onContractMoneyHandler = (event) => {\r\n        setContractMoney(event.currentTarget.value);\r\n    }\r\n\r\n    const onContractTermHandler = (event) => {\r\n        setContractTerm(event.currentTarget.value);\r\n    }\r\n\r\n    const onPayDateHandler = (event) => {\r\n        setPayDate(event.currentTarget.value);\r\n    }\r\n\r\n    const onCommentHandler = (event) => {\r\n        setComment(event.currentTarget.value);\r\n    }\r\n\r\n    const onPayMethodHandler = (event) => {\r\n        setPayMethod(event.currentTarget.value);\r\n    }\r\n\r\n\r\n    //<!--onSubmit\r\n    const onSubmitHandler=(event)=> {\r\n        event.preventDefault();\r\n        \r\n        if(!empIdName||!firstEmpHp||!secondEmpHp||!thirdEmpHp||\r\n            !empEmailId||!domainAddress){\r\n            \r\n                return alert(\"값을 입력하세요\");\r\n        }\r\n        \r\n        //서버에 채운 값들을 request로 보낸다.\r\n        const body = {\r\n            //회원정보\r\n            memberNm: memberNm,\r\n            firstRegNo: firstRegNo,\r\n            secondRegNo: secondRegNo,\r\n            thirdRegNo: thirdRegNo,\r\n            memberTp: memberTp,\r\n            empIdName: empIdName,\r\n            firstEmpHp: firstEmpHp,\r\n            secondEmpHp: secondEmpHp,\r\n            thirdEmpHp: thirdEmpHp,\r\n            zipcode: zipcode,\r\n            empEmailId: empEmailId,\r\n            domainAddress: domainAddress,\r\n            empAddress: empAddress,\r\n            empDetailAddress: empDetailAddress,\r\n            //계약정보\r\n            contractTp: contractTp,\r\n            contractTpVal: contractTpVal,\r\n            roomLockerTp : roomLockerTp,\r\n            contractMoney : contractMoney,\r\n            contractTerm : contractTerm,\r\n            payDate: payDate,\r\n            payMethod: payMethod\r\n        }\r\n\r\n        axios.post('/api/s010100010/insertMember010',body)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                alert('member가 정상적으로 등록되었습니다.')\r\n            }else{\r\n                alert('등록에 실패하였습니다.')\r\n            }\r\n        })\r\n    }\r\n    //onSubmit끝-->\r\n\r\n\r\n\r\n\r\n    const onMemberNmHandler = (event) => {\r\n        setMemberNm(event.currentTarget.value);\r\n    }\r\n\r\n    const onFirstRegNoHandler = (event) => {\r\n        setFisrtRegNo(event.currentTarget.value);\r\n    }\r\n\r\n    const onSecondRegNoHandler = (event) => {\r\n        setSecondRegNo(event.currentTarget.value);\r\n    }\r\n\r\n    const onThirdRegNoHandler = (event) => {\r\n        setThirdRegNo(event.currentTarget.value);\r\n    }\r\n\r\n    const onMemberTpHandler = (event) => {\r\n        setMemberTp(event.currentTarget.value);\r\n    }\r\n\r\n    const onEmpIdNameHandler = (event) => {\r\n        setEmpIdName(event.currentTarget.value);\r\n    }\r\n\r\n    const onFirstEmpHpHandler = (event) => {\r\n        setFirstEmpHp(event.currentTarget.value);\r\n    }\r\n\r\n    const onSecondEmpHpHandler = (event) => {\r\n        setSecondEmpHp(event.currentTarget.value);\r\n    }\r\n\r\n    const onThirdEmpHpHandler = (event) => {\r\n        setThirdEmpHp(event.currentTarget.value);\r\n    }\r\n\r\n    const onEmpEmailIdHandler = (event) => {\r\n        setEmpEmailId(event.currentTarget.value);\r\n    }\r\n\r\n    const onDomainAddressHandler = (event) => {\r\n        setDomainAddress(event.currentTarget.value);\r\n    }\r\n\r\n    const onZipcodeHandler = (event) => {\r\n        setZipcode(event.currentTarget.value);\r\n    }\r\n\r\n    const onEmpAddressHandler = (event) => {\r\n        setEmpAddress(event.currentTarget.value);\r\n    }\r\n\r\n    const onEmpDetailAddressHandler = (event) => {\r\n        setEmpDetailAddress(event.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%' }}>\r\n                <form style={{ display: 'flex', flexDirection: 'column' }}\r\n                    onSubmit={onSubmitHandler}\r\n                >\r\n\r\n                    <table>\r\n                        {/* 회원정보란 */}\r\n                        <tr>\r\n                            <th rowSpan=\"6\">회원정보</th>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th>회원명</th>\r\n                            <td>\r\n                                <input type=\"text\" value={memberNm} id=\"memberNm\" name=\"memberNm\" size=\"5\"\r\n                                    onChange={onMemberNmHandler} /></td>\r\n\r\n                            <th>사업자 번호</th>\r\n                            <td colSpan=\"2\">\r\n                                <input type=\"text\" value={firstRegNo} id=\"firstRegNo\" name=\"firstRegNo\" size=\"3\"\r\n                                    onChange={onFirstRegNoHandler} />\r\n                         -\r\n                        <input type=\"text\" value={secondRegNo} id=\"secondRegNo\" name=\"secondRegNo\" size=\"3\"\r\n                                    onChange={onSecondRegNoHandler} />\r\n                         -\r\n                        <input type=\"text\" value={thirdRegNo} id=\"thirdRegNo\" name=\"thirdRegNo\" size=\"3\"\r\n                                    onChange={onThirdRegNoHandler} />\r\n\r\n                                <button>중복체크</button>\r\n                            </td>\r\n                            <th>회원구분</th>\r\n                            <td colSpan=\"2\">\r\n                                <select onChange={onMemberTpHandler} value={memberTp}>\r\n\r\n                                    {valueArr[0].map(item => ( \r\n                                                 <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                                             ))}\r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th>대표자<span class=\"star\">(*)</span></th>\r\n                            <td>\r\n                                <input type=\"text\" value={empIdName} id=\"empIdName\" name=\"empIdName\" size=\"5\"\r\n                                    onChange={onEmpIdNameHandler} /></td>\r\n\r\n                            <th>연락처<span class=\"star\">(*)</span></th>\r\n                            <td colSpan=\"2\">\r\n                                <input type=\"text\" value={firstEmpHp} id=\"firstEmpHp\" name=\"firstEmpHp\" size=\"5\"\r\n                                    onChange={onFirstEmpHpHandler} />\r\n                         -\r\n                        <input type=\"text\" value={secondEmpHp} id=\"secondEmpHp\" name=\"secondEmpHp\" size=\"5\"\r\n                                    onChange={onSecondEmpHpHandler} />\r\n                         -\r\n                        <input type=\"text\" value={thirdEmpHp} id=\"thirdEmpHp\" name=\"thirdEmpHp\" size=\"5\"\r\n                                    onChange={onThirdEmpHpHandler} />\r\n                            </td>\r\n\r\n                            <th>E-mail<span class=\"star\">(*)</span></th>\r\n                            <td colSpan=\"2\">\r\n                                <input type=\"text\" value={empEmailId} id=\"empEmailId\" name=\"empEmailId\" size=\"5\"\r\n                                    onChange={onEmpEmailIdHandler} />\r\n                        @\r\n                        <input type=\"text\" value={domainAddress} id=\"domainAddress\" name=\"domainAddress\" size=\"5\"\r\n                                    onChange={onDomainAddressHandler} />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th rowSpan=\"2\">대표자 주소</th>\r\n                            \r\n                            <td colSpan=\"9\">\r\n                                \r\n                            <input type=\"text\" value={zipcode} id=\"zipcode\" name=\"zipcode\" size=\"10\"\r\n                                onChange={onZipcodeHandler} />\r\n\r\n                                \r\n                                 <input type=\"text\" value={empAddress} id=\"empAddress\" name=\"empAddress\" size=\"30\"\r\n                                onChange={onEmpAddressHandler} />\r\n                            </td>\r\n\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"9\"><input type=\"text\" value={empDetailAddress} id=\"empDetailAddress\" name=\"empDetailAddress\" size=\"30\"\r\n                                onChange={onEmpDetailAddressHandler} />\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th>첨부파일</th>\r\n                            <td colSpan=\"4\"><input type=\"text\" /><button>파일 선택</button></td>\r\n                            <td colSpan=\"5\"><input type=\"text\" /><button>파일 선택</button></td>\r\n                        </tr>\r\n\r\n\r\n\r\n\r\n                        {/* 계약정보란 */}\r\n                        <tr>\r\n                            <th rowSpan=\"7\">계약정보</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>계약구분</th>\r\n                            <td>\r\n                                <select onChange={onContractTpHandler} value={contractTp}>\r\n\r\n                                    {valueArr[1].map(item => ( \r\n                                                 <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                                             ))}\r\n                                </select></td>\r\n\r\n                            <th>호실</th>\r\n                            <td>\r\n                                <select onChange={onContractTpValHandler} value={contractTpVal}>\r\n                                        \r\n                                    {contractTpVals.map(item => ( \r\n                                                 <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                                             ))} \r\n                                </select>\r\n                            </td>\r\n\r\n                            <th>사물함</th>\r\n                            <td>\r\n                                <select onChange={onRoomLockerTpHandler} value={roomLockerTp}>\r\n\r\n                                    {valueArr[2].map(item => ( \r\n                                                 <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                                             ))}\r\n                                </select>\r\n                            </td>\r\n\r\n                            <th>월회비</th>\r\n                            <td>\r\n                                <input type=\"text\" value={contractMoney} id=\"contractMoney\" name=\"contractMoney\" size=\"5\"\r\n                                    onChange={onContractMoneyHandler} />\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th>이용기간</th>\r\n                            <td><input type=\"text\" value={contractTerm} id=\"contractTerm\" name=\"contractTerm\" size=\"10\"\r\n                                onChange={onContractTermHandler} />개월\r\n                        </td>\r\n\r\n                            <th>입금일</th>\r\n                            <td>\r\n                                <select onChange={onPayDateHandler} value={payDate}>\r\n\r\n                                     {payDates.map(item => ( \r\n                                                 <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                                             ))} \r\n                                </select>\r\n                            </td>\r\n\r\n                            <th>납부방법</th>\r\n                            <td>\r\n                                <select onChange={onPayMethodHandler} value={payMethod}>\r\n\r\n                                    {valueArr[3].map(item => ( \r\n                                                 <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                                             ))}\r\n                                </select>\r\n                            </td>\r\n                            <th>납부액</th>\r\n                            <td><input type=\"text\" value={contractMoney} id=\"contractMoney\" name=\"contractMoney\" size=\"10\"\r\n                                onChange={onContractMoneyHandler} /></td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th>특약사항</th>\r\n                            <td colSpan=\"9\">\r\n                                계약기간 만료 또는 종료시 사업지 주소지와 전화를 7일이내 이전해야 하고,<br />\r\n                        계약을 해지할 경우 7일이전에 서면 또는 구두 통보해야함.<br />\r\n                                <textarea value={comment} id=\"comment\" name=\"comment\" onChange={onCommentHandler}></textarea>\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th>이용범위</th>\r\n                            <td colSpan=\"9\">\r\n                                사무공간 제공과 부대시설(회의실,접견실,휴게실,IT기기,유무선 통신망)을 이용 가능\r\n                        </td>\r\n                        </tr>\r\n\r\n                        <tr >\r\n                            <th>센터</th>\r\n                            <td>(주)에스원테크</td>\r\n\r\n                            <th colSpan=\"2\">전화번호</th>\r\n                            <td colSpan=\"2\">070-4355-2312</td>\r\n\r\n                            <th>E-mail</th>\r\n                            <td>swonbiz@s-onetech.com</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th>성명</th>\r\n                            <td>이정희</td>\r\n\r\n                            <th colSpan=\"2\">FAX번호</th>\r\n                            <td colSpan=\"2\">070-4015-3344/02-6203-4433</td>\r\n\r\n                            <th>계약접근경로</th>\r\n                            <td>\r\n                                <select onChange={onPayMethodHandler} value={payMethod}>\r\n\r\n                                    {valueArr[4].map(item => ( \r\n                                                 <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                                             ))}\r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n                        <tr>\r\n                            <td colSpan=\"9\">\r\n\r\n                                <tr>\r\n                                    <td colSpan=\"9\">\r\n                                        -에스원비즈 삼성센터(이하 \"갑\")과 상기 회원(이하 \"을\")은 \"갑\"이 제공하는 서비스를 \"을\"이 이용함에 있어서 수반되는 사항을 본\r\n                                        이용계약서 약관대로 체결하고, 본 계약의 성립을 증명하기 위하여 본 이용계약서 2부를 작성하여 기명, 날인하고 각 한 부씩 보관한다.\r\n                                <br />-본 이용계약서로는 임대차계약서를 대신할 수 없음\r\n                                </td>\r\n                                </tr>\r\n                                <tr >\r\n                                    <td colSpan=\"9\">\r\n                                        2020년  월    일\r\n                                </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td rowSpan=\"4\">\r\n                                        갑:\r\n                                </td>\r\n\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td>\r\n                                        서울특별시 강남구 봉은사로 63길 11 명화빌딩 3, 4층(삼성동)\t을 :\r\n                                </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        ㈜ 에스원테크  최현수 (인)\r\n                                </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>                                                 (인)\r\n                                    계좌번호 : 우리은행  1005-002-433395\r\n                                </td>\r\n                                </tr>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <div id=\"btn-center\">\r\n                        <button>임시저장</button>\r\n                        <button type = \"submit\">저장</button>\r\n                        <button>출력</button>\r\n                        <button>임대차 계약서</button>\r\n                        <button>삭제</button>\r\n                        <button>닫기</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default S010100010;","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\S010100040.js",["182","183"],"import React,{ Fragment,useState,useEffect } from 'react';\r\nimport Main from'./Components/Main/Main';\r\nimport S010100010 from './S010100010';\r\nimport S010100050 from './S010100050';\r\nimport axios from \"axios\";\r\n\r\n\r\n//<!--모달창 라이브러리\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n//모달창 라이브러리 끝-->\r\n\r\n//<!--켈린더 라이브러리시작\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport ko from 'date-fns/locale/ko';\r\nregisterLocale(\"ko\", ko);\r\n//켈린더 라이브러리 끝-->ghy\r\n\r\n\r\nlet valueArr = [[]];\r\nlet queryArr = [['MEMBER_TP','']];\r\nlet endStatus = [{key:'전체',value:'전체'},\r\n                 {key:'Y',value:'Y'},\r\n                 {key:'N',value:'N'}]\r\nlet contractsStatus = [{key:'전체',value:'전체'},\r\n                       {key:'C',value:'확정'},\r\n                       {key:'T',value:'가계약'}]\r\n\r\n\r\n\r\nfunction S010100040 (props) {\r\n   \r\n    const[memberNm, setMemberNm] = useState(\"\")\r\n    const[regNo, setRegNo] = useState([])\r\n    const[memberTp, setMemberTp] = useState([])\r\n    const[contractStatus, setContractStatus] = useState([])\r\n    const[memberSt, setMemberSt] = useState(\"\")\r\n    const [name,setName] = useState(\"\")\r\n\r\n\r\n      //<!--모달창 속성 및 이벤트 \r\n      const [open, setOpen] = React.useState(false);\r\n      const [storeOpen, setStoreOpen] = React.useState(false);\r\n    \r\n    \r\n\r\n      //<Lov시작>\r\n    for(let i = 0; i<queryArr.length; i++){\r\n                \r\n        let firstVal = queryArr[i][0];\r\n        let secondVal = queryArr[i][1];\r\n            axios.post('/api/s010100140/selectTest',{firstVal:firstVal,secondVal:secondVal})\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    //console.log('ask_tp',response.data.rows);\r\n                    let arr = [{ key: '전체', value: '전체' }]\r\n\r\n                    response.data.rows.map((data) => \r\n                        arr.push({\r\n                        value: data.CD_V_MEANING,\r\n                        key: data.CD_V\r\n                    }));       \r\n                \r\n                    valueArr[i] = arr;\r\n                    //console.log(valueArr[2]);\r\n                }else{\r\n                    alert(\"문의구분 데이터를 불러오는데 실패하였습니다.\");\r\n                }\r\n            })\r\n            \r\n    }\r\n   \r\n\r\n     //<\r\n    const onHandleClickOpen = () => {\r\n        setStoreOpen(true); \r\n    };  \r\n\r\n    const onHandleClickClose = () =>{\r\n        setStoreOpen(false);\r\n    }\r\n\r\n    \r\n    const memberStHandler=(event)=>{\r\n        setMemberSt(event.currentTarget.value);\r\n    }\r\n    const nameHandler=(event)=>{\r\n        setName(event.currentTarget.value);\r\n    }\r\n\r\n\r\n    //상담등록 모달 끝>\r\n\r\n    //<!--onSubmit\r\n    const onFormSubmitHandler = (event)=>{\r\n        event.preventDefault();\r\n\r\n        const body ={   \r\n                memberNm,\r\n                regNo,\r\n                name,\r\n                memberTp,\r\n                contractStatus\r\n        }\r\n      \r\n\r\n        axios.post('/api/s010100040/searchMember', body)\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    //console.log('tb_member',response.data.rows);\r\n                    setTbMember(response.data.rows);\r\n                }else{ \r\n                    alert(\"검색에 실패하였습니다.\")\r\n                }\r\n\r\n            })\r\n      }\r\n    //onSubmit끝-->\r\n    \r\n    const memberNmHandler=(event)=>{\r\n        setMemberNm(event.currentTarget.value);\r\n    }\r\n\r\n    const regNoHandler=(event)=>{\r\n        setRegNo(event.currentTarget.value);\r\n    }\r\n    \r\n    const memberTpHandler=(event)=>{\r\n        setMemberTp(event.currentTarget.value);\r\n    }\r\n    \r\n    const contractStatusHandler=(event)=>{\r\n        setContractStatus(event.currentTarget.value);\r\n    }\r\n    const onHandleDetailClickOpen = (event)=>{\r\n        setOpen(true);\r\n    }\r\n\r\n    const onHandleDetailClickClose = () => {\r\n           \r\n        // axios.post('/api/s010100130')\r\n        // .then(response => {\r\n        //     if(response.data.success){\r\n        //         //console.log(response.data.rows)\r\n        //         setTb_s10_ask010(response.data.rows)\r\n        //     }else{ \r\n        //         alert(\"상세 정보 가져오기를 실패하였습니다.\")\r\n        //     }\r\n\r\n        // })\r\n        setOpen(false);\r\n    };\r\n\r\n    const onRegistHandler = (event)=>{\r\n\r\n    }\r\n    const onModifyHandler = (event)=>{\r\n        \r\n    }\r\n    const onApprovalHandler = (event)=>{\r\n        \r\n    }\r\n\r\n\r\n    \r\n    //TB_S10_ASK010 테이블 조회\r\n    const[tbMember, setTbMember] = useState([])\r\n\r\n    useEffect(()=>{\r\n        \r\n        axios.post('/api/s010100010')\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    //console.log('tb_member',response.data.rows);\r\n                    setTbMember(response.data.rows);\r\n                }else{ \r\n                    alert(\"데이터 조회를 실패하였습니다.\")\r\n                }\r\n\r\n            })\r\n\r\n    },[])\r\n\r\n\r\n    const s010100040R = tbMember.map((tbMember,index)=>{\r\n        return (\r\n                    <tr>\r\n                            <td name =\"uname\" variant=\"outlined\" color=\"primary\" id={tbMember.ASK_ID}> {tbMember.MEMBER_ID}</td>\r\n                            <td>{tbMember.MEMBER_NM}</td>\r\n                            <td onClick={onHandleDetailClickOpen}><u>{tbMember.REG_NO}</u></td>\r\n                            <td>{tbMember.NAME}</td>\r\n                            <td>{tbMember.EMP_HP}</td>\r\n                            <td>{tbMember.EMP_EMAIL}</td>\r\n                            <td>{tbMember.MEMBER_TP}</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                    </tr>\r\n                )});\r\n\r\n\r\n  \r\n      return (\r\n\r\n            <Fragment>\r\n                <Main/>\r\n                <div style={{display:'flex', justifyContent:'center',alignItems:'center',width:'100%'}}>\r\n                    <form style = {{display:'flex', flexDirection:'column'}}\r\n                     onSubmit={onFormSubmitHandler}\r\n                    >\r\n\r\n                    <h1>회원현황</h1>\r\n                    <div id = \"search\">\r\n\r\n                    회원명\r\n                    <input type=\"text\" value = {memberNm} id=\"memberNm\" name=\"memberNm\" size = \"5\"\r\n                    onChange={memberNmHandler}/>\r\n                    &nbsp; \r\n\r\n\r\n                    사업자번호   \r\n                    <input type=\"text\" value = {regNo} id=\"regNo\" name=\"regNo\" size = \"5\"\r\n                    onChange={regNoHandler}/>\r\n                    &nbsp; \r\n                     \r\n                       \r\n                    대표자명\r\n                    <input type=\"text\" value = {name} id=\"name\" name=\"name\" size = \"5\"\r\n                    onChange={nameHandler}/>\r\n                    &nbsp; \r\n\r\n                        회원구분\r\n                        <select onChange ={memberTpHandler} value ={memberTp}>  \r\n                                            \r\n                            {valueArr[0].map(item => ( \r\n                                <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                            ))}\r\n                        </select>\r\n                        종료\r\n                        <select onChange ={contractStatusHandler} value ={contractStatus}>   \r\n                        {endStatus.map(item => ( \r\n                                <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                            ))}\r\n                        </select>\r\n                        \r\n                        &nbsp;\r\n                        상태 \r\n                        <select onChange ={memberStHandler} value ={memberSt}>  \r\n                                             \r\n                            {contractsStatus.map(item => ( \r\n                                <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                            ))}\r\n                        </select>\r\n                   \r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        \r\n                        <button type = \"submit\"> 조회</button>\r\n                    </div>\r\n                    <Dialog\r\n                            maxWidth = {\"lg\"}\r\n                            //fullWidth = {true}\r\n                            open={open}\r\n\t\t                    onClose={onHandleDetailClickClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                        >\r\n                            <DialogContent>\r\n                            <DialogTitle id=\"alert-dialog-title\"><h1>회원상세정보</h1></DialogTitle>\r\n                            <DialogContentText id=\"alert-dialog-description\">\r\n                                <S010100050/>\r\n                            </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                            {/* <Button onClick={onhandleStoreClose} color=\"primary\" autoFocus>\r\n                                저장\r\n                            </Button> */}\r\n                            <input type = \"button\" onClick={onHandleDetailClickClose} color=\"primary\" value = '닫기'/>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                  \r\n\r\n\r\n                    <table id = \"btn\">\r\n                        <tr>\r\n                            <td id = \"btd\"> <button className='loginBtn'  onClick={onHandleClickOpen}>신규회원</button> </td>\r\n                             {/* 모달창 시작*/}\r\n                        <Dialog\r\n                            maxWidth = {\"1200sm\"}\r\n                            \r\n                            //fullWidth = {true}\r\n                            open={storeOpen}\r\n                            onClose={onHandleClickClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                        >\r\n                            <DialogTitle id=\"alert-dialog-title\"><h1>이용계약서</h1></DialogTitle>\r\n                            <DialogContent>\r\n                            <DialogContentText id=\"alert-dialog-description\">\r\n                            <S010100010/> \r\n                            </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                            {/* <Button onClick={onhandleStoreClose} color=\"primary\" autoFocus>\r\n                                저장\r\n                            </Button> */}\r\n                            <Button onClick={onHandleClickClose} color=\"primary\">\r\n                                닫기\r\n                            </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                        {/* // 모달창 끝 */}\r\n\r\n                        \r\n                      \r\n       \r\n                            <td id = \"btd\"> <button className='loginBtn'  onClick={onModifyHandler}>SNS</button> </td>    \r\n                            <td id = \"btd\"> <button className='loginBtn'  onClick={onApprovalHandler}>메일전송</button> </td>                        \r\n                            <td id = \"btd2\"> <button>엑셀다운로드</button> </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <table id = \"list\">\r\n                        <tr>\r\n                            <th rowSpan=\"2\">No</th>\r\n                            <th rowSpan=\"2\">회원명</th>\r\n                            <th rowSpan=\"2\">사업자번호</th>\r\n                            <th colSpan=\"3\">대표자</th>\r\n                            <th rowSpan=\"2\">회원구분</th>\r\n                            <th rowSpan=\"2\">상태</th>\r\n                            <th rowSpan=\"2\">종료여부</th>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th>성명</th>\r\n                            <th>연락처</th>\r\n                            <th>E-mail</th>\r\n                        </tr>\r\n                            {s010100040R}\r\n                    </table>\r\n\r\n                    </form>\r\n                </div>\r\n            </Fragment>\r\n      );\r\n    \r\n  }\r\n  \r\n  export default S010100040;","C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\S010100130.js",["184","185","186","187","188"],"C:\\Users\\team_\\Desktop\\mysqltest - 복사본\\src\\S010100050.js",["189","190"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\n\r\n\r\n//<!--켈린더 라이브러리시작\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport ko from 'date-fns/locale/ko';\r\nregisterLocale(\"ko\", ko);\r\n//켈린더 라이브러리 끝-->\r\n\r\n\r\nlet valueArr = [[],[],[],[],[]];\r\nlet queryArr = [['MEMBER_TP',''],['CONTRACT_TP','ASK'],['L',''],['PAY_METHOD',''],['CONTRACT_PATH','']];\r\n\r\nconst payDates = [{key:1,value:'1일'},\r\n                {key:2,value:'2일'},\r\n                {key:3,value:'3일'},\r\n                {key:4,value:'4일'},\r\n                {key:5,value:'5일'},\r\n                {key:6,value:'6일'},\r\n                {key:7,value:'7일'},\r\n                {key:8,value:'8일'},\r\n                {key:9,value:'9일'},\r\n                {key:10,value:'10일'}]\r\n\r\nvar payMethods =[];\r\n\r\n// const payDates = new Array(31)\r\n\r\n// for(let i = 0; i < payDates.length; i++){\r\n//     payDates[i] = i+1;\r\n// }\r\n\r\n\r\nfunction S010100050(props) {\r\n\r\n    //회원정보\r\n    const [memberNm, setMemberNm] = useState(\"\")\r\n    const [firstRegNo, setFisrtRegNo] = useState(\"\")\r\n    const [secondRegNo, setSecondRegNo] = useState(\"\")\r\n    const [thirdRegNo, setThirdRegNo] = useState(\"\")\r\n    const [memberTp, setMemberTp] = useState([])\r\n    const [empIdName, setEmpIdName] = useState(\"\")\r\n    const [firstEmpHp, setFirstEmpHp] = useState(\"\")\r\n    const [secondEmpHp, setSecondEmpHp] = useState(\"\")\r\n    const [thirdEmpHp, setThirdEmpHp] = useState(\"\")\r\n    const [empEmailId, setEmpEmailId] = useState(\"\")\r\n    const [domainAddress, setDomainAddress] = useState(\"\")\r\n    const [zipcode,setZipcode] = useState(\"\")\r\n    const [empAddress, setEmpAddress] = useState(\"\")\r\n    const [empDetailAddress, setEmpDetailAddress] = useState(\"\")\r\n\r\n\r\n    //계약정보\r\n    const [contractTp, setContractTp] = useState(\"\")\r\n    const [contractTpVal, setContractTpVal] = useState(\"\")\r\n    const [roomLockerTp, setRoomLockerTp] = useState(0)\r\n    const [contractMoney, setContractMoney] = useState(\"\")\r\n    const [contractTerm, setContractTerm] = useState(\"\")\r\n    const [payDate, setPayDate] = useState(1)\r\n    const [comment, setComment] = useState(\"\")\r\n    const [payMethod, setPayMethod] = useState(\"\")\r\n\r\n\r\n//<Lov시작>\r\n    for(let i = 0; i<queryArr.length; i++){\r\n                \r\n        let firstVal = queryArr[i][0];\r\n        let secondVal = queryArr[i][1];\r\n            axios.post('/api/s010100140/selectTest',{firstVal:firstVal,secondVal:secondVal})\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    console.log('ask_tp',response.data.rows);\r\n                    let arr = [{ key: '전체', value: '전체' }]\r\n\r\n                    response.data.rows.map((data) => \r\n                        arr.push({\r\n                        value: data.CD_V_MEANING,\r\n                        key: data.CD_V\r\n                    }));       \r\n                \r\n                    valueArr[i] = arr;\r\n                    //console.log(valueArr[2]);\r\n                }else{\r\n                    alert(\"문의구분 데이터를 불러오는데 실패하였습니다.\");\r\n                }\r\n            })\r\n            \r\n    }\r\n\r\n    useEffect(()=>{\r\n        axios.post('/api/s010100010/accessPath')\r\n        .then(response => {\r\n            if(response.data.success){\r\n                //console.log('Lov-ask_tp',response.data);\r\n                let arr = [{key: '전체', value: '전체' }]\r\n\r\n                response.data.rows.map((data) => \r\n                    arr.push({\r\n                    value:data.CD_V_MEANING, key:data.CD_V\r\n                }));\r\n                \r\n                payMethods=arr;\r\n                \r\n            }else{\r\n                alert(\"문의구분 데이터를 불러오는데 실패하였습니다.\");\r\n            }\r\n        })\r\n    },[])\r\n\r\nvar contractTpVals = [{key:'R2_302',value:'302호'},\r\n                      {key:'R2_409',value:'409호'},\r\n                      {key:'R2_410',value:'410호'},\r\n                      {key:'R2_411',value:'411호'},\r\n                      {key:'R2_412',value:'412호'},\r\n                     ]\r\n//<하이라키->호실\r\n// useEffect(()=>{\r\n//     axios.post('/api/s010100010/contract')\r\n//     .then(response => {\r\n//         if(response.data.success){\r\n//             console.log('ContractTpVal',response.data);\r\n//             let arr = [{key: '전체', value: '전체'}]\r\n\r\n//             response.data.rows.map((data) => \r\n//                 arr.push({\r\n//                 value:data.CD_V_MEANING, key:data.CD_V\r\n//             }));\r\n            \r\n//             contractTpVals=arr;\r\n            \r\n//         }else{\r\n//             alert(\"문의구분 데이터를 불러오는데 실패하였습니다.\");\r\n//         }\r\n//     })\r\n// },[])\r\n//>\r\n\r\n\r\n\r\n    const onContractTpHandler = (event) => {\r\n        setContractTp(event.currentTarget.value);\r\n    }\r\n\r\n    const onContractTpValHandler = (event) => {\r\n        setContractTpVal(event.currentTarget.value);\r\n    }\r\n\r\n    const onRoomLockerTpHandler = (event) => {\r\n        setRoomLockerTp(event.currentTarget.value);\r\n    }\r\n\r\n    const onContractMoneyHandler = (event) => {\r\n        setContractMoney(event.currentTarget.value);\r\n    }\r\n\r\n    const onContractTermHandler = (event) => {\r\n        setContractTerm(event.currentTarget.value);\r\n    }\r\n\r\n    const onPayDateHandler = (event) => {\r\n        setPayDate(event.currentTarget.value);\r\n    }\r\n\r\n    const onCommentHandler = (event) => {\r\n        setComment(event.currentTarget.value);\r\n    }\r\n\r\n    const onPayMethodHandler = (event) => {\r\n        setPayMethod(event.currentTarget.value);\r\n    }\r\n\r\n\r\n    //<!--onSubmit\r\n    const onSubmitHandler=(event)=> {\r\n        event.preventDefault();\r\n        \r\n        if(!empIdName||!firstEmpHp||!secondEmpHp||!thirdEmpHp||\r\n            !empEmailId||!domainAddress){\r\n            \r\n                return alert(\"값을 입력하세요\");\r\n        }\r\n        \r\n        //서버에 채운 값들을 request로 보낸다.\r\n        const body = {\r\n            //회원정보\r\n            memberNm: memberNm,\r\n            firstRegNo: firstRegNo,\r\n            secondRegNo: secondRegNo,\r\n            thirdRegNo: thirdRegNo,\r\n            memberTp: memberTp,\r\n            empIdName: empIdName,\r\n            firstEmpHp: firstEmpHp,\r\n            secondEmpHp: secondEmpHp,\r\n            thirdEmpHp: thirdEmpHp,\r\n            zipcode: zipcode,\r\n            empEmailId: empEmailId,\r\n            domainAddress: domainAddress,\r\n            empAddress: empAddress,\r\n            empDetailAddress: empDetailAddress,\r\n            //계약정보\r\n            contractTp: contractTp,\r\n            contractTpVal: contractTpVal,\r\n            roomLockerTp : roomLockerTp,\r\n            contractMoney : contractMoney,\r\n            contractTerm : contractTerm,\r\n            payDate: payDate,\r\n            payMethod: payMethod\r\n        }\r\n\r\n        axios.post('/api/s010100010/insertMember010',body)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                alert('member가 정상적으로 등록되었습니다.')\r\n            }else{\r\n                alert('등록에 실패하였습니다.')\r\n            }\r\n        })\r\n    }\r\n    //onSubmit끝-->\r\n\r\n\r\n\r\n\r\n    const onMemberNmHandler = (event) => {\r\n        setMemberNm(event.currentTarget.value);\r\n    }\r\n\r\n    const onFirstRegNoHandler = (event) => {\r\n        setFisrtRegNo(event.currentTarget.value);\r\n    }\r\n\r\n    const onSecondRegNoHandler = (event) => {\r\n        setSecondRegNo(event.currentTarget.value);\r\n    }\r\n\r\n    const onThirdRegNoHandler = (event) => {\r\n        setThirdRegNo(event.currentTarget.value);\r\n    }\r\n\r\n    const onMemberTpHandler = (event) => {\r\n        setMemberTp(event.currentTarget.value);\r\n    }\r\n\r\n    const onEmpIdNameHandler = (event) => {\r\n        setEmpIdName(event.currentTarget.value);\r\n    }\r\n\r\n    const onFirstEmpHpHandler = (event) => {\r\n        setFirstEmpHp(event.currentTarget.value);\r\n    }\r\n\r\n    const onSecondEmpHpHandler = (event) => {\r\n        setSecondEmpHp(event.currentTarget.value);\r\n    }\r\n\r\n    const onThirdEmpHpHandler = (event) => {\r\n        setThirdEmpHp(event.currentTarget.value);\r\n    }\r\n\r\n    const onEmpEmailIdHandler = (event) => {\r\n        setEmpEmailId(event.currentTarget.value);\r\n    }\r\n\r\n    const onDomainAddressHandler = (event) => {\r\n        setDomainAddress(event.currentTarget.value);\r\n    }\r\n\r\n    const onZipcodeHandler = (event) => {\r\n        setZipcode(event.currentTarget.value);\r\n    }\r\n\r\n    const onEmpAddressHandler = (event) => {\r\n        setEmpAddress(event.currentTarget.value);\r\n    }\r\n\r\n    const onEmpDetailAddressHandler = (event) => {\r\n        setEmpDetailAddress(event.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%' }}>\r\n                <form style={{ display: 'flex', flexDirection: 'column' }}\r\n                    onSubmit={onSubmitHandler}\r\n                >\r\n\r\n                    <table>\r\n                        {/* 회원정보란 */}\r\n                        <tr>\r\n                            <th rowSpan=\"6\">회원정보</th>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th>회원명</th>\r\n                            <td>\r\n                                <input type=\"text\" value={memberNm} id=\"memberNm\" name=\"memberNm\" size=\"5\"\r\n                                    onChange={onMemberNmHandler} /></td>\r\n\r\n                            <th>사업자 번호</th>\r\n                            <td colSpan=\"2\">\r\n                                <input type=\"text\" value={firstRegNo} id=\"firstRegNo\" name=\"firstRegNo\" size=\"3\"\r\n                                    onChange={onFirstRegNoHandler} />\r\n                         -\r\n                        <input type=\"text\" value={secondRegNo} id=\"secondRegNo\" name=\"secondRegNo\" size=\"3\"\r\n                                    onChange={onSecondRegNoHandler} />\r\n                         -\r\n                        <input type=\"text\" value={thirdRegNo} id=\"thirdRegNo\" name=\"thirdRegNo\" size=\"3\"\r\n                                    onChange={onThirdRegNoHandler} />\r\n\r\n                                <button>중복체크</button>\r\n                            </td>\r\n                            <th>회원구분</th>\r\n                            <td colSpan=\"2\">\r\n                                <select onChange={onMemberTpHandler} value={memberTp}>\r\n\r\n                                    {valueArr[0].map(item => ( \r\n                                                 <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                                             ))}\r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th>대표자<span class=\"star\">(*)</span></th>\r\n                            <td>\r\n                                <input type=\"text\" value={empIdName} id=\"empIdName\" name=\"empIdName\" size=\"5\"\r\n                                    onChange={onEmpIdNameHandler} /></td>\r\n\r\n                            <th>연락처<span class=\"star\">(*)</span></th>\r\n                            <td colSpan=\"2\">\r\n                                <input type=\"text\" value={firstEmpHp} id=\"firstEmpHp\" name=\"firstEmpHp\" size=\"5\"\r\n                                    onChange={onFirstEmpHpHandler} />\r\n                         -\r\n                        <input type=\"text\" value={secondEmpHp} id=\"secondEmpHp\" name=\"secondEmpHp\" size=\"5\"\r\n                                    onChange={onSecondEmpHpHandler} />\r\n                         -\r\n                        <input type=\"text\" value={thirdEmpHp} id=\"thirdEmpHp\" name=\"thirdEmpHp\" size=\"5\"\r\n                                    onChange={onThirdEmpHpHandler} />\r\n                            </td>\r\n\r\n                            <th>E-mail<span class=\"star\">(*)</span></th>\r\n                            <td colSpan=\"2\">\r\n                                <input type=\"text\" value={empEmailId} id=\"empEmailId\" name=\"empEmailId\" size=\"5\"\r\n                                    onChange={onEmpEmailIdHandler} />\r\n                        @\r\n                        <input type=\"text\" value={domainAddress} id=\"domainAddress\" name=\"domainAddress\" size=\"5\"\r\n                                    onChange={onDomainAddressHandler} />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th rowSpan=\"2\">대표자 주소</th>\r\n                            \r\n                            <td colSpan=\"9\">\r\n                                \r\n                            <input type=\"text\" value={zipcode} id=\"zipcode\" name=\"zipcode\" size=\"10\"\r\n                                onChange={onZipcodeHandler} />\r\n\r\n                                \r\n                                 <input type=\"text\" value={empAddress} id=\"empAddress\" name=\"empAddress\" size=\"30\"\r\n                                onChange={onEmpAddressHandler} />\r\n                            </td>\r\n\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"9\"><input type=\"text\" value={empDetailAddress} id=\"empDetailAddress\" name=\"empDetailAddress\" size=\"30\"\r\n                                onChange={onEmpDetailAddressHandler} />\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th>첨부파일</th>\r\n                            <td colSpan=\"4\"><input type=\"text\" /><button>파일 선택</button></td>\r\n                            <td colSpan=\"5\"><input type=\"text\" /><button>파일 선택</button></td>\r\n                        </tr>\r\n\r\n\r\n                        {/* 계약정보란 */}\r\n                        <tr>\r\n                            <th rowSpan=\"7\">계약정보</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>계약구분</th>\r\n                            <td>\r\n                                <select onChange={onContractTpHandler} value={contractTp}>\r\n\r\n                                    {valueArr[1].map(item => ( \r\n                                                 <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                                             ))}\r\n                                </select></td>\r\n\r\n                            <th>호실</th>\r\n                            <td>\r\n                                <select onChange={onContractTpValHandler} value={contractTpVal}>\r\n                                        \r\n                                    {contractTpVals.map(item => ( \r\n                                                 <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                                             ))} \r\n                                </select>\r\n                            </td>\r\n\r\n                            <th>사물함</th>\r\n                            <td>\r\n                                <select onChange={onRoomLockerTpHandler} value={roomLockerTp}>\r\n\r\n                                    {valueArr[2].map(item => ( \r\n                                                 <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                                             ))}\r\n                                </select>\r\n                            </td>\r\n\r\n                            <th>월회비</th>\r\n                            <td>\r\n                                <input type=\"text\" value={contractMoney} id=\"contractMoney\" name=\"contractMoney\" size=\"5\"\r\n                                    onChange={onContractMoneyHandler} />\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th>이용기간</th>\r\n                            <td><input type=\"text\" value={contractTerm} id=\"contractTerm\" name=\"contractTerm\" size=\"10\"\r\n                                onChange={onContractTermHandler} />개월\r\n                        </td>\r\n\r\n                            <th>입금일</th>\r\n                            <td>\r\n                                <select onChange={onPayDateHandler} value={payDate}>\r\n\r\n                                     {payDates.map(item => ( \r\n                                                 <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                                             ))} \r\n                                </select>\r\n                            </td>\r\n\r\n                            <th>납부방법</th>\r\n                            <td>\r\n                                <select onChange={onPayMethodHandler} value={payMethod}>\r\n\r\n                                    {valueArr[3].map(item => ( \r\n                                                 <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                                             ))}\r\n                                </select>\r\n                            </td>\r\n                            <th>납부액</th>\r\n                            <td><input type=\"text\" value={contractMoney} id=\"contractMoney\" name=\"contractMoney\" size=\"10\"\r\n                                onChange={onContractMoneyHandler} /></td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th>특약사항</th>\r\n                            <td colSpan=\"9\">\r\n                                계약기간 만료 또는 종료시 사업지 주소지와 전화를 7일이내 이전해야 하고,<br />\r\n                        계약을 해지할 경우 7일이전에 서면 또는 구두 통보해야함.<br />\r\n                                <textarea value={comment} id=\"comment\" name=\"comment\" onChange={onCommentHandler}></textarea>\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th>이용범위</th>\r\n                            <td colSpan=\"9\">\r\n                                사무공간 제공과 부대시설(회의실,접견실,휴게실,IT기기,유무선 통신망)을 이용 가능\r\n                        </td>\r\n                        </tr>\r\n\r\n                        <tr >\r\n                            <th>센터</th>\r\n                            <td>(주)에스원테크</td>\r\n\r\n                            <th colSpan=\"2\">전화번호</th>\r\n                            <td colSpan=\"2\">070-4355-2312</td>\r\n\r\n                            <th>E-mail</th>\r\n                            <td>swonbiz@s-onetech.com</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th>성명</th>\r\n                            <td>이정희</td>\r\n\r\n                            <th colSpan=\"2\">FAX번호</th>\r\n                            <td colSpan=\"2\">070-4015-3344/02-6203-4433</td>\r\n\r\n                            <th>계약접근경로</th>\r\n                            <td>\r\n                                <select onChange={onPayMethodHandler} value={payMethod}>\r\n\r\n                                    {valueArr[4].map(item => ( \r\n                                                 <option key ={item.key} value ={item.key}>{item.value}</option>                          \r\n                                             ))}\r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n                        <tr>\r\n                            <td colSpan=\"9\">\r\n\r\n                                <tr>\r\n                                    <td colSpan=\"9\">\r\n                                        -에스원비즈 삼성센터(이하 \"갑\")과 상기 회원(이하 \"을\")은 \"갑\"이 제공하는 서비스를 \"을\"이 이용함에 있어서 수반되는 사항을 본\r\n                                        이용계약서 약관대로 체결하고, 본 계약의 성립을 증명하기 위하여 본 이용계약서 2부를 작성하여 기명, 날인하고 각 한 부씩 보관한다.\r\n                                <br />-본 이용계약서로는 임대차계약서를 대신할 수 없음\r\n                                </td>\r\n                                </tr>\r\n                                <tr >\r\n                                    <td colSpan=\"9\">\r\n                                        2020년  월    일\r\n                                </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td rowSpan=\"4\">\r\n                                        갑:\r\n                                </td>\r\n\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td>\r\n                                        서울특별시 강남구 봉은사로 63길 11 명화빌딩 3, 4층(삼성동)\t을 :\r\n                                </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        ㈜ 에스원테크  최현수 (인)\r\n                                </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>                                                 (인)\r\n                                    계좌번호 : 우리은행  1005-002-433395\r\n                                </td>\r\n                                </tr>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <div id=\"btn-center\">\r\n                        <button>임시저장</button>\r\n                        <button type = \"submit\">저장</button>\r\n                        <button>출력</button>\r\n                        <button>임대차 계약서</button>\r\n                        <button>삭제</button>\r\n                        <button>닫기</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default S010100050;",{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":1,"column":16,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"199","line":6,"column":10,"nodeType":"197","messageId":"198","endLine":6,"endColumn":14},{"ruleId":"195","severity":1,"message":"200","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":12},{"ruleId":"195","severity":1,"message":"201","line":17,"column":5,"nodeType":"197","messageId":"198","endLine":17,"endColumn":15},{"ruleId":"191","replacedBy":"202"},{"ruleId":"193","replacedBy":"203"},{"ruleId":"195","severity":1,"message":"204","line":6,"column":18,"nodeType":"197","messageId":"198","endLine":6,"endColumn":27},{"ruleId":"205","severity":1,"message":"206","line":11,"column":1,"nodeType":"207","endLine":33,"endColumn":2},{"ruleId":"195","severity":1,"message":"204","line":1,"column":26,"nodeType":"197","messageId":"198","endLine":1,"endColumn":35},{"ruleId":"195","severity":1,"message":"208","line":3,"column":8,"nodeType":"197","messageId":"198","endLine":3,"endColumn":13},{"ruleId":"195","severity":1,"message":"209","line":6,"column":8,"nodeType":"197","messageId":"198","endLine":6,"endColumn":18},{"ruleId":"195","severity":1,"message":"210","line":11,"column":5,"nodeType":"197","messageId":"198","endLine":11,"endColumn":14},{"ruleId":"195","severity":1,"message":"211","line":12,"column":5,"nodeType":"197","messageId":"198","endLine":12,"endColumn":12},{"ruleId":"195","severity":1,"message":"212","line":13,"column":5,"nodeType":"197","messageId":"198","endLine":13,"endColumn":10},{"ruleId":"195","severity":1,"message":"201","line":15,"column":5,"nodeType":"197","messageId":"198","endLine":15,"endColumn":15},{"ruleId":"195","severity":1,"message":"213","line":25,"column":20,"nodeType":"197","messageId":"198","endLine":25,"endColumn":31},{"ruleId":"195","severity":1,"message":"214","line":26,"column":16,"nodeType":"197","messageId":"198","endLine":26,"endColumn":23},{"ruleId":"195","severity":1,"message":"215","line":27,"column":21,"nodeType":"197","messageId":"198","endLine":27,"endColumn":33},{"ruleId":"195","severity":1,"message":"216","line":28,"column":20,"nodeType":"197","messageId":"198","endLine":28,"endColumn":31},{"ruleId":"195","severity":1,"message":"217","line":29,"column":21,"nodeType":"197","messageId":"198","endLine":29,"endColumn":33},{"ruleId":"195","severity":1,"message":"218","line":30,"column":18,"nodeType":"197","messageId":"198","endLine":30,"endColumn":27},{"ruleId":"195","severity":1,"message":"196","line":1,"column":16,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"196","line":1,"column":16,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"191","replacedBy":"219"},{"ruleId":"193","replacedBy":"220"},{"ruleId":"205","severity":1,"message":"206","line":13,"column":1,"nodeType":"207","endLine":39,"endColumn":2},{"ruleId":"191","replacedBy":"221"},{"ruleId":"193","replacedBy":"222"},{"ruleId":"195","severity":1,"message":"200","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":12},{"ruleId":"195","severity":1,"message":"201","line":17,"column":5,"nodeType":"197","messageId":"198","endLine":17,"endColumn":15},{"ruleId":"191","replacedBy":"223"},{"ruleId":"193","replacedBy":"224"},{"ruleId":"195","severity":1,"message":"200","line":3,"column":8,"nodeType":"197","messageId":"198","endLine":3,"endColumn":12},{"ruleId":"195","severity":1,"message":"201","line":18,"column":5,"nodeType":"197","messageId":"198","endLine":18,"endColumn":15},{"ruleId":"225","severity":2,"message":"226","line":24,"column":39,"nodeType":"197","endLine":24,"endColumn":47},{"ruleId":"225","severity":2,"message":"226","line":25,"column":36,"nodeType":"197","endLine":25,"endColumn":44},{"ruleId":"225","severity":2,"message":"226","line":26,"column":32,"nodeType":"197","endLine":26,"endColumn":40},{"ruleId":"225","severity":2,"message":"227","line":29,"column":9,"nodeType":"197","endLine":29,"endColumn":18},{"ruleId":"225","severity":2,"message":"227","line":55,"column":9,"nodeType":"197","endLine":55,"endColumn":18},{"ruleId":"225","severity":2,"message":"227","line":78,"column":9,"nodeType":"197","endLine":78,"endColumn":18},{"ruleId":"225","severity":2,"message":"226","line":103,"column":39,"nodeType":"197","endLine":103,"endColumn":47},{"ruleId":"225","severity":2,"message":"226","line":108,"column":42,"nodeType":"197","endLine":108,"endColumn":50},{"ruleId":"225","severity":2,"message":"226","line":109,"column":38,"nodeType":"197","endLine":109,"endColumn":46},{"ruleId":"225","severity":2,"message":"226","line":110,"column":34,"nodeType":"197","endLine":110,"endColumn":42},{"ruleId":"195","severity":1,"message":"228","line":3,"column":17,"nodeType":"197","messageId":"198","endLine":3,"endColumn":25},{"ruleId":"195","severity":1,"message":"229","line":33,"column":31,"nodeType":"197","messageId":"198","endLine":33,"endColumn":38},{"ruleId":"230","severity":1,"message":"231","line":53,"column":15,"nodeType":"232","endLine":53,"endColumn":17,"suggestions":"233"},{"ruleId":"195","severity":1,"message":"209","line":6,"column":8,"nodeType":"197","messageId":"198","endLine":6,"endColumn":18},{"ruleId":"195","severity":1,"message":"234","line":103,"column":17,"nodeType":"197","messageId":"198","endLine":103,"endColumn":27},{"ruleId":"195","severity":1,"message":"209","line":18,"column":8,"nodeType":"197","messageId":"198","endLine":18,"endColumn":18},{"ruleId":"195","severity":1,"message":"235","line":158,"column":11,"nodeType":"197","messageId":"198","endLine":158,"endColumn":26},{"ruleId":"195","severity":1,"message":"236","line":12,"column":8,"nodeType":"197","messageId":"198","endLine":12,"endColumn":19},{"ruleId":"195","severity":1,"message":"237","line":13,"column":8,"nodeType":"197","messageId":"198","endLine":13,"endColumn":14},{"ruleId":"195","severity":1,"message":"238","line":31,"column":17,"nodeType":"197","messageId":"198","endLine":31,"endColumn":24},{"ruleId":"195","severity":1,"message":"239","line":82,"column":12,"nodeType":"197","messageId":"198","endLine":82,"endColumn":32},{"ruleId":"195","severity":1,"message":"240","line":82,"column":33,"nodeType":"197","messageId":"198","endLine":82,"endColumn":56},{"ruleId":"195","severity":1,"message":"209","line":6,"column":8,"nodeType":"197","messageId":"198","endLine":6,"endColumn":18},{"ruleId":"195","severity":1,"message":"234","line":103,"column":17,"nodeType":"197","messageId":"198","endLine":103,"endColumn":27},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Main' is defined but never used.","'registNums' is assigned a value but never used.",["241"],["242"],"'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Axios' is defined but never used.","'DatePicker' is defined but never used.","'RoomTypes' is assigned a value but never used.","'Methods' is assigned a value but never used.","'Paths' is assigned a value but never used.","'setUserName' is assigned a value but never used.","'setBnum' is assigned a value but never used.","'setOwnerName' is assigned a value but never used.","'setUserSort' is assigned a value but never used.","'setEndStatus' is assigned a value but never used.","'setStatus' is assigned a value but never used.",["241"],["242"],["241"],["242"],["241"],["242"],"react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"s010100140\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useEffect\" is called in function \"s010100140\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'Fragment' is defined but never used.","'askDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.dataForm' and 'rNum'. Either include them or remove the dependency array.","ArrayExpression",["243"],"'payMethods' is assigned a value but never used.","'onRegistHandler' is assigned a value but never used.","'DialogTitle' is defined but never used.","'Button' is defined but never used.","'setData' is assigned a value but never used.","'tb_s10_ask010_Detail' is assigned a value but never used.","'setTb_s10_ask010_Detail' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},"Update the dependencies array to be: [props.dataForm, rNum]",{"range":"246","text":"247"},[2048,2050],"[props.dataForm, rNum]"]